

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Mar 05 20:40:00 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19  0000                     
    20                           ; Version 2.10
    21                           ; Generated 31/07/2019 GMT
    22                           ; 
    23                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4550 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     
    55                           	psect	idataCOMRAM
    56  007E96                     __pidataCOMRAM:
    57                           	opt callstack 0
    58                           
    59                           ;initializer for _name
    60  007E96  01                 	db	1
    61  007E97  00                 	db	0
    62  0000                     _SSPBUF	set	4041
    63  0000                     _SSPADD	set	4040
    64  0000                     _SSPCON2	set	4037
    65  0000                     _SSPCON1	set	4038
    66  0000                     _SSPSTAT	set	4039
    67  0000                     _TRISBbits	set	3987
    68  0000                     _ADCON1	set	4033
    69  0000                     _OSCCON	set	4051
    70  0000                     _ACKEN	set	32300
    71  0000                     _ACKDT	set	32301
    72  0000                     _RCEN	set	32299
    73  0000                     _RSEN	set	32297
    74  0000                     _PEN	set	32298
    75  0000                     _SEN	set	32296
    76                           
    77                           ; #config settings
    78  0000                     
    79                           	psect	cinit
    80  007EF8                     __pcinit:
    81                           	opt callstack 0
    82  007EF8                     start_initialization:
    83                           	opt callstack 0
    84  007EF8                     __initialization:
    85                           	opt callstack 0
    86                           
    87                           ; Initialize objects allocated to COMRAM (2 bytes)
    88                           ; load TBLPTR registers with __pidataCOMRAM
    89  007EF8  0E96               	movlw	low __pidataCOMRAM
    90  007EFA  6EF6               	movwf	tblptrl,c
    91  007EFC  0E7E               	movlw	high __pidataCOMRAM
    92  007EFE  6EF7               	movwf	tblptrh,c
    93  007F00  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    94  007F02  6EF8               	movwf	tblptru,c
    95  007F04  0009               	tblrd		*+	;fetch initializer
    96  007F06  CFF5 F018          	movff	tablat,__pdataCOMRAM
    97  007F0A  0009               	tblrd		*+	;fetch initializer
    98  007F0C  CFF5 F019          	movff	tablat,__pdataCOMRAM+1
    99                           
   100                           ; Clear objects allocated to COMRAM (11 bytes)
   101  007F10  EE00  F00D         	lfsr	0,__pbssCOMRAM
   102  007F14  0E0B               	movlw	11
   103  007F16                     clear_0:
   104  007F16  6AEE               	clrf	postinc0,c
   105  007F18  06E8               	decf	wreg,f,c
   106  007F1A  E1FD               	bnz	clear_0
   107  007F1C                     end_of_initialization:
   108                           	opt callstack 0
   109  007F1C                     __end_of__initialization:
   110                           	opt callstack 0
   111  007F1C  0100               	movlb	0
   112  007F1E  EFC8  F03F         	goto	_main	;jump to C main() function
   113                           
   114                           	psect	bssCOMRAM
   115  00000D                     __pbssCOMRAM:
   116                           	opt callstack 0
   117  00000D                     _dataSaved:
   118                           	opt callstack 0
   119  00000D                     	ds	9
   120  000016                     _i:
   121                           	opt callstack 0
   122  000016                     	ds	2
   123                           
   124                           	psect	dataCOMRAM
   125  000018                     __pdataCOMRAM:
   126                           	opt callstack 0
   127  000018                     _name:
   128                           	opt callstack 0
   129  000018                     	ds	2
   130                           
   131                           	psect	cstackCOMRAM
   132  000001                     __pcstackCOMRAM:
   133                           	opt callstack 0
   134  000001                     ??_ReadyI2C:
   135  000001                     
   136                           ; 1 bytes @ 0x0
   137  000001                     	ds	1
   138  000002                     SendI2C@data:
   139                           	opt callstack 0
   140                           
   141                           ; 1 bytes @ 0x1
   142  000002                     	ds	1
   143  000003                     WriteI2C@Register:
   144                           	opt callstack 0
   145                           
   146                           ; 1 bytes @ 0x2
   147  000003                     	ds	1
   148  000004                     WriteI2C@Data:
   149                           	opt callstack 0
   150                           
   151                           ; 2 bytes @ 0x3
   152  000004                     	ds	2
   153  000006                     WriteI2C@bytes:
   154                           	opt callstack 0
   155                           
   156                           ; 2 bytes @ 0x5
   157  000006                     	ds	2
   158  000008                     ??_WriteI2C:
   159                           
   160                           ; 1 bytes @ 0x7
   161  000008                     	ds	2
   162  00000A                     WriteI2C@Address:
   163                           	opt callstack 0
   164                           
   165                           ; 1 bytes @ 0x9
   166  00000A                     	ds	1
   167  00000B                     ??_main:
   168                           
   169                           ; 1 bytes @ 0xA
   170  00000B                     	ds	2
   171                           
   172 ;;
   173 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   174 ;;
   175 ;; *************** function _main *****************
   176 ;; Defined at:
   177 ;;		line 31 in file "main.c"
   178 ;; Parameters:    Size  Location     Type
   179 ;;		None
   180 ;; Auto vars:     Size  Location     Type
   181 ;;		None
   182 ;; Return value:  Size  Location     Type
   183 ;;                  1    wreg      void 
   184 ;; Registers used:
   185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   186 ;; Tracked objects:
   187 ;;		On entry : 0/0
   188 ;;		On exit  : 0/0
   189 ;;		Unchanged: 0/0
   190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   191 ;;      Params:         0       0       0       0       0       0       0       0       0
   192 ;;      Locals:         0       0       0       0       0       0       0       0       0
   193 ;;      Temps:          2       0       0       0       0       0       0       0       0
   194 ;;      Totals:         2       0       0       0       0       0       0       0       0
   195 ;;Total ram usage:        2 bytes
   196 ;; Hardware stack levels required when called:    3
   197 ;; This function calls:
   198 ;;		_WriteI2C
   199 ;;		_settings
   200 ;; This function is called by:
   201 ;;		Startup code after reset
   202 ;; This function uses a non-reentrant model
   203 ;;
   204                           
   205                           	psect	text0
   206  007F90                     __ptext0:
   207                           	opt callstack 0
   208  007F90                     _main:
   209                           	opt callstack 28
   210  007F90                     
   211                           ;main.c: 32:     ADCON1 = 0x0F;
   212  007F90  EC5A  F03F         	call	_settings	;wreg free
   213  007F94                     l884:
   214                           
   215                           ;main.c: 37:     SSPCON2 = 0;
   216  007F94  0EB5               	movlw	181
   217  007F96  6E03               	movwf	WriteI2C@Register^0,c
   218  007F98  0E18               	movlw	low _name
   219  007F9A  6E04               	movwf	WriteI2C@Data^0,c
   220  007F9C  0E00               	movlw	high _name
   221  007F9E  6E05               	movwf	(WriteI2C@Data+1)^0,c
   222  007FA0  0E00               	movlw	0
   223  007FA2  6E07               	movwf	(WriteI2C@bytes+1)^0,c
   224  007FA4  0E01               	movlw	1
   225  007FA6  6E06               	movwf	WriteI2C@bytes^0,c
   226  007FA8  0E30               	movlw	48
   227  007FAA  EC91  F03F         	call	_WriteI2C
   228  007FAE                     
   229                           ;main.c: 38:     SSPADD = 0x13;
   230  007FAE  0E02               	movlw	2
   231  007FB0  6E0C               	movwf	(??_main+1)^0,c
   232  007FB2  0E04               	movlw	4
   233  007FB4  6E0B               	movwf	??_main^0,c
   234  007FB6  0EBA               	movlw	186
   235  007FB8                     u97:
   236  007FB8  2EE8               	decfsz	wreg,f,c
   237  007FBA  D7FE               	bra	u97
   238  007FBC  2E0B               	decfsz	??_main^0,f,c
   239  007FBE  D7FC               	bra	u97
   240  007FC0  2E0C               	decfsz	(??_main+1)^0,f,c
   241  007FC2  D7FA               	bra	u97
   242  007FC4  D000               	nop2	
   243  007FC6                     
   244                           ;main.c: 39: }
   245  007FC6  0EB5               	movlw	181
   246  007FC8  6E03               	movwf	WriteI2C@Register^0,c
   247  007FCA  0E19               	movlw	low (_name+1)
   248  007FCC  6E04               	movwf	WriteI2C@Data^0,c
   249  007FCE  0E00               	movlw	high (_name+1)
   250  007FD0  6E05               	movwf	(WriteI2C@Data+1)^0,c
   251  007FD2  0E00               	movlw	0
   252  007FD4  6E07               	movwf	(WriteI2C@bytes+1)^0,c
   253  007FD6  0E01               	movlw	1
   254  007FD8  6E06               	movwf	WriteI2C@bytes^0,c
   255  007FDA  0E30               	movlw	48
   256  007FDC  EC91  F03F         	call	_WriteI2C
   257  007FE0                     
   258                           ;main.c: 40: 
   259  007FE0  0E02               	movlw	2
   260  007FE2  6E0C               	movwf	(??_main+1)^0,c
   261  007FE4  0E04               	movlw	4
   262  007FE6  6E0B               	movwf	??_main^0,c
   263  007FE8  0EBA               	movlw	186
   264  007FEA                     u107:
   265  007FEA  2EE8               	decfsz	wreg,f,c
   266  007FEC  D7FE               	bra	u107
   267  007FEE  2E0B               	decfsz	??_main^0,f,c
   268  007FF0  D7FC               	bra	u107
   269  007FF2  2E0C               	decfsz	(??_main+1)^0,f,c
   270  007FF4  D7FA               	bra	u107
   271  007FF6  D000               	nop2	
   272  007FF8  EFCA  F03F         	goto	l884
   273  007FFC  EF00  F000         	goto	start
   274  008000                     __end_of_main:
   275                           	opt callstack 0
   276                           
   277 ;; *************** function _settings *****************
   278 ;; Defined at:
   279 ;;		line 44 in file "main.c"
   280 ;; Parameters:    Size  Location     Type
   281 ;;		None
   282 ;; Auto vars:     Size  Location     Type
   283 ;;		None
   284 ;; Return value:  Size  Location     Type
   285 ;;                  1    wreg      void 
   286 ;; Registers used:
   287 ;;		wreg, status,2
   288 ;; Tracked objects:
   289 ;;		On entry : 0/0
   290 ;;		On exit  : 0/0
   291 ;;		Unchanged: 0/0
   292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   293 ;;      Params:         0       0       0       0       0       0       0       0       0
   294 ;;      Locals:         0       0       0       0       0       0       0       0       0
   295 ;;      Temps:          0       0       0       0       0       0       0       0       0
   296 ;;      Totals:         0       0       0       0       0       0       0       0       0
   297 ;;Total ram usage:        0 bytes
   298 ;; Hardware stack levels used:    1
   299 ;; This function calls:
   300 ;;		Nothing
   301 ;; This function is called by:
   302 ;;		_main
   303 ;; This function uses a non-reentrant model
   304 ;;
   305                           
   306                           	psect	text1
   307  007EB4                     __ptext1:
   308                           	opt callstack 0
   309  007EB4                     _settings:
   310                           	opt callstack 30
   311  007EB4                     
   312                           ;main.c: 45:     for (i = 0; i < bytes; i++) {
   313  007EB4  0E72               	movlw	114
   314  007EB6  6ED3               	movwf	211,c	;volatile
   315                           
   316                           ;main.c: 46:         SendI2C(*Data);
   317  007EB8  0E0F               	movlw	15
   318  007EBA  6EC1               	movwf	193,c	;volatile
   319  007EBC                     
   320                           ;main.c: 47:         Data++;
   321  007EBC  8093               	bsf	147,0,c	;volatile
   322  007EBE                     
   323                           ;main.c: 48:     }
   324  007EBE  8293               	bsf	147,1,c	;volatile
   325                           
   326                           ;main.c: 49:     StopI2C();
   327  007EC0  0E80               	movlw	128
   328  007EC2  6EC7               	movwf	199,c	;volatile
   329                           
   330                           ;main.c: 50:     _delay((unsigned long)((10 * 100)*(8000000/4000.0)));
   331  007EC4  0E28               	movlw	40
   332  007EC6  6EC6               	movwf	198,c	;volatile
   333                           
   334                           ;main.c: 51: }
   335  007EC8  0E00               	movlw	0
   336  007ECA  6EC5               	movwf	197,c	;volatile
   337                           
   338                           ;main.c: 52: 
   339  007ECC  0E13               	movlw	19
   340  007ECE  6EC8               	movwf	200,c	;volatile
   341  007ED0  0012               	return		;funcret
   342  007ED2                     __end_of_settings:
   343                           	opt callstack 0
   344                           
   345 ;; *************** function _WriteI2C *****************
   346 ;; Defined at:
   347 ;;		line 55 in file "main.c"
   348 ;; Parameters:    Size  Location     Type
   349 ;;  Address         1    wreg     unsigned char 
   350 ;;  Register        1    2[COMRAM] unsigned char 
   351 ;;  Data            2    3[COMRAM] PTR unsigned char 
   352 ;;		 -> name(2), 
   353 ;;  bytes           2    5[COMRAM] int 
   354 ;; Auto vars:     Size  Location     Type
   355 ;;  Address         1    9[COMRAM] unsigned char 
   356 ;; Return value:  Size  Location     Type
   357 ;;                  1    wreg      void 
   358 ;; Registers used:
   359 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   360 ;; Tracked objects:
   361 ;;		On entry : 0/0
   362 ;;		On exit  : 0/0
   363 ;;		Unchanged: 0/0
   364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   365 ;;      Params:         5       0       0       0       0       0       0       0       0
   366 ;;      Locals:         1       0       0       0       0       0       0       0       0
   367 ;;      Temps:          2       0       0       0       0       0       0       0       0
   368 ;;      Totals:         8       0       0       0       0       0       0       0       0
   369 ;;Total ram usage:        8 bytes
   370 ;; Hardware stack levels used:    1
   371 ;; Hardware stack levels required when called:    2
   372 ;; This function calls:
   373 ;;		_SendI2C
   374 ;;		_StartI2C
   375 ;;		_StopI2C
   376 ;; This function is called by:
   377 ;;		_main
   378 ;; This function uses a non-reentrant model
   379 ;;
   380                           
   381                           	psect	text2
   382  007F22                     __ptext2:
   383                           	opt callstack 0
   384  007F22                     _WriteI2C:
   385                           	opt callstack 28
   386                           
   387                           ;incstack = 0
   388                           ;WriteI2C@Address stored from wreg
   389  007F22  6E0A               	movwf	WriteI2C@Address^0,c
   390  007F24                     
   391                           ;main.c: 56: }
   392  007F24  EC4C  F03F         	call	_StartI2C	;wreg free
   393                           
   394                           ;main.c: 57: 
   395  007F28  500A               	movf	WriteI2C@Address^0,w,c
   396  007F2A  EC54  F03F         	call	_SendI2C
   397                           
   398                           ;main.c: 58: void ReadyI2C(void) {
   399  007F2E  5003               	movf	WriteI2C@Register^0,w,c
   400  007F30  EC54  F03F         	call	_SendI2C
   401  007F34                     
   402                           ;main.c: 59:     while ((SSPCON2 & 0x1F) || (SSPSTAT & 0x04));
   403  007F34  0E00               	movlw	0
   404  007F36  6E17               	movwf	(_i+1)^0,c
   405  007F38  0E00               	movlw	0
   406  007F3A  6E16               	movwf	_i^0,c
   407  007F3C  EFAB  F03F         	goto	l876
   408  007F40                     l870:
   409                           
   410                           ;main.c: 60: }
   411  007F40  C004  FFD9         	movff	WriteI2C@Data,fsr2l
   412  007F44  C005  FFDA         	movff	WriteI2C@Data+1,fsr2h
   413  007F48  50DF               	movf	indf2,w,c
   414  007F4A  EC54  F03F         	call	_SendI2C
   415  007F4E                     
   416                           ;main.c: 61: 
   417  007F4E  4A04               	infsnz	WriteI2C@Data^0,f,c
   418  007F50  2A05               	incf	(WriteI2C@Data+1)^0,f,c
   419  007F52                     
   420                           ;main.c: 62: void SendI2C(unsigned char data) {
   421  007F52  4A16               	infsnz	_i^0,f,c
   422  007F54  2A17               	incf	(_i+1)^0,f,c
   423  007F56                     l876:
   424  007F56  5006               	movf	WriteI2C@bytes^0,w,c
   425  007F58  5C16               	subwf	_i^0,w,c
   426  007F5A  5017               	movf	(_i+1)^0,w,c
   427  007F5C  0A80               	xorlw	128
   428  007F5E  6E08               	movwf	??_WriteI2C^0,c
   429  007F60  5007               	movf	(WriteI2C@bytes+1)^0,w,c
   430  007F62  0A80               	xorlw	128
   431  007F64  5808               	subwfb	??_WriteI2C^0,w,c
   432  007F66  A0D8               	btfss	status,0,c
   433  007F68  EFB8  F03F         	goto	u81
   434  007F6C  EFBA  F03F         	goto	u80
   435  007F70                     u81:
   436  007F70  EFA0  F03F         	goto	l870
   437  007F74                     u80:
   438  007F74                     
   439                           ;main.c: 63:     ReadyI2C();
   440  007F74  EC50  F03F         	call	_StopI2C	;wreg free
   441  007F78                     
   442                           ;main.c: 64:     SSPBUF = data;
   443  007F78  0E0B               	movlw	11
   444  007F7A  6E09               	movwf	(??_WriteI2C+1)^0,c
   445  007F7C  0E26               	movlw	38
   446  007F7E  6E08               	movwf	??_WriteI2C^0,c
   447  007F80  0E5E               	movlw	94
   448  007F82                     u117:
   449  007F82  2EE8               	decfsz	wreg,f,c
   450  007F84  D7FE               	bra	u117
   451  007F86  2E08               	decfsz	??_WriteI2C^0,f,c
   452  007F88  D7FC               	bra	u117
   453  007F8A  2E09               	decfsz	(??_WriteI2C+1)^0,f,c
   454  007F8C  D7FA               	bra	u117
   455  007F8E  0012               	return		;funcret
   456  007F90                     __end_of_WriteI2C:
   457                           	opt callstack 0
   458                           
   459 ;; *************** function _StopI2C *****************
   460 ;; Defined at:
   461 ;;		line 81 in file "main.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;		None
   464 ;; Auto vars:     Size  Location     Type
   465 ;;		None
   466 ;; Return value:  Size  Location     Type
   467 ;;                  1    wreg      void 
   468 ;; Registers used:
   469 ;;		wreg, status,2, status,0, cstack
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   475 ;;      Params:         0       0       0       0       0       0       0       0       0
   476 ;;      Locals:         0       0       0       0       0       0       0       0       0
   477 ;;      Temps:          0       0       0       0       0       0       0       0       0
   478 ;;      Totals:         0       0       0       0       0       0       0       0       0
   479 ;;Total ram usage:        0 bytes
   480 ;; Hardware stack levels used:    1
   481 ;; Hardware stack levels required when called:    1
   482 ;; This function calls:
   483 ;;		_ReadyI2C
   484 ;; This function is called by:
   485 ;;		_WriteI2C
   486 ;;		_ReadI2C
   487 ;; This function uses a non-reentrant model
   488 ;;
   489                           
   490                           	psect	text3
   491  007EA0                     __ptext3:
   492                           	opt callstack 0
   493  007EA0                     _StopI2C:
   494                           	opt callstack 28
   495  007EA0                     
   496                           ;main.c: 82:             *Data = ReceiveI2C(0);
   497  007EA0  EC69  F03F         	call	_ReadyI2C	;wreg free
   498  007EA4                     
   499                           ;main.c: 83:         }
   500  007EA4  84C5               	bsf	4037,2,c	;volatile
   501  007EA6  0012               	return		;funcret
   502  007EA8                     __end_of_StopI2C:
   503                           	opt callstack 0
   504                           
   505 ;; *************** function _StartI2C *****************
   506 ;; Defined at:
   507 ;;		line 67 in file "main.c"
   508 ;; Parameters:    Size  Location     Type
   509 ;;		None
   510 ;; Auto vars:     Size  Location     Type
   511 ;;		None
   512 ;; Return value:  Size  Location     Type
   513 ;;                  1    wreg      void 
   514 ;; Registers used:
   515 ;;		wreg, status,2, status,0, cstack
   516 ;; Tracked objects:
   517 ;;		On entry : 0/0
   518 ;;		On exit  : 0/0
   519 ;;		Unchanged: 0/0
   520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   521 ;;      Params:         0       0       0       0       0       0       0       0       0
   522 ;;      Locals:         0       0       0       0       0       0       0       0       0
   523 ;;      Temps:          0       0       0       0       0       0       0       0       0
   524 ;;      Totals:         0       0       0       0       0       0       0       0       0
   525 ;;Total ram usage:        0 bytes
   526 ;; Hardware stack levels used:    1
   527 ;; Hardware stack levels required when called:    1
   528 ;; This function calls:
   529 ;;		_ReadyI2C
   530 ;; This function is called by:
   531 ;;		_WriteI2C
   532 ;;		_ReadI2C
   533 ;; This function uses a non-reentrant model
   534 ;;
   535                           
   536                           	psect	text4
   537  007E98                     __ptext4:
   538                           	opt callstack 0
   539  007E98                     _StartI2C:
   540                           	opt callstack 28
   541  007E98                     
   542                           ;main.c: 68:     ReadyI2C();
   543  007E98  EC69  F03F         	call	_ReadyI2C	;wreg free
   544  007E9C                     
   545                           ;main.c: 69:     PEN = 1;
   546  007E9C  80C5               	bsf	4037,0,c	;volatile
   547  007E9E  0012               	return		;funcret
   548  007EA0                     __end_of_StartI2C:
   549                           	opt callstack 0
   550                           
   551 ;; *************** function _SendI2C *****************
   552 ;; Defined at:
   553 ;;		line 76 in file "main.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;  data            1    wreg     unsigned char 
   556 ;; Auto vars:     Size  Location     Type
   557 ;;  data            1    1[COMRAM] unsigned char 
   558 ;; Return value:  Size  Location     Type
   559 ;;                  1    wreg      void 
   560 ;; Registers used:
   561 ;;		wreg, status,2, status,0, cstack
   562 ;; Tracked objects:
   563 ;;		On entry : 0/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   567 ;;      Params:         0       0       0       0       0       0       0       0       0
   568 ;;      Locals:         1       0       0       0       0       0       0       0       0
   569 ;;      Temps:          0       0       0       0       0       0       0       0       0
   570 ;;      Totals:         1       0       0       0       0       0       0       0       0
   571 ;;Total ram usage:        1 bytes
   572 ;; Hardware stack levels used:    1
   573 ;; Hardware stack levels required when called:    1
   574 ;; This function calls:
   575 ;;		_ReadyI2C
   576 ;; This function is called by:
   577 ;;		_WriteI2C
   578 ;;		_ReadI2C
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           	psect	text5
   583  007EA8                     __ptext5:
   584                           	opt callstack 0
   585  007EA8                     _SendI2C:
   586                           	opt callstack 28
   587                           
   588                           ;incstack = 0
   589                           ;SendI2C@data stored from wreg
   590  007EA8  6E02               	movwf	SendI2C@data^0,c
   591  007EAA                     
   592                           ;main.c: 77:     SendI2C(Address | 0x01);
   593  007EAA  EC69  F03F         	call	_ReadyI2C	;wreg free
   594  007EAE                     
   595                           ;main.c: 78:     for (i = 0; i < bytes; i++) {
   596  007EAE  C002  FFC9         	movff	SendI2C@data,4041	;volatile
   597  007EB2  0012               	return		;funcret
   598  007EB4                     __end_of_SendI2C:
   599                           	opt callstack 0
   600                           
   601 ;; *************** function _ReadyI2C *****************
   602 ;; Defined at:
   603 ;;		line 72 in file "main.c"
   604 ;; Parameters:    Size  Location     Type
   605 ;;		None
   606 ;; Auto vars:     Size  Location     Type
   607 ;;		None
   608 ;; Return value:  Size  Location     Type
   609 ;;                  1    wreg      void 
   610 ;; Registers used:
   611 ;;		wreg, status,2, status,0
   612 ;; Tracked objects:
   613 ;;		On entry : 0/0
   614 ;;		On exit  : 0/0
   615 ;;		Unchanged: 0/0
   616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   617 ;;      Params:         0       0       0       0       0       0       0       0       0
   618 ;;      Locals:         0       0       0       0       0       0       0       0       0
   619 ;;      Temps:          1       0       0       0       0       0       0       0       0
   620 ;;      Totals:         1       0       0       0       0       0       0       0       0
   621 ;;Total ram usage:        1 bytes
   622 ;; Hardware stack levels used:    1
   623 ;; This function calls:
   624 ;;		Nothing
   625 ;; This function is called by:
   626 ;;		_StartI2C
   627 ;;		_SendI2C
   628 ;;		_StopI2C
   629 ;;		_RepeatedStartI2C
   630 ;;		_ReceiveI2C
   631 ;; This function uses a non-reentrant model
   632 ;;
   633                           
   634                           	psect	text6
   635  007ED2                     __ptext6:
   636                           	opt callstack 0
   637  007ED2                     _ReadyI2C:
   638                           	opt callstack 28
   639  007ED2                     l776:
   640  007ED2  CFC5 F001          	movff	4037,??_ReadyI2C	;volatile
   641  007ED6  0E1F               	movlw	31
   642  007ED8  1601               	andwf	??_ReadyI2C^0,f,c
   643  007EDA  A4D8               	btfss	status,2,c
   644  007EDC  EF72  F03F         	goto	u11
   645  007EE0  EF74  F03F         	goto	u10
   646  007EE4                     u11:
   647  007EE4  EF69  F03F         	goto	l776
   648  007EE8                     u10:
   649  007EE8  B4C7               	btfsc	199,2,c	;volatile
   650  007EEA  EF79  F03F         	goto	u21
   651  007EEE  EF7B  F03F         	goto	u20
   652  007EF2                     u21:
   653  007EF2  EF69  F03F         	goto	l776
   654  007EF6                     u20:
   655  007EF6  0012               	return		;funcret
   656  007EF8                     __end_of_ReadyI2C:
   657                           	opt callstack 0
   658  0000                     
   659                           	psect	rparam
   660  0000                     tosu	equ	0xFFF
   661                           tosh	equ	0xFFE
   662                           tosl	equ	0xFFD
   663                           stkptr	equ	0xFFC
   664                           pclatu	equ	0xFFB
   665                           pclath	equ	0xFFA
   666                           pcl	equ	0xFF9
   667                           tblptru	equ	0xFF8
   668                           tblptrh	equ	0xFF7
   669                           tblptrl	equ	0xFF6
   670                           tablat	equ	0xFF5
   671                           prodh	equ	0xFF4
   672                           prodl	equ	0xFF3
   673                           indf0	equ	0xFEF
   674                           postinc0	equ	0xFEE
   675                           postdec0	equ	0xFED
   676                           preinc0	equ	0xFEC
   677                           plusw0	equ	0xFEB
   678                           fsr0h	equ	0xFEA
   679                           fsr0l	equ	0xFE9
   680                           wreg	equ	0xFE8
   681                           indf1	equ	0xFE7
   682                           postinc1	equ	0xFE6
   683                           postdec1	equ	0xFE5
   684                           preinc1	equ	0xFE4
   685                           plusw1	equ	0xFE3
   686                           fsr1h	equ	0xFE2
   687                           fsr1l	equ	0xFE1
   688                           bsr	equ	0xFE0
   689                           indf2	equ	0xFDF
   690                           postinc2	equ	0xFDE
   691                           postdec2	equ	0xFDD
   692                           preinc2	equ	0xFDC
   693                           plusw2	equ	0xFDB
   694                           fsr2h	equ	0xFDA
   695                           fsr2l	equ	0xFD9
   696                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     12      25
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    WriteI2C@Data	PTR unsigned char  size(2) Largest target is 2
		 -> name(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_WriteI2C
    _WriteI2C->_SendI2C
    _StopI2C->_ReadyI2C
    _StartI2C->_ReadyI2C
    _SendI2C->_ReadyI2C

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     560
                                             10 COMRAM     2     2      0
                           _WriteI2C
                           _settings
 ---------------------------------------------------------------------------------
 (1) _settings                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _WriteI2C                                             8     3      5     560
                                              2 COMRAM     8     3      5
                            _SendI2C
                           _StartI2C
                            _StopI2C
 ---------------------------------------------------------------------------------
 (2) _StopI2C                                              0     0      0       0
                           _ReadyI2C
 ---------------------------------------------------------------------------------
 (2) _StartI2C                                             0     0      0       0
                           _ReadyI2C
 ---------------------------------------------------------------------------------
 (2) _SendI2C                                              1     1      0      15
                                              1 COMRAM     1     1      0
                           _ReadyI2C
 ---------------------------------------------------------------------------------
 (3) _ReadyI2C                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _WriteI2C
     _SendI2C
       _ReadyI2C
     _StartI2C
       _ReadyI2C
     _StopI2C
       _ReadyI2C
   _settings

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      C      19       1       26.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      19      20        0.0%
DATA                 0      0      19       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Mar 05 20:40:00 2021

                      _i 0016                       l63 7ED0                       l72 7E9E  
                     l81 7EB2                       l84 7EA6                       l69 7F8E  
                     l78 7EF6                       u10 7EE8                       u11 7EE4  
                     u20 7EF6                       u21 7EF2                       u80 7F74  
                     u81 7F70                       u97 7FB8                      l780 7E98  
                    l774 7ED2                      l782 7E9C                      l790 7EA4  
                    l870 7F40                      l776 7ED2                      l784 7EAA  
                    l880 7F78                      l872 7F4E                      l792 7EB4  
                    l778 7EE8                      l786 7EAE                      l874 7F52  
                    l866 7F24                      l794 7EBC                      l890 7FE0  
                    l882 7F90                      l788 7EA0                      l876 7F56  
                    l868 7F34                      l796 7EBE                      l884 7F94  
                    l878 7F74                      l886 7FAE                      l888 7FC6  
                    u107 7FEA                      u117 7F82                      _PEN 007E2A  
                    _SEN 007E28                      wreg 000FE8             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     _RCEN 007E2B                     _RSEN 007E29  
                   _main 7F90                     _name 0018                     fsr2h 000FDA  
                   indf2 000FDF                     fsr2l 000FD9                     start 0000  
           ___param_bank 000000          __end_of_SendI2C 7EB4          __end_of_StopI2C 7EA8  
                  ?_main 0001                    _ACKEN 007E2C                    _ACKDT 007E2D  
                  tablat 000FF5                    status 000FD8          __initialization 7EF8  
           __end_of_main 8000         __end_of_ReadyI2C 7EF8                   ??_main 000B  
          __activetblptr 000000              SendI2C@data 0002         __end_of_StartI2C 7EA0  
                 _ADCON1 000FC1         __end_of_WriteI2C 7F90                   _OSCCON 000FD3  
                 _SSPADD 000FC8                   _SSPBUF 000FC9                ??_SendI2C 0002  
              ??_StopI2C 0002                   clear_0 7F16             WriteI2C@Data 0004  
           __pdataCOMRAM 0018         __end_of_settings 7ED2                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 7F1C            ___rparam_used 000001           __pcstackCOMRAM 0001  
              ?_ReadyI2C 0001                ?_StartI2C 0001                ?_WriteI2C 0003  
                _SSPCON1 000FC6                  _SSPCON2 000FC5                  _SSPSTAT 000FC7  
             ??_ReadyI2C 0001                  _SendI2C 7EA8                  __Hparam 0000  
                __Lparam 0000                  _StopI2C 7EA0                ?_settings 0001  
             ??_StartI2C 0002                  __pcinit 7EF8               ??_WriteI2C 0008  
                __ramtop 0800                  __ptext0 7F90                  __ptext1 7EB4  
                __ptext2 7F22                  __ptext3 7EA0                  __ptext4 7E98  
                __ptext5 7EA8                  __ptext6 7ED2     end_of_initialization 7F1C  
          WriteI2C@bytes 0006               ??_settings 0001                  postinc0 000FEE  
              _TRISBbits 000F93         WriteI2C@Register 0003            __pidataCOMRAM 7E96  
    start_initialization 7EF8        __size_of_ReadyI2C 0026        __size_of_StartI2C 0008  
      __size_of_WriteI2C 006E              __pbssCOMRAM 000D                _dataSaved 000D  
               ?_SendI2C 0001                 ?_StopI2C 0001        __size_of_settings 001E  
        WriteI2C@Address 000A                 _ReadyI2C 7ED2                 __Hrparam 0000  
       __size_of_SendI2C 000C                 __Lrparam 0000                 _StartI2C 7E98  
       __size_of_StopI2C 0008                 _WriteI2C 7F22            __size_of_main 0070  
               _settings 7EB4      __CFG_FOSC$INTOSC_HS 000000  
