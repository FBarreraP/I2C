

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Mar 19 21:21:32 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    36  0000                     
    37                           ; Version 2.10
    38                           ; Generated 31/07/2019 GMT
    39                           ; 
    40                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F4550 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     _PORTC	set	3970
    72  0000                     _SSPSTATbits	set	4039
    73  0000                     _SSPBUF	set	4041
    74  0000                     _SSPCON1bits	set	4038
    75  0000                     _SSPCON2	set	4037
    76  0000                     _SSPCON1	set	4038
    77  0000                     _SSPADD	set	4040
    78  0000                     _SSPSTAT	set	4039
    79  0000                     _TRISBbits	set	3987
    80  0000                     _LATE	set	3981
    81  0000                     _TRISE	set	3990
    82  0000                     _LATD	set	3980
    83  0000                     _TRISD	set	3989
    84  0000                     _ADCON1	set	4033
    85  0000                     _OSCCON	set	4051
    86  0000                     _LATE0	set	31848
    87  0000                     _LATE1	set	31849
    88  0000                     _SSPM3	set	32307
    89  0000                     _BF	set	32312
    90  0000                     _SSPIF	set	31987
    91  0000                     _SSPIE	set	31979
    92  0000                     _PEIE	set	32662
    93  0000                     _GIE	set	32663
    94                           
    95                           	psect	smallconst
    96  000800                     __psmallconst:
    97                           	opt callstack 0
    98  000800  00                 	db	0
    99  000801                     STR_1:
   100  000801  25                 	db	37
   101  000802  23                 	db	35
   102  000803  58                 	db	88	;'X'
   103  000804  2C                 	db	44
   104  000805  25                 	db	37
   105  000806  23                 	db	35
   106  000807  78                 	db	120	;'x'
   107  000808  2C                 	db	44
   108  000809  25                 	db	37
   109  00080A  23                 	db	35
   110  00080B  58                 	db	88	;'X'
   111  00080C  00                 	db	0
   112  00080D                     STR_2:
   113  00080D  25                 	db	37
   114  00080E  23                 	db	35
   115  00080F  78                 	db	120	;'x'
   116  000810  2C                 	db	44
   117  000811  25                 	db	37
   118  000812  23                 	db	35
   119  000813  58                 	db	88	;'X'
   120  000814  2C                 	db	44
   121  000815  25                 	db	37
   122  000816  23                 	db	35
   123  000817  78                 	db	120	;'x'
   124  000818  00                 	db	0
   125                           
   126                           ; #config settings
   127  000819  00                 	db	0	; dummy byte at the end
   128  0000                     
   129                           	psect	cinit
   130  00138E                     __pcinit:
   131                           	opt callstack 0
   132  00138E                     start_initialization:
   133                           	opt callstack 0
   134  00138E                     __initialization:
   135                           	opt callstack 0
   136                           
   137                           ; Clear objects allocated to BANK0 (78 bytes)
   138  00138E  EE00  F060         	lfsr	0,__pbssBANK0
   139  001392  0E4E               	movlw	78
   140  001394                     clear_0:
   141  001394  6AEE               	clrf	postinc0,c
   142  001396  06E8               	decf	wreg,f,c
   143  001398  E1FD               	bnz	clear_0
   144                           
   145                           ; Clear objects allocated to COMRAM (3 bytes)
   146  00139A  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   147  00139C  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   148  00139E  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   149  0013A0                     end_of_initialization:
   150                           	opt callstack 0
   151  0013A0                     __end_of__initialization:
   152                           	opt callstack 0
   153  0013A0  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   154  0013A2  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   155  0013A4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   156  0013A6  6EF8               	movwf	tblptru,c
   157  0013A8  0100               	movlb	0
   158  0013AA  EFED  F009         	goto	_main	;jump to C main() function
   159                           
   160                           	psect	bssCOMRAM
   161  00005A                     __pbssCOMRAM:
   162                           	opt callstack 0
   163  00005A                     _flags:
   164                           	opt callstack 0
   165  00005A                     	ds	2
   166  00005C                     _i:
   167                           	opt callstack 0
   168  00005C                     	ds	1
   169                           
   170                           	psect	bssBANK0
   171  000060                     __pbssBANK0:
   172                           	opt callstack 0
   173  000060                     _text:
   174                           	opt callstack 0
   175  000060                     	ds	6
   176  000066                     _nout:
   177                           	opt callstack 0
   178  000066                     	ds	2
   179  000068                     _width:
   180                           	opt callstack 0
   181  000068                     	ds	2
   182  00006A                     _prec:
   183                           	opt callstack 0
   184  00006A                     	ds	2
   185  00006C                     _j:
   186                           	opt callstack 0
   187  00006C                     	ds	1
   188  00006D                     _byte:
   189                           	opt callstack 0
   190  00006D                     	ds	1
   191  00006E                     _mibuffer:
   192                           	opt callstack 0
   193  00006E                     	ds	1
   194  00006F                     _buffer:
   195                           	opt callstack 0
   196  00006F                     	ds	1
   197  000070                     _dbuf:
   198                           	opt callstack 0
   199  000070                     	ds	32
   200  000090                     _texto2:
   201                           	opt callstack 0
   202  000090                     	ds	15
   203  00009F                     _texto:
   204                           	opt callstack 0
   205  00009F                     	ds	15
   206                           
   207                           	psect	cstackBANK0
   208  0000AE                     __pcstackBANK0:
   209                           	opt callstack 0
   210  0000AE                     ?_vfprintf:
   211                           	opt callstack 0
   212  0000AE                     vfprintf@fp:
   213                           	opt callstack 0
   214                           
   215                           ; 2 bytes @ 0x0
   216  0000AE                     	ds	2
   217  0000B0                     vfprintf@fmt:
   218                           	opt callstack 0
   219                           
   220                           ; 2 bytes @ 0x2
   221  0000B0                     	ds	2
   222  0000B2                     vfprintf@ap:
   223                           	opt callstack 0
   224                           
   225                           ; 2 bytes @ 0x4
   226  0000B2                     	ds	2
   227  0000B4                     vfprintf@cfmt:
   228                           	opt callstack 0
   229                           
   230                           ; 2 bytes @ 0x6
   231  0000B4                     	ds	2
   232  0000B6                     ?_sprintf:
   233                           	opt callstack 0
   234  0000B6                     sprintf@s:
   235                           	opt callstack 0
   236                           
   237                           ; 2 bytes @ 0x8
   238  0000B6                     	ds	2
   239  0000B8                     sprintf@fmt:
   240                           	opt callstack 0
   241                           
   242                           ; 2 bytes @ 0xA
   243  0000B8                     	ds	10
   244  0000C2                     sprintf@ap:
   245                           	opt callstack 0
   246                           
   247                           ; 2 bytes @ 0x14
   248  0000C2                     	ds	2
   249  0000C4                     sprintf@f:
   250                           	opt callstack 0
   251                           
   252                           ; 6 bytes @ 0x16
   253  0000C4                     	ds	6
   254  0000CA                     ??_Data1LCD:
   255  0000CA                     ??_Data2LCD:
   256                           
   257                           ; 1 bytes @ 0x1C
   258  0000CA                     	ds	2
   259                           
   260                           	psect	cstackCOMRAM
   261  000001                     __pcstackCOMRAM:
   262                           	opt callstack 0
   263  000001                     ??_Slave_I2C:
   264  000001                     
   265                           ; 1 bytes @ 0x0
   266  000001                     	ds	2
   267  000003                     ?_strlen:
   268                           	opt callstack 0
   269  000003                     ?_isupper:
   270                           	opt callstack 0
   271  000003                     ?_isalpha:
   272                           	opt callstack 0
   273  000003                     ?_islower:
   274                           	opt callstack 0
   275  000003                     LCD@data:
   276                           	opt callstack 0
   277  000003                     isalpha@c:
   278                           	opt callstack 0
   279  000003                     isupper@c:
   280                           	opt callstack 0
   281  000003                     fputc@c:
   282                           	opt callstack 0
   283  000003                     strlen@s:
   284                           	opt callstack 0
   285  000003                     islower@c:
   286                           	opt callstack 0
   287                           
   288                           ; 2 bytes @ 0x2
   289  000003                     	ds	1
   290  000004                     SettingsLCD@word:
   291                           	opt callstack 0
   292  000004                     WriteLCD@word:
   293                           	opt callstack 0
   294                           
   295                           ; 1 bytes @ 0x3
   296  000004                     	ds	1
   297  000005                     ??_isupper:
   298  000005                     ??_isalpha:
   299  000005                     ??_islower:
   300  000005                     fputc@fp:
   301                           	opt callstack 0
   302  000005                     strlen@a:
   303                           	opt callstack 0
   304                           
   305                           ; 2 bytes @ 0x4
   306  000005                     	ds	2
   307  000007                     ??_fputc:
   308                           
   309                           ; 1 bytes @ 0x6
   310  000007                     	ds	2
   311  000009                     ?_toupper:
   312                           	opt callstack 0
   313  000009                     toupper@c:
   314                           	opt callstack 0
   315                           
   316                           ; 2 bytes @ 0x8
   317  000009                     	ds	2
   318  00000B                     ??_toupper:
   319                           
   320                           ; 1 bytes @ 0xA
   321  00000B                     	ds	1
   322  00000C                     fputs@s:
   323                           	opt callstack 0
   324                           
   325                           ; 2 bytes @ 0xB
   326  00000C                     	ds	2
   327  00000E                     fputs@fp:
   328                           	opt callstack 0
   329                           
   330                           ; 2 bytes @ 0xD
   331  00000E                     	ds	1
   332  00000F                     _toupper$936:
   333                           	opt callstack 0
   334                           
   335                           ; 2 bytes @ 0xE
   336  00000F                     	ds	1
   337  000010                     fputs@c:
   338                           	opt callstack 0
   339                           
   340                           ; 1 bytes @ 0xF
   341  000010                     	ds	1
   342  000011                     fputs@i:
   343                           	opt callstack 0
   344                           
   345                           ; 2 bytes @ 0x10
   346  000011                     	ds	2
   347  000013                     ?_pad:
   348                           	opt callstack 0
   349  000013                     pad@fp:
   350                           	opt callstack 0
   351                           
   352                           ; 2 bytes @ 0x12
   353  000013                     	ds	2
   354  000015                     pad@buf:
   355                           	opt callstack 0
   356                           
   357                           ; 2 bytes @ 0x14
   358  000015                     	ds	2
   359  000017                     pad@p:
   360                           	opt callstack 0
   361                           
   362                           ; 2 bytes @ 0x16
   363  000017                     	ds	2
   364  000019                     ??_pad:
   365                           
   366                           ; 1 bytes @ 0x18
   367  000019                     	ds	1
   368  00001A                     pad@i:
   369                           	opt callstack 0
   370                           
   371                           ; 2 bytes @ 0x19
   372  00001A                     	ds	2
   373  00001C                     pad@w:
   374                           	opt callstack 0
   375                           
   376                           ; 2 bytes @ 0x1B
   377  00001C                     	ds	2
   378  00001E                     ?_xtoa:
   379                           	opt callstack 0
   380  00001E                     xtoa@fp:
   381                           	opt callstack 0
   382                           
   383                           ; 2 bytes @ 0x1D
   384  00001E                     	ds	2
   385  000020                     xtoa@d:
   386                           	opt callstack 0
   387                           
   388                           ; 8 bytes @ 0x1F
   389  000020                     	ds	8
   390  000028                     xtoa@x:
   391                           	opt callstack 0
   392                           
   393                           ; 1 bytes @ 0x27
   394  000028                     	ds	1
   395  000029                     ??_xtoa:
   396                           
   397                           ; 1 bytes @ 0x28
   398  000029                     	ds	8
   399  000031                     _xtoa$395:
   400                           	opt callstack 0
   401                           
   402                           ; 2 bytes @ 0x30
   403  000031                     	ds	2
   404  000033                     _xtoa$396:
   405                           	opt callstack 0
   406                           
   407                           ; 2 bytes @ 0x32
   408  000033                     	ds	2
   409  000035                     xtoa@p:
   410                           	opt callstack 0
   411                           
   412                           ; 2 bytes @ 0x34
   413  000035                     	ds	2
   414  000037                     xtoa@w:
   415                           	opt callstack 0
   416                           
   417                           ; 2 bytes @ 0x36
   418  000037                     	ds	2
   419  000039                     xtoa@n:
   420                           	opt callstack 0
   421                           
   422                           ; 8 bytes @ 0x38
   423  000039                     	ds	8
   424  000041                     xtoa@i:
   425                           	opt callstack 0
   426                           
   427                           ; 2 bytes @ 0x40
   428  000041                     	ds	2
   429  000043                     xtoa@c:
   430                           	opt callstack 0
   431                           
   432                           ; 2 bytes @ 0x42
   433  000043                     	ds	2
   434  000045                     ?_vfpfcnvrt:
   435                           	opt callstack 0
   436  000045                     vfpfcnvrt@fp:
   437                           	opt callstack 0
   438                           
   439                           ; 2 bytes @ 0x44
   440  000045                     	ds	2
   441  000047                     vfpfcnvrt@fmt:
   442                           	opt callstack 0
   443                           
   444                           ; 2 bytes @ 0x46
   445  000047                     	ds	2
   446  000049                     vfpfcnvrt@ap:
   447                           	opt callstack 0
   448                           
   449                           ; 2 bytes @ 0x48
   450  000049                     	ds	2
   451  00004B                     ??_vfpfcnvrt:
   452                           
   453                           ; 1 bytes @ 0x4A
   454  00004B                     	ds	4
   455  00004F                     vfpfcnvrt@llu:
   456                           	opt callstack 0
   457                           
   458                           ; 8 bytes @ 0x4E
   459  00004F                     	ds	8
   460  000057                     vfpfcnvrt@c:
   461                           	opt callstack 0
   462                           
   463                           ; 1 bytes @ 0x56
   464  000057                     	ds	1
   465  000058                     vfpfcnvrt@done:
   466                           	opt callstack 0
   467                           
   468                           ; 2 bytes @ 0x57
   469  000058                     	ds	2
   470  00005A                     
   471                           ; 1 bytes @ 0x59
   472 ;;
   473 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   474 ;;
   475 ;; *************** function _main *****************
   476 ;; Defined at:
   477 ;;		line 43 in file "main.c"
   478 ;; Parameters:    Size  Location     Type
   479 ;;		None
   480 ;; Auto vars:     Size  Location     Type
   481 ;;		None
   482 ;; Return value:  Size  Location     Type
   483 ;;                  1    wreg      void 
   484 ;; Registers used:
   485 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   486 ;; Tracked objects:
   487 ;;		On entry : 0/0
   488 ;;		On exit  : 0/0
   489 ;;		Unchanged: 0/0
   490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   491 ;;      Params:         0       0       0       0       0       0       0       0       0
   492 ;;      Locals:         0       0       0       0       0       0       0       0       0
   493 ;;      Temps:          0       0       0       0       0       0       0       0       0
   494 ;;      Totals:         0       0       0       0       0       0       0       0       0
   495 ;;Total ram usage:        0 bytes
   496 ;; Hardware stack levels required when called:   10
   497 ;; This function calls:
   498 ;;		_Data1LCD
   499 ;;		_Data2LCD
   500 ;;		_settings
   501 ;; This function is called by:
   502 ;;		Startup code after reset
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506                           	psect	text0
   507  0013DA                     __ptext0:
   508                           	opt callstack 0
   509  0013DA                     _main:
   510                           	opt callstack 21
   511  0013DA                     
   512                           ;main.c: 44:     settings();
   513  0013DA  ECCF  F008         	call	_settings	;wreg free
   514  0013DE                     l1974:
   515                           
   516                           ;main.c: 46:         Data1LCD();
   517  0013DE  EC32  F008         	call	_Data1LCD	;wreg free
   518  0013E2                     
   519                           ;main.c: 47:         Data2LCD();
   520  0013E2  ECF5  F007         	call	_Data2LCD	;wreg free
   521  0013E6  EFEF  F009         	goto	l1974
   522  0013EA  EF07  F000         	goto	start
   523  0013EE                     __end_of_main:
   524                           	opt callstack 0
   525                           
   526 ;; *************** function _settings *****************
   527 ;; Defined at:
   528 ;;		line 51 in file "main.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;		None
   531 ;; Auto vars:     Size  Location     Type
   532 ;;		None
   533 ;; Return value:  Size  Location     Type
   534 ;;                  1    wreg      void 
   535 ;; Registers used:
   536 ;;		wreg, status,2, status,0, cstack
   537 ;; Tracked objects:
   538 ;;		On entry : 0/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   542 ;;      Params:         0       0       0       0       0       0       0       0       0
   543 ;;      Locals:         0       0       0       0       0       0       0       0       0
   544 ;;      Temps:          0       0       0       0       0       0       0       0       0
   545 ;;      Totals:         0       0       0       0       0       0       0       0       0
   546 ;;Total ram usage:        0 bytes
   547 ;; Hardware stack levels used:    1
   548 ;; Hardware stack levels required when called:    3
   549 ;; This function calls:
   550 ;;		_SettingsLCD
   551 ;; This function is called by:
   552 ;;		_main
   553 ;; This function uses a non-reentrant model
   554 ;;
   555                           
   556                           	psect	text1
   557  00119E                     __ptext1:
   558                           	opt callstack 0
   559  00119E                     _settings:
   560                           	opt callstack 27
   561  00119E                     
   562                           ;main.c: 52:     OSCCON = 0x72;
   563  00119E  0E72               	movlw	114
   564  0011A0  6ED3               	movwf	211,c	;volatile
   565                           
   566                           ;main.c: 53:     ADCON1 = 0x0F;
   567  0011A2  0E0F               	movlw	15
   568  0011A4  6EC1               	movwf	193,c	;volatile
   569                           
   570                           ;main.c: 55:     TRISD = 0x00;
   571  0011A6  0E00               	movlw	0
   572  0011A8  6E95               	movwf	149,c	;volatile
   573                           
   574                           ;main.c: 56:     LATD = 0x00;
   575  0011AA  0E00               	movlw	0
   576  0011AC  6E8C               	movwf	140,c	;volatile
   577                           
   578                           ;main.c: 57:     TRISE = 0x00;
   579  0011AE  0E00               	movlw	0
   580  0011B0  6E96               	movwf	150,c	;volatile
   581                           
   582                           ;main.c: 58:     LATE = 0x00;
   583  0011B2  0E00               	movlw	0
   584  0011B4  6E8D               	movwf	141,c	;volatile
   585  0011B6                     
   586                           ;main.c: 59:     SettingsLCD(0x02);
   587  0011B6  0E02               	movlw	2
   588  0011B8  ECE2  F009         	call	_SettingsLCD
   589  0011BC                     
   590                           ;main.c: 60:     SettingsLCD(0x06);
   591  0011BC  0E06               	movlw	6
   592  0011BE  ECE2  F009         	call	_SettingsLCD
   593  0011C2                     
   594                           ;main.c: 61:     SettingsLCD(0x0F);
   595  0011C2  0E0F               	movlw	15
   596  0011C4  ECE2  F009         	call	_SettingsLCD
   597  0011C8                     
   598                           ;main.c: 62:     SettingsLCD(0x28);
   599  0011C8  0E28               	movlw	40
   600  0011CA  ECE2  F009         	call	_SettingsLCD
   601  0011CE                     
   602                           ;main.c: 63:     SettingsLCD(0x01);
   603  0011CE  0E01               	movlw	1
   604  0011D0  ECE2  F009         	call	_SettingsLCD
   605  0011D4                     
   606                           ;main.c: 65:     TRISBbits.RB0 = 1;
   607  0011D4  8093               	bsf	147,0,c	;volatile
   608  0011D6                     
   609                           ;main.c: 66:     TRISBbits.RB1 = 1;
   610  0011D6  8293               	bsf	147,1,c	;volatile
   611  0011D8                     
   612                           ;main.c: 67:     SSPSTAT = 0x80;
   613  0011D8  0E80               	movlw	128
   614  0011DA  6EC7               	movwf	199,c	;volatile
   615  0011DC                     
   616                           ;main.c: 68:     SSPADD = 0x30;
   617  0011DC  0E30               	movlw	48
   618  0011DE  6EC8               	movwf	200,c	;volatile
   619  0011E0                     
   620                           ;main.c: 69:     SSPCON1 = 0x36;
   621  0011E0  0E36               	movlw	54
   622  0011E2  6EC6               	movwf	198,c	;volatile
   623  0011E4                     
   624                           ;main.c: 70:     SSPCON2 = 0x01;
   625  0011E4  0E01               	movlw	1
   626  0011E6  6EC5               	movwf	197,c	;volatile
   627  0011E8                     
   628                           ;main.c: 71:     GIE = 1;
   629  0011E8  8EF2               	bsf	4082,7,c	;volatile
   630  0011EA                     
   631                           ;main.c: 72:     PEIE = 1;
   632  0011EA  8CF2               	bsf	4082,6,c	;volatile
   633  0011EC                     
   634                           ;main.c: 73:     SSPIE = 1;
   635  0011EC  869D               	bsf	3997,3,c	;volatile
   636  0011EE                     
   637                           ;main.c: 74:     SSPIF = 0;
   638  0011EE  969E               	bcf	3998,3,c	;volatile
   639  0011F0  0012               	return		;funcret
   640  0011F2                     __end_of_settings:
   641                           	opt callstack 0
   642                           
   643 ;; *************** function _Data2LCD *****************
   644 ;; Defined at:
   645 ;;		line 143 in file "main.c"
   646 ;; Parameters:    Size  Location     Type
   647 ;;		None
   648 ;; Auto vars:     Size  Location     Type
   649 ;;		None
   650 ;; Return value:  Size  Location     Type
   651 ;;                  1    wreg      void 
   652 ;; Registers used:
   653 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   654 ;; Tracked objects:
   655 ;;		On entry : 0/0
   656 ;;		On exit  : 0/0
   657 ;;		Unchanged: 0/0
   658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   659 ;;      Params:         0       0       0       0       0       0       0       0       0
   660 ;;      Locals:         0       0       0       0       0       0       0       0       0
   661 ;;      Temps:          0       2       0       0       0       0       0       0       0
   662 ;;      Totals:         0       2       0       0       0       0       0       0       0
   663 ;;Total ram usage:        2 bytes
   664 ;; Hardware stack levels used:    1
   665 ;; Hardware stack levels required when called:    9
   666 ;; This function calls:
   667 ;;		_SettingsLCD
   668 ;;		_WriteLCD
   669 ;;		_sprintf
   670 ;;		_strlen
   671 ;; This function is called by:
   672 ;;		_main
   673 ;; This function uses a non-reentrant model
   674 ;;
   675                           
   676                           	psect	text2
   677  000FEA                     __ptext2:
   678                           	opt callstack 0
   679  000FEA                     _Data2LCD:
   680                           	opt callstack 21
   681  000FEA                     
   682                           ;main.c: 144:     SettingsLCD(0xC0);
   683  000FEA  0EC0               	movlw	192
   684  000FEC  ECE2  F009         	call	_SettingsLCD
   685  000FF0                     
   686                           ;main.c: 145:     sprintf(texto2,"%#x,%#X,%#x",text[3],text[4],text[5]);
   687  000FF0  0E90               	movlw	low _texto2
   688  000FF2  0100               	movlb	0	; () banked
   689  000FF4  6FB6               	movwf	sprintf@s& (0+255),b
   690  000FF6  0E00               	movlw	high _texto2
   691  000FF8  6FB7               	movwf	(sprintf@s+1)& (0+255),b
   692  000FFA  0E0D               	movlw	low STR_2
   693  000FFC  6FB8               	movwf	sprintf@fmt& (0+255),b
   694  000FFE  0E08               	movlw	high STR_2
   695  001000  6FB9               	movwf	(sprintf@fmt+1)& (0+255),b
   696  001002  C063  F0BA         	movff	_text+3,?_sprintf+4
   697  001006  6BBB               	clrf	(?_sprintf+5)& (0+255),b
   698  001008  C064  F0BC         	movff	_text+4,?_sprintf+6
   699  00100C  6BBD               	clrf	(?_sprintf+7)& (0+255),b
   700  00100E  C065  F0BE         	movff	_text+5,?_sprintf+8
   701  001012  6BBF               	clrf	(?_sprintf+9)& (0+255),b
   702  001014  ECF9  F008         	call	_sprintf	;wreg free
   703  001018                     
   704                           ;main.c: 146:     for(j=0; j<strlen(texto); j++){
   705  001018  0E00               	movlw	0
   706  00101A  0100               	movlb	0	; () banked
   707  00101C  6F6C               	movwf	_j& (0+255),b
   708  00101E  EF1C  F008         	goto	l1970
   709  001022                     l1966:
   710                           
   711                           ; BSR set to: 0
   712                           ;main.c: 147:         WriteLCD(texto2[j]);
   713  001022  0E90               	movlw	low _texto2
   714  001024  256C               	addwf	_j& (0+255),w,b
   715  001026  6ED9               	movwf	fsr2l,c
   716  001028  6ADA               	clrf	fsr2h,c
   717  00102A  0E00               	movlw	high _texto2
   718  00102C  22DA               	addwfc	fsr2h,f,c
   719  00102E  50DF               	movf	indf2,w,c
   720  001030  ECD7  F009         	call	_WriteLCD
   721  001034                     
   722                           ;main.c: 148:     }
   723  001034  0100               	movlb	0	; () banked
   724  001036  2B6C               	incf	_j& (0+255),f,b
   725  001038                     l1970:
   726                           
   727                           ; BSR set to: 0
   728  001038  0E9F               	movlw	low _texto
   729  00103A  6E03               	movwf	strlen@s^0,c
   730  00103C  0E00               	movlw	high _texto
   731  00103E  6E04               	movwf	(strlen@s+1)^0,c
   732  001040  EC9A  F009         	call	_strlen	;wreg free
   733  001044  0100               	movlb	0	; () banked
   734  001046  516C               	movf	_j& (0+255),w,b
   735  001048  6FCA               	movwf	??_Data2LCD& (0+255),b
   736  00104A  6BCB               	clrf	(??_Data2LCD+1)& (0+255),b
   737  00104C  5003               	movf	?_strlen^0,w,c
   738  00104E  5DCA               	subwf	??_Data2LCD& (0+255),w,b
   739  001050  5004               	movf	(?_strlen+1)^0,w,c
   740  001052  59CB               	subwfb	(??_Data2LCD+1)& (0+255),w,b
   741  001054  A0D8               	btfss	status,0,c
   742  001056  EF2F  F008         	goto	u1551
   743  00105A  EF31  F008         	goto	u1550
   744  00105E                     u1551:
   745  00105E  EF11  F008         	goto	l1966
   746  001062                     u1550:
   747  001062                     
   748                           ; BSR set to: 0
   749  001062  0012               	return		;funcret
   750  001064                     __end_of_Data2LCD:
   751                           	opt callstack 0
   752                           
   753 ;; *************** function _Data1LCD *****************
   754 ;; Defined at:
   755 ;;		line 136 in file "main.c"
   756 ;; Parameters:    Size  Location     Type
   757 ;;		None
   758 ;; Auto vars:     Size  Location     Type
   759 ;;		None
   760 ;; Return value:  Size  Location     Type
   761 ;;                  1    wreg      void 
   762 ;; Registers used:
   763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   764 ;; Tracked objects:
   765 ;;		On entry : 0/0
   766 ;;		On exit  : 0/0
   767 ;;		Unchanged: 0/0
   768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   769 ;;      Params:         0       0       0       0       0       0       0       0       0
   770 ;;      Locals:         0       0       0       0       0       0       0       0       0
   771 ;;      Temps:          0       2       0       0       0       0       0       0       0
   772 ;;      Totals:         0       2       0       0       0       0       0       0       0
   773 ;;Total ram usage:        2 bytes
   774 ;; Hardware stack levels used:    1
   775 ;; Hardware stack levels required when called:    9
   776 ;; This function calls:
   777 ;;		_SettingsLCD
   778 ;;		_WriteLCD
   779 ;;		_sprintf
   780 ;;		_strlen
   781 ;; This function is called by:
   782 ;;		_main
   783 ;; This function uses a non-reentrant model
   784 ;;
   785                           
   786                           	psect	text3
   787  001064                     __ptext3:
   788                           	opt callstack 0
   789  001064                     _Data1LCD:
   790                           	opt callstack 21
   791  001064                     
   792                           ;main.c: 137:     SettingsLCD(0x80);
   793  001064  0E80               	movlw	128
   794  001066  ECE2  F009         	call	_SettingsLCD
   795  00106A                     
   796                           ;main.c: 138:     sprintf(texto,"%#X,%#x,%#X",text[0],text[1],text[2]);
   797  00106A  0E9F               	movlw	low _texto
   798  00106C  0100               	movlb	0	; () banked
   799  00106E  6FB6               	movwf	sprintf@s& (0+255),b
   800  001070  0E00               	movlw	high _texto
   801  001072  6FB7               	movwf	(sprintf@s+1)& (0+255),b
   802  001074  0E01               	movlw	low STR_1
   803  001076  6FB8               	movwf	sprintf@fmt& (0+255),b
   804  001078  0E08               	movlw	high STR_1
   805  00107A  6FB9               	movwf	(sprintf@fmt+1)& (0+255),b
   806  00107C  C060  F0BA         	movff	_text,?_sprintf+4
   807  001080  6BBB               	clrf	(?_sprintf+5)& (0+255),b
   808  001082  C061  F0BC         	movff	_text+1,?_sprintf+6
   809  001086  6BBD               	clrf	(?_sprintf+7)& (0+255),b
   810  001088  C062  F0BE         	movff	_text+2,?_sprintf+8
   811  00108C  6BBF               	clrf	(?_sprintf+9)& (0+255),b
   812  00108E  ECF9  F008         	call	_sprintf	;wreg free
   813  001092                     
   814                           ;main.c: 139:     for(j=0; j<strlen(texto); j++){
   815  001092  0E00               	movlw	0
   816  001094  0100               	movlb	0	; () banked
   817  001096  6F6C               	movwf	_j& (0+255),b
   818  001098  EF59  F008         	goto	l1958
   819  00109C                     l1954:
   820                           
   821                           ; BSR set to: 0
   822                           ;main.c: 140:         WriteLCD(texto[j]);
   823  00109C  0E9F               	movlw	low _texto
   824  00109E  256C               	addwf	_j& (0+255),w,b
   825  0010A0  6ED9               	movwf	fsr2l,c
   826  0010A2  6ADA               	clrf	fsr2h,c
   827  0010A4  0E00               	movlw	high _texto
   828  0010A6  22DA               	addwfc	fsr2h,f,c
   829  0010A8  50DF               	movf	indf2,w,c
   830  0010AA  ECD7  F009         	call	_WriteLCD
   831  0010AE                     
   832                           ;main.c: 141:     }
   833  0010AE  0100               	movlb	0	; () banked
   834  0010B0  2B6C               	incf	_j& (0+255),f,b
   835  0010B2                     l1958:
   836                           
   837                           ; BSR set to: 0
   838  0010B2  0E9F               	movlw	low _texto
   839  0010B4  6E03               	movwf	strlen@s^0,c
   840  0010B6  0E00               	movlw	high _texto
   841  0010B8  6E04               	movwf	(strlen@s+1)^0,c
   842  0010BA  EC9A  F009         	call	_strlen	;wreg free
   843  0010BE  0100               	movlb	0	; () banked
   844  0010C0  516C               	movf	_j& (0+255),w,b
   845  0010C2  6FCA               	movwf	??_Data1LCD& (0+255),b
   846  0010C4  6BCB               	clrf	(??_Data1LCD+1)& (0+255),b
   847  0010C6  5003               	movf	?_strlen^0,w,c
   848  0010C8  5DCA               	subwf	??_Data1LCD& (0+255),w,b
   849  0010CA  5004               	movf	(?_strlen+1)^0,w,c
   850  0010CC  59CB               	subwfb	(??_Data1LCD+1)& (0+255),w,b
   851  0010CE  A0D8               	btfss	status,0,c
   852  0010D0  EF6C  F008         	goto	u1541
   853  0010D4  EF6E  F008         	goto	u1540
   854  0010D8                     u1541:
   855  0010D8  EF4E  F008         	goto	l1954
   856  0010DC                     u1540:
   857  0010DC                     
   858                           ; BSR set to: 0
   859  0010DC  0012               	return		;funcret
   860  0010DE                     __end_of_Data1LCD:
   861                           	opt callstack 0
   862                           
   863 ;; *************** function _sprintf *****************
   864 ;; Defined at:
   865 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
   866 ;; Parameters:    Size  Location     Type
   867 ;;  s               2    8[BANK0 ] PTR unsigned char 
   868 ;;		 -> texto2(15), texto(15), 
   869 ;;  fmt             2   10[BANK0 ] PTR const unsigned char 
   870 ;;		 -> STR_2(12), STR_1(12), 
   871 ;; Auto vars:     Size  Location     Type
   872 ;;  f               6   22[BANK0 ] struct _IO_FILE
   873 ;;  ap              2   20[BANK0 ] PTR void [1]
   874 ;;		 -> ?_sprintf(2), 
   875 ;;  ret             2    0        int 
   876 ;; Return value:  Size  Location     Type
   877 ;;                  2    8[BANK0 ] int 
   878 ;; Registers used:
   879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   885 ;;      Params:         0      10       0       0       0       0       0       0       0
   886 ;;      Locals:         0      10       0       0       0       0       0       0       0
   887 ;;      Temps:          0       0       0       0       0       0       0       0       0
   888 ;;      Totals:         0      20       0       0       0       0       0       0       0
   889 ;;Total ram usage:       20 bytes
   890 ;; Hardware stack levels used:    1
   891 ;; Hardware stack levels required when called:    8
   892 ;; This function calls:
   893 ;;		_vfprintf
   894 ;; This function is called by:
   895 ;;		_Data1LCD
   896 ;;		_Data2LCD
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900                           	psect	text4
   901  0011F2                     __ptext4:
   902                           	opt callstack 0
   903  0011F2                     _sprintf:
   904                           	opt callstack 21
   905  0011F2  0EBA               	movlw	low (?_sprintf+4)
   906  0011F4  0100               	movlb	0	; () banked
   907  0011F6  6FC2               	movwf	sprintf@ap& (0+255),b
   908  0011F8  0E00               	movlw	high (?_sprintf+4)
   909  0011FA  6FC3               	movwf	(sprintf@ap+1)& (0+255),b
   910  0011FC  C0B6  F0C4         	movff	sprintf@s,sprintf@f
   911  001200  C0B7  F0C5         	movff	sprintf@s+1,sprintf@f+1
   912  001204                     
   913                           ; BSR set to: 0
   914  001204  0E00               	movlw	0
   915  001206  6FC7               	movwf	(sprintf@f+3)& (0+255),b
   916  001208  0E00               	movlw	0
   917  00120A  6FC6               	movwf	(sprintf@f+2)& (0+255),b
   918  00120C                     
   919                           ; BSR set to: 0
   920  00120C  0E00               	movlw	0
   921  00120E  6FC9               	movwf	(sprintf@f+5)& (0+255),b
   922  001210  0E00               	movlw	0
   923  001212  6FC8               	movwf	(sprintf@f+4)& (0+255),b
   924  001214                     
   925                           ; BSR set to: 0
   926  001214  0EC4               	movlw	low sprintf@f
   927  001216  6FAE               	movwf	vfprintf@fp& (0+255),b
   928  001218  0E00               	movlw	high sprintf@f
   929  00121A  6FAF               	movwf	(vfprintf@fp+1)& (0+255),b
   930  00121C  C0B8  F0B0         	movff	sprintf@fmt,vfprintf@fmt
   931  001220  C0B9  F0B1         	movff	sprintf@fmt+1,vfprintf@fmt+1
   932  001224  0EC2               	movlw	low sprintf@ap
   933  001226  6FB2               	movwf	vfprintf@ap& (0+255),b
   934  001228  0E00               	movlw	high sprintf@ap
   935  00122A  6FB3               	movwf	(vfprintf@ap+1)& (0+255),b
   936  00122C  EC6F  F008         	call	_vfprintf	;wreg free
   937  001230  0100               	movlb	0	; () banked
   938  001232  51C6               	movf	(sprintf@f+2)& (0+255),w,b
   939  001234  25B6               	addwf	sprintf@s& (0+255),w,b
   940  001236  6ED9               	movwf	fsr2l,c
   941  001238  51C7               	movf	(sprintf@f+3)& (0+255),w,b
   942  00123A  21B7               	addwfc	(sprintf@s+1)& (0+255),w,b
   943  00123C  6EDA               	movwf	fsr2h,c
   944  00123E  0E00               	movlw	0
   945  001240  6EDF               	movwf	indf2,c
   946  001242                     
   947                           ; BSR set to: 0
   948  001242  0012               	return		;funcret
   949  001244                     __end_of_sprintf:
   950                           	opt callstack 0
   951                           
   952 ;; *************** function _vfprintf *****************
   953 ;; Defined at:
   954 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
   955 ;; Parameters:    Size  Location     Type
   956 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
   957 ;;		 -> sprintf@f(6), 
   958 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
   959 ;;		 -> STR_2(12), STR_1(12), 
   960 ;;  ap              2    4[BANK0 ] PTR PTR void 
   961 ;;		 -> sprintf@ap(2), 
   962 ;; Auto vars:     Size  Location     Type
   963 ;;  cfmt            2    6[BANK0 ] PTR unsigned char 
   964 ;;		 -> STR_2(12), STR_1(12), 
   965 ;; Return value:  Size  Location     Type
   966 ;;                  2    0[BANK0 ] int 
   967 ;; Registers used:
   968 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   969 ;; Tracked objects:
   970 ;;		On entry : 0/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   974 ;;      Params:         0       6       0       0       0       0       0       0       0
   975 ;;      Locals:         0       2       0       0       0       0       0       0       0
   976 ;;      Temps:          0       0       0       0       0       0       0       0       0
   977 ;;      Totals:         0       8       0       0       0       0       0       0       0
   978 ;;Total ram usage:        8 bytes
   979 ;; Hardware stack levels used:    1
   980 ;; Hardware stack levels required when called:    7
   981 ;; This function calls:
   982 ;;		_vfpfcnvrt
   983 ;; This function is called by:
   984 ;;		_sprintf
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988                           	psect	text5
   989  0010DE                     __ptext5:
   990                           	opt callstack 0
   991  0010DE                     _vfprintf:
   992                           	opt callstack 21
   993  0010DE                     
   994                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
   995  0010DE  C0B0  F0B4         	movff	vfprintf@fmt,vfprintf@cfmt
   996  0010E2  C0B1  F0B5         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   997  0010E6                     
   998                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
   999  0010E6  0E00               	movlw	0
  1000  0010E8  0100               	movlb	0	; () banked
  1001  0010EA  6F67               	movwf	(_nout+1)& (0+255),b
  1002  0010EC  0E00               	movlw	0
  1003  0010EE  6F66               	movwf	_nout& (0+255),b
  1004                           
  1005                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1006  0010F0  EF8D  F008         	goto	l1934
  1007  0010F4                     l1932:
  1008                           
  1009                           ; BSR set to: 0
  1010                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1011  0010F4  C0AE  F045         	movff	vfprintf@fp,vfpfcnvrt@fp
  1012  0010F8  C0AF  F046         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1013  0010FC  0EB4               	movlw	low vfprintf@cfmt
  1014  0010FE  6E47               	movwf	vfpfcnvrt@fmt^0,c
  1015  001100  0E00               	movlw	high vfprintf@cfmt
  1016  001102  6E48               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1017  001104  C0B2  F049         	movff	vfprintf@ap,vfpfcnvrt@ap
  1018  001108  C0B3  F04A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1019  00110C  EC77  F005         	call	_vfpfcnvrt	;wreg free
  1020  001110  5045               	movf	?_vfpfcnvrt^0,w,c
  1021  001112  0100               	movlb	0	; () banked
  1022  001114  2766               	addwf	_nout& (0+255),f,b
  1023  001116  5046               	movf	(?_vfpfcnvrt+1)^0,w,c
  1024  001118  2367               	addwfc	(_nout+1)& (0+255),f,b
  1025  00111A                     l1934:
  1026                           
  1027                           ; BSR set to: 0
  1028                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1029  00111A  C0B4  FFF6         	movff	vfprintf@cfmt,tblptrl
  1030  00111E  C0B5  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1031  001122                     	if	0	;tblptru may be non-zero
  1032  001122                     	endif
  1033  001122                     	if	0	;tblptru may be non-zero
  1034  001122                     	endif
  1035  001122  0008               	tblrd		*
  1036  001124  50F5               	movf	tablat,w,c
  1037  001126  0900               	iorlw	0
  1038  001128  A4D8               	btfss	status,2,c
  1039  00112A  EF99  F008         	goto	u1531
  1040  00112E  EF9B  F008         	goto	u1530
  1041  001132                     u1531:
  1042  001132  EF7A  F008         	goto	l1932
  1043  001136                     u1530:
  1044  001136                     
  1045                           ; BSR set to: 0
  1046                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1047  001136  C066  F0AE         	movff	_nout,?_vfprintf
  1048  00113A  C067  F0AF         	movff	_nout+1,?_vfprintf+1
  1049  00113E                     
  1050                           ; BSR set to: 0
  1051  00113E  0012               	return		;funcret
  1052  001140                     __end_of_vfprintf:
  1053                           	opt callstack 0
  1054                           
  1055 ;; *************** function _vfpfcnvrt *****************
  1056 ;; Defined at:
  1057 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1058 ;; Parameters:    Size  Location     Type
  1059 ;;  fp              2   68[COMRAM] PTR struct _IO_FILE
  1060 ;;		 -> sprintf@f(6), 
  1061 ;;  fmt             2   70[COMRAM] PTR PTR unsigned char 
  1062 ;;		 -> vfprintf@cfmt(2), 
  1063 ;;  ap              2   72[COMRAM] PTR PTR void 
  1064 ;;		 -> sprintf@ap(2), 
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;  llu             8   78[COMRAM] unsigned long long 
  1067 ;;  ll              8    0        long long 
  1068 ;;  f               4    0        long long 
  1069 ;;  vp              3    0        PTR void 
  1070 ;;  ct              3    0        unsigned char [3]
  1071 ;;  cp              3    0        PTR unsigned char 
  1072 ;;  done            2   87[COMRAM] int 
  1073 ;;  i               2    0        int 
  1074 ;;  c               1   86[COMRAM] unsigned char 
  1075 ;; Return value:  Size  Location     Type
  1076 ;;                  2   68[COMRAM] int 
  1077 ;; Registers used:
  1078 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1079 ;; Tracked objects:
  1080 ;;		On entry : 0/0
  1081 ;;		On exit  : 0/0
  1082 ;;		Unchanged: 0/0
  1083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1084 ;;      Params:         6       0       0       0       0       0       0       0       0
  1085 ;;      Locals:        11       0       0       0       0       0       0       0       0
  1086 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1087 ;;      Totals:        21       0       0       0       0       0       0       0       0
  1088 ;;Total ram usage:       21 bytes
  1089 ;; Hardware stack levels used:    1
  1090 ;; Hardware stack levels required when called:    6
  1091 ;; This function calls:
  1092 ;;		_fputc
  1093 ;;		_xtoa
  1094 ;; This function is called by:
  1095 ;;		_vfprintf
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099                           	psect	text6
  1100  000AEE                     __ptext6:
  1101                           	opt callstack 0
  1102  000AEE                     _vfpfcnvrt:
  1103                           	opt callstack 21
  1104  000AEE                     
  1105                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1106  000AEE  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1107  000AF2  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1108  000AF6  CFDE FFF6          	movff	postinc2,tblptrl
  1109  000AFA  CFDD FFF7          	movff	postdec2,tblptrh
  1110  000AFE                     	if	0	;tblptru may be non-zero
  1111  000AFE                     	endif
  1112  000AFE                     	if	0	;tblptru may be non-zero
  1113  000AFE                     	endif
  1114  000AFE  0008               	tblrd		*
  1115  000B00  50F5               	movf	tablat,w,c
  1116  000B02  0A25               	xorlw	37
  1117  000B04  A4D8               	btfss	status,2,c
  1118  000B06  EF87  F005         	goto	u1471
  1119  000B0A  EF89  F005         	goto	u1470
  1120  000B0E                     u1471:
  1121  000B0E  EFA0  F006         	goto	l1916
  1122  000B12                     u1470:
  1123  000B12                     
  1124                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1125  000B12  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1126  000B16  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1127  000B1A  2ADE               	incf	postinc2,f,c
  1128  000B1C  0E00               	movlw	0
  1129  000B1E  22DD               	addwfc	postdec2,f,c
  1130  000B20                     
  1131                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1132  000B20  0E00               	movlw	0
  1133  000B22  0100               	movlb	0	; () banked
  1134  000B24  6F69               	movwf	(_width+1)& (0+255),b
  1135  000B26  0E00               	movlw	0
  1136  000B28  6F68               	movwf	_width& (0+255),b
  1137  000B2A  C068  F05A         	movff	_width,_flags
  1138  000B2E  C069  F05B         	movff	_width+1,_flags+1
  1139  000B32                     
  1140                           ; BSR set to: 0
  1141                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1142  000B32  696A               	setf	_prec& (0+255),b
  1143  000B34  696B               	setf	(_prec+1)& (0+255),b
  1144  000B36                     
  1145                           ; BSR set to: 0
  1146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 688:       
      +                            done = 0;
  1147  000B36  0E00               	movlw	0
  1148  000B38  6E59               	movwf	(vfpfcnvrt@done+1)^0,c
  1149  000B3A  0E00               	movlw	0
  1150  000B3C  6E58               	movwf	vfpfcnvrt@done^0,c
  1151                           
  1152                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  1153  000B3E  EFE7  F005         	goto	l1882
  1154  000B42                     l1856:
  1155                           
  1156                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 692:       
      +                                        flags |= (1 << 0);
  1157  000B42  805A               	bsf	_flags^0,0,c
  1158  000B44                     l1858:
  1159                           
  1160                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 693:       
      +                                        ++*fmt;
  1161  000B44  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1162  000B48  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1163  000B4C  2ADE               	incf	postinc2,f,c
  1164  000B4E  0E00               	movlw	0
  1165  000B50  22DD               	addwfc	postdec2,f,c
  1166                           
  1167                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 694:       
      +                                        break;
  1168  000B52  EFE7  F005         	goto	l1882
  1169  000B56                     l1860:
  1170                           
  1171                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 696:       
      +                                        flags |= (1 << 1);
  1172  000B56  825A               	bsf	_flags^0,1,c
  1173  000B58  EFA2  F005         	goto	l1858
  1174  000B5C                     l1864:
  1175                           
  1176                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 700:       
      +                                        flags |= (1 << 2);
  1177  000B5C  845A               	bsf	_flags^0,2,c
  1178  000B5E  EFA2  F005         	goto	l1858
  1179  000B62                     l1868:
  1180                           
  1181                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 704:       
      +                                        flags |= (1 << 3);
  1182  000B62  865A               	bsf	_flags^0,3,c
  1183  000B64  EFA2  F005         	goto	l1858
  1184  000B68                     l1872:
  1185                           
  1186                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 708:       
      +                                        flags |= (1 << 4);
  1187  000B68  885A               	bsf	_flags^0,4,c
  1188  000B6A  EFA2  F005         	goto	l1858
  1189  000B6E                     l1876:
  1190                           
  1191                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 712:       
      +                                        done = 1;
  1192  000B6E  0E00               	movlw	0
  1193  000B70  6E59               	movwf	(vfpfcnvrt@done+1)^0,c
  1194  000B72  0E01               	movlw	1
  1195  000B74  6E58               	movwf	vfpfcnvrt@done^0,c
  1196                           
  1197                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 713:       
      +                                        break;
  1198  000B76  EFE7  F005         	goto	l1882
  1199  000B7A                     l1880:
  1200  000B7A  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1201  000B7E  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1202  000B82  CFDE FFF6          	movff	postinc2,tblptrl
  1203  000B86  CFDD FFF7          	movff	postdec2,tblptrh
  1204  000B8A                     	if	0	;tblptru may be non-zero
  1205  000B8A                     	endif
  1206  000B8A                     	if	0	;tblptru may be non-zero
  1207  000B8A                     	endif
  1208  000B8A  0008               	tblrd		*
  1209  000B8C  50F5               	movf	tablat,w,c
  1210  000B8E  6E4B               	movwf	??_vfpfcnvrt^0,c
  1211  000B90  6A4C               	clrf	(??_vfpfcnvrt+1)^0,c
  1212                           
  1213                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1214                           ; Switch size 1, requested type "simple"
  1215                           ; Number of cases is 1, Range of values is 0 to 0
  1216                           ; switch strategies available:
  1217                           ; Name         Instructions Cycles
  1218                           ; simple_byte            4     3 (average)
  1219                           ;	Chosen strategy is simple_byte
  1220  000B92  504C               	movf	(??_vfpfcnvrt+1)^0,w,c
  1221  000B94  0A00               	xorlw	0	; case 0
  1222  000B96  B4D8               	btfsc	status,2,c
  1223  000B98  EFD0  F005         	goto	l1998
  1224  000B9C  EFB7  F005         	goto	l1876
  1225  000BA0                     l1998:
  1226                           
  1227                           ; Switch size 1, requested type "simple"
  1228                           ; Number of cases is 5, Range of values is 32 to 48
  1229                           ; switch strategies available:
  1230                           ; Name         Instructions Cycles
  1231                           ; simple_byte           16     9 (average)
  1232                           ;	Chosen strategy is simple_byte
  1233  000BA0  504B               	movf	??_vfpfcnvrt^0,w,c
  1234  000BA2  0A20               	xorlw	32	; case 32
  1235  000BA4  B4D8               	btfsc	status,2,c
  1236  000BA6  EFB1  F005         	goto	l1868
  1237  000BAA  0A03               	xorlw	3	; case 35
  1238  000BAC  B4D8               	btfsc	status,2,c
  1239  000BAE  EFB4  F005         	goto	l1872
  1240  000BB2  0A08               	xorlw	8	; case 43
  1241  000BB4  B4D8               	btfsc	status,2,c
  1242  000BB6  EFAE  F005         	goto	l1864
  1243  000BBA  0A06               	xorlw	6	; case 45
  1244  000BBC  B4D8               	btfsc	status,2,c
  1245  000BBE  EFA1  F005         	goto	l1856
  1246  000BC2  0A1D               	xorlw	29	; case 48
  1247  000BC4  B4D8               	btfsc	status,2,c
  1248  000BC6  EFAB  F005         	goto	l1860
  1249  000BCA  EFB7  F005         	goto	l1876
  1250  000BCE                     l1882:
  1251                           
  1252                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 689:       
      +                            while (!done) {
  1253  000BCE  5058               	movf	vfpfcnvrt@done^0,w,c
  1254  000BD0  1059               	iorwf	(vfpfcnvrt@done+1)^0,w,c
  1255  000BD2  B4D8               	btfsc	status,2,c
  1256  000BD4  EFEE  F005         	goto	u1481
  1257  000BD8  EFF0  F005         	goto	u1480
  1258  000BDC                     u1481:
  1259  000BDC  EFBD  F005         	goto	l1880
  1260  000BE0                     u1480:
  1261  000BE0                     
  1262                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 716:       
      +                            if (flags & (1 << 0)) {
  1263  000BE0  A05A               	btfss	_flags^0,0,c
  1264  000BE2  EFF5  F005         	goto	u1491
  1265  000BE6  EFF7  F005         	goto	u1490
  1266  000BEA                     u1491:
  1267  000BEA  EFF8  F005         	goto	l1886
  1268  000BEE                     u1490:
  1269  000BEE                     
  1270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 717:       
      +                                flags &= ~(1 << 1);
  1271  000BEE  925A               	bcf	_flags^0,1,c
  1272  000BF0                     l1886:
  1273                           
  1274                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1274:      
      +                             if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  1275  000BF0  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1276  000BF4  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1277  000BF8  CFDE FFF6          	movff	postinc2,tblptrl
  1278  000BFC  CFDD FFF7          	movff	postdec2,tblptrh
  1279  000C00                     	if	0	;tblptru may be non-zero
  1280  000C00                     	endif
  1281  000C00                     	if	0	;tblptru may be non-zero
  1282  000C00                     	endif
  1283  000C00  0008               	tblrd		*
  1284  000C02  50F5               	movf	tablat,w,c
  1285  000C04  0A78               	xorlw	120
  1286  000C06  B4D8               	btfsc	status,2,c
  1287  000C08  EF08  F006         	goto	u1501
  1288  000C0C  EF0A  F006         	goto	u1500
  1289  000C10                     u1501:
  1290  000C10  EF1C  F006         	goto	l1890
  1291  000C14                     u1500:
  1292  000C14  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1293  000C18  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1294  000C1C  CFDE FFF6          	movff	postinc2,tblptrl
  1295  000C20  CFDD FFF7          	movff	postdec2,tblptrh
  1296  000C24                     	if	0	;tblptru may be non-zero
  1297  000C24                     	endif
  1298  000C24                     	if	0	;tblptru may be non-zero
  1299  000C24                     	endif
  1300  000C24  0008               	tblrd		*
  1301  000C26  50F5               	movf	tablat,w,c
  1302  000C28  0A58               	xorlw	88
  1303  000C2A  A4D8               	btfss	status,2,c
  1304  000C2C  EF1A  F006         	goto	u1511
  1305  000C30  EF1C  F006         	goto	u1510
  1306  000C34                     u1511:
  1307  000C34  EF6A  F006         	goto	l1900
  1308  000C38                     u1510:
  1309  000C38                     l1890:
  1310                           
  1311                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1276:      
      +                                 c = (*fmt)[0];
  1312  000C38  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1313  000C3C  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1314  000C40  CFDE FFF6          	movff	postinc2,tblptrl
  1315  000C44  CFDD FFF7          	movff	postdec2,tblptrh
  1316  000C48                     	if	0	;tblptru may be non-zero
  1317  000C48                     	endif
  1318  000C48                     	if	0	;tblptru may be non-zero
  1319  000C48                     	endif
  1320  000C48  0008               	tblrd		*
  1321  000C4A  CFF5 F057          	movff	tablat,vfpfcnvrt@c
  1322  000C4E                     
  1323                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1277:      
      +                                 ++*fmt;
  1324  000C4E  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1325  000C52  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1326  000C56  2ADE               	incf	postinc2,f,c
  1327  000C58  0E00               	movlw	0
  1328  000C5A  22DD               	addwfc	postdec2,f,c
  1329  000C5C                     
  1330                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1278:      
      +                                 llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
      +                          ned int)0));
  1331  000C5C  C049  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1332  000C60  C04A  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1333  000C64  CFDF F04B          	movff	indf2,??_vfpfcnvrt
  1334  000C68  0E02               	movlw	2
  1335  000C6A  26DE               	addwf	postinc2,f,c
  1336  000C6C  CFDF F04C          	movff	indf2,??_vfpfcnvrt+1
  1337  000C70  0E00               	movlw	0
  1338  000C72  22DD               	addwfc	postdec2,f,c
  1339  000C74  C04B  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1340  000C78  C04C  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1341  000C7C  CFDE F04D          	movff	postinc2,??_vfpfcnvrt+2
  1342  000C80  CFDD F04E          	movff	postdec2,??_vfpfcnvrt+3
  1343  000C84  C04D  F04F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@llu
  1344  000C88  C04E  F050         	movff	??_vfpfcnvrt+3,vfpfcnvrt@llu+1
  1345  000C8C  6A51               	clrf	(vfpfcnvrt@llu+2)^0,c
  1346  000C8E  6A52               	clrf	(vfpfcnvrt@llu+3)^0,c
  1347  000C90  6A53               	clrf	(vfpfcnvrt@llu+4)^0,c
  1348  000C92  6A54               	clrf	(vfpfcnvrt@llu+5)^0,c
  1349  000C94  6A55               	clrf	(vfpfcnvrt@llu+6)^0,c
  1350  000C96  6A56               	clrf	(vfpfcnvrt@llu+7)^0,c
  1351  000C98                     
  1352                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1280:      
      +                                 return xtoa(fp, llu, c);
  1353  000C98  C045  F01E         	movff	vfpfcnvrt@fp,xtoa@fp
  1354  000C9C  C046  F01F         	movff	vfpfcnvrt@fp+1,xtoa@fp+1
  1355  000CA0  C04F  F020         	movff	vfpfcnvrt@llu,xtoa@d
  1356  000CA4  C050  F021         	movff	vfpfcnvrt@llu+1,xtoa@d+1
  1357  000CA8  C051  F022         	movff	vfpfcnvrt@llu+2,xtoa@d+2
  1358  000CAC  C052  F023         	movff	vfpfcnvrt@llu+3,xtoa@d+3
  1359  000CB0  C053  F024         	movff	vfpfcnvrt@llu+4,xtoa@d+4
  1360  000CB4  C054  F025         	movff	vfpfcnvrt@llu+5,xtoa@d+5
  1361  000CB8  C055  F026         	movff	vfpfcnvrt@llu+6,xtoa@d+6
  1362  000CBC  C056  F027         	movff	vfpfcnvrt@llu+7,xtoa@d+7
  1363  000CC0  C057  F028         	movff	vfpfcnvrt@c,xtoa@x
  1364  000CC4  EC0D  F004         	call	_xtoa	;wreg free
  1365  000CC8  C01E  F045         	movff	?_xtoa,?_vfpfcnvrt
  1366  000CCC  C01F  F046         	movff	?_xtoa+1,?_vfpfcnvrt+1
  1367  000CD0  EFBB  F006         	goto	l218
  1368  000CD4                     l1900:
  1369                           
  1370                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1371  000CD4  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1372  000CD8  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1373  000CDC  CFDE FFF6          	movff	postinc2,tblptrl
  1374  000CE0  CFDD FFF7          	movff	postdec2,tblptrh
  1375  000CE4                     	if	0	;tblptru may be non-zero
  1376  000CE4                     	endif
  1377  000CE4                     	if	0	;tblptru may be non-zero
  1378  000CE4                     	endif
  1379  000CE4  0008               	tblrd		*
  1380  000CE6  50F5               	movf	tablat,w,c
  1381  000CE8  0A25               	xorlw	37
  1382  000CEA  A4D8               	btfss	status,2,c
  1383  000CEC  EF7A  F006         	goto	u1521
  1384  000CF0  EF7C  F006         	goto	u1520
  1385  000CF4                     u1521:
  1386  000CF4  EF93  F006         	goto	l1910
  1387  000CF8                     u1520:
  1388  000CF8                     
  1389                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1390  000CF8  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1391  000CFC  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1392  000D00  2ADE               	incf	postinc2,f,c
  1393  000D02  0E00               	movlw	0
  1394  000D04  22DD               	addwfc	postdec2,f,c
  1395  000D06                     
  1396                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1397  000D06  0E00               	movlw	0
  1398  000D08  6E04               	movwf	(fputc@c+1)^0,c
  1399  000D0A  0E25               	movlw	37
  1400  000D0C  6E03               	movwf	fputc@c^0,c
  1401  000D0E  C045  F005         	movff	vfpfcnvrt@fp,fputc@fp
  1402  000D12  C046  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1403  000D16  EC2F  F007         	call	_fputc	;wreg free
  1404  000D1A                     l1906:
  1405                           
  1406                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1407  000D1A  0E00               	movlw	0
  1408  000D1C  6E46               	movwf	(?_vfpfcnvrt+1)^0,c
  1409  000D1E  0E01               	movlw	1
  1410  000D20  6E45               	movwf	?_vfpfcnvrt^0,c
  1411  000D22  EFBB  F006         	goto	l218
  1412  000D26                     l1910:
  1413                           
  1414                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1415  000D26  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1416  000D2A  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1417  000D2E  2ADE               	incf	postinc2,f,c
  1418  000D30  0E00               	movlw	0
  1419  000D32  22DD               	addwfc	postdec2,f,c
  1420  000D34                     
  1421                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1422  000D34  0E00               	movlw	0
  1423  000D36  6E46               	movwf	(?_vfpfcnvrt+1)^0,c
  1424  000D38  0E00               	movlw	0
  1425  000D3A  6E45               	movwf	?_vfpfcnvrt^0,c
  1426  000D3C  EFBB  F006         	goto	l218
  1427  000D40                     l1916:
  1428                           
  1429                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1430  000D40  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1431  000D44  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1432  000D48  CFDE FFF6          	movff	postinc2,tblptrl
  1433  000D4C  CFDD FFF7          	movff	postdec2,tblptrh
  1434  000D50                     	if	0	;tblptru may be non-zero
  1435  000D50                     	endif
  1436  000D50                     	if	0	;tblptru may be non-zero
  1437  000D50                     	endif
  1438  000D50  0008               	tblrd		*
  1439  000D52  50F5               	movf	tablat,w,c
  1440  000D54  6E03               	movwf	fputc@c^0,c
  1441  000D56  6A04               	clrf	(fputc@c+1)^0,c
  1442  000D58  C045  F005         	movff	vfpfcnvrt@fp,fputc@fp
  1443  000D5C  C046  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1444  000D60  EC2F  F007         	call	_fputc	;wreg free
  1445  000D64                     
  1446                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1447  000D64  C047  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1448  000D68  C048  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1449  000D6C  2ADE               	incf	postinc2,f,c
  1450  000D6E  0E00               	movlw	0
  1451  000D70  22DD               	addwfc	postdec2,f,c
  1452  000D72  EF8D  F006         	goto	l1906
  1453  000D76                     l218:
  1454  000D76  0012               	return		;funcret
  1455  000D78                     __end_of_vfpfcnvrt:
  1456                           	opt callstack 0
  1457                           
  1458 ;; *************** function _xtoa *****************
  1459 ;; Defined at:
  1460 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1461 ;; Parameters:    Size  Location     Type
  1462 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  1463 ;;		 -> sprintf@f(6), 
  1464 ;;  d               8   31[COMRAM] unsigned long long 
  1465 ;;  x               1   39[COMRAM] unsigned char 
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;  n               8   56[COMRAM] unsigned long long 
  1468 ;;  c               2   66[COMRAM] int 
  1469 ;;  i               2   64[COMRAM] int 
  1470 ;;  w               2   54[COMRAM] int 
  1471 ;;  p               2   52[COMRAM] int 
  1472 ;; Return value:  Size  Location     Type
  1473 ;;                  2   29[COMRAM] int 
  1474 ;; Registers used:
  1475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1476 ;; Tracked objects:
  1477 ;;		On entry : 0/0
  1478 ;;		On exit  : 0/0
  1479 ;;		Unchanged: 0/0
  1480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1481 ;;      Params:        11       0       0       0       0       0       0       0       0
  1482 ;;      Locals:        20       0       0       0       0       0       0       0       0
  1483 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1484 ;;      Totals:        39       0       0       0       0       0       0       0       0
  1485 ;;Total ram usage:       39 bytes
  1486 ;; Hardware stack levels used:    1
  1487 ;; Hardware stack levels required when called:    5
  1488 ;; This function calls:
  1489 ;;		_isalpha
  1490 ;;		_isupper
  1491 ;;		_pad
  1492 ;;		_toupper
  1493 ;; This function is called by:
  1494 ;;		_vfpfcnvrt
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           	psect	text7
  1499  00081A                     __ptext7:
  1500                           	opt callstack 0
  1501  00081A                     _xtoa:
  1502                           	opt callstack 21
  1503  00081A                     
  1504                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 623: static
      +                           int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
      +                          ip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
      +                          Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
      +                          )) {
  1505  00081A  0100               	movlb	0	; () banked
  1506  00081C  BF6B               	btfsc	(_prec+1)& (0+255),7,b
  1507  00081E  EF13  F004         	goto	u1301
  1508  000822  EF15  F004         	goto	u1300
  1509  000826                     u1301:
  1510  000826  EF16  F004         	goto	l1784
  1511  00082A                     u1300:
  1512  00082A                     
  1513                           ; BSR set to: 0
  1514                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 630:       
      +                            flags &= ~(1 << 1);
  1515  00082A  925A               	bcf	_flags^0,1,c
  1516  00082C                     l1784:
  1517                           
  1518                           ; BSR set to: 0
  1519                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 632:     p 
      +                          = (0 < prec) ? prec : 1;
  1520  00082C  BF6B               	btfsc	(_prec+1)& (0+255),7,b
  1521  00082E  EF23  F004         	goto	u1310
  1522  000832  516B               	movf	(_prec+1)& (0+255),w,b
  1523  000834  E106               	bnz	u1311
  1524  000836  056A               	decf	_prec& (0+255),w,b
  1525  000838  B0D8               	btfsc	status,0,c
  1526  00083A  EF21  F004         	goto	u1311
  1527  00083E  EF23  F004         	goto	u1310
  1528  000842                     u1311:
  1529  000842  EF29  F004         	goto	l174
  1530  000846                     u1310:
  1531  000846                     
  1532                           ; BSR set to: 0
  1533  000846  0E00               	movlw	0
  1534  000848  6E36               	movwf	(xtoa@p+1)^0,c
  1535  00084A  0E01               	movlw	1
  1536  00084C  6E35               	movwf	xtoa@p^0,c
  1537  00084E  EF2D  F004         	goto	l176
  1538  000852                     l174:
  1539                           
  1540                           ; BSR set to: 0
  1541  000852  C06A  F035         	movff	_prec,xtoa@p
  1542  000856  C06B  F036         	movff	_prec+1,xtoa@p+1
  1543  00085A                     l176:
  1544                           
  1545                           ; BSR set to: 0
  1546                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 633:     w 
      +                          = width;
  1547  00085A  C068  F037         	movff	_width,xtoa@w
  1548  00085E  C069  F038         	movff	_width+1,xtoa@w+1
  1549                           
  1550                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 634:     if
      +                           (flags & (1 << 4)) {
  1551  000862  A85A               	btfss	_flags^0,4,c
  1552  000864  EF36  F004         	goto	u1321
  1553  000868  EF38  F004         	goto	u1320
  1554  00086C                     u1321:
  1555  00086C  EF3C  F004         	goto	l1790
  1556  000870                     u1320:
  1557  000870                     
  1558                           ; BSR set to: 0
  1559                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 635:       
      +                            w -= 2;
  1560  000870  0EFE               	movlw	254
  1561  000872  2637               	addwf	xtoa@w^0,f,c
  1562  000874  0EFF               	movlw	255
  1563  000876  2238               	addwfc	(xtoa@w+1)^0,f,c
  1564  000878                     l1790:
  1565                           
  1566                           ; BSR set to: 0
  1567                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 639:     n 
      +                          = d;
  1568  000878  C020  F039         	movff	xtoa@d,xtoa@n
  1569  00087C  C021  F03A         	movff	xtoa@d+1,xtoa@n+1
  1570  000880  C022  F03B         	movff	xtoa@d+2,xtoa@n+2
  1571  000884  C023  F03C         	movff	xtoa@d+3,xtoa@n+3
  1572  000888  C024  F03D         	movff	xtoa@d+4,xtoa@n+4
  1573  00088C  C025  F03E         	movff	xtoa@d+5,xtoa@n+5
  1574  000890  C026  F03F         	movff	xtoa@d+6,xtoa@n+6
  1575  000894  C027  F040         	movff	xtoa@d+7,xtoa@n+7
  1576  000898                     
  1577                           ; BSR set to: 0
  1578                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 640:     i 
      +                          = sizeof(dbuf) - 1;
  1579  000898  0E00               	movlw	0
  1580  00089A  6E42               	movwf	(xtoa@i+1)^0,c
  1581  00089C  0E1F               	movlw	31
  1582  00089E  6E41               	movwf	xtoa@i^0,c
  1583  0008A0                     
  1584                           ; BSR set to: 0
  1585                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 641:     db
      +                          uf[i] = '\0';
  1586  0008A0  0E00               	movlw	0
  1587  0008A2  6F8F               	movwf	(_dbuf+31)& (0+255),b
  1588                           
  1589                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1590  0008A4  EF07  F005         	goto	l1826
  1591  0008A8                     l1796:
  1592                           
  1593                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 643:       
      +                            --i;
  1594  0008A8  0641               	decf	xtoa@i^0,f,c
  1595  0008AA  A0D8               	btfss	status,0,c
  1596  0008AC  0642               	decf	(xtoa@i+1)^0,f,c
  1597  0008AE                     
  1598                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 644:       
      +                            c = n & 0x0f;
  1599  0008AE  0E0F               	movlw	15
  1600  0008B0  1439               	andwf	xtoa@n^0,w,c
  1601  0008B2  6E43               	movwf	xtoa@c^0,c
  1602  0008B4  6A44               	clrf	(xtoa@c+1)^0,c
  1603  0008B6                     
  1604                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 645:       
      +                            c = (c < 10) ? '0' + c : 'a' + (c - 10);
  1605  0008B6  BE44               	btfsc	(xtoa@c+1)^0,7,c
  1606  0008B8  EF67  F004         	goto	u1331
  1607  0008BC  5044               	movf	(xtoa@c+1)^0,w,c
  1608  0008BE  E109               	bnz	u1330
  1609  0008C0  0E0A               	movlw	10
  1610  0008C2  5C43               	subwf	xtoa@c^0,w,c
  1611  0008C4  A0D8               	btfss	status,0,c
  1612  0008C6  EF67  F004         	goto	u1331
  1613  0008CA  EF69  F004         	goto	u1330
  1614  0008CE                     u1331:
  1615  0008CE  EF71  F004         	goto	l1804
  1616  0008D2                     u1330:
  1617  0008D2  0E57               	movlw	87
  1618  0008D4  2443               	addwf	xtoa@c^0,w,c
  1619  0008D6  6E43               	movwf	xtoa@c^0,c
  1620  0008D8  0E00               	movlw	0
  1621  0008DA  2044               	addwfc	(xtoa@c+1)^0,w,c
  1622  0008DC  6E44               	movwf	(xtoa@c+1)^0,c
  1623  0008DE  EF77  F004         	goto	l183
  1624  0008E2                     l1804:
  1625  0008E2  0E30               	movlw	48
  1626  0008E4  2443               	addwf	xtoa@c^0,w,c
  1627  0008E6  6E43               	movwf	xtoa@c^0,c
  1628  0008E8  0E00               	movlw	0
  1629  0008EA  2044               	addwfc	(xtoa@c+1)^0,w,c
  1630  0008EC  6E44               	movwf	(xtoa@c+1)^0,c
  1631  0008EE                     l183:
  1632  0008EE  0EBF               	movlw	191
  1633  0008F0  6E29               	movwf	??_xtoa^0,c
  1634  0008F2  0EFF               	movlw	255
  1635  0008F4  6E2A               	movwf	(??_xtoa+1)^0,c
  1636  0008F6  5028               	movf	xtoa@x^0,w,c
  1637  0008F8  6E2B               	movwf	(??_xtoa+2)^0,c
  1638  0008FA  6A2C               	clrf	(??_xtoa+3)^0,c
  1639  0008FC  5029               	movf	??_xtoa^0,w,c
  1640  0008FE  262B               	addwf	(??_xtoa+2)^0,f,c
  1641  000900  502A               	movf	(??_xtoa+1)^0,w,c
  1642  000902  222C               	addwfc	(??_xtoa+3)^0,f,c
  1643  000904  502C               	movf	(??_xtoa+3)^0,w,c
  1644  000906  E10A               	bnz	u1340
  1645  000908  0E1A               	movlw	26
  1646  00090A  5C2B               	subwf	(??_xtoa+2)^0,w,c
  1647  00090C  A0D8               	btfss	status,0,c
  1648  00090E  EF8B  F004         	goto	u1341
  1649  000912  EF8E  F004         	goto	u1340
  1650  000916                     u1341:
  1651  000916  0E01               	movlw	1
  1652  000918  EF8F  F004         	goto	u1350
  1653  00091C                     u1340:
  1654  00091C  0E00               	movlw	0
  1655  00091E                     u1350:
  1656  00091E  6E31               	movwf	_xtoa$395^0,c
  1657  000920  6A32               	clrf	(_xtoa$395+1)^0,c
  1658  000922  5031               	movf	_xtoa$395^0,w,c
  1659  000924  1032               	iorwf	(_xtoa$395+1)^0,w,c
  1660  000926  B4D8               	btfsc	status,2,c
  1661  000928  EF98  F004         	goto	u1361
  1662  00092C  EF9A  F004         	goto	u1360
  1663  000930                     u1361:
  1664  000930  EFCA  F004         	goto	l1818
  1665  000934                     u1360:
  1666  000934  0E9F               	movlw	159
  1667  000936  6E29               	movwf	??_xtoa^0,c
  1668  000938  0EFF               	movlw	255
  1669  00093A  6E2A               	movwf	(??_xtoa+1)^0,c
  1670  00093C  0E20               	movlw	32
  1671  00093E  1043               	iorwf	xtoa@c^0,w,c
  1672  000940  6E2B               	movwf	(??_xtoa+2)^0,c
  1673  000942  0E00               	movlw	0
  1674  000944  1044               	iorwf	(xtoa@c+1)^0,w,c
  1675  000946  6E2C               	movwf	(??_xtoa+3)^0,c
  1676  000948  5029               	movf	??_xtoa^0,w,c
  1677  00094A  262B               	addwf	(??_xtoa+2)^0,f,c
  1678  00094C  502A               	movf	(??_xtoa+1)^0,w,c
  1679  00094E  222C               	addwfc	(??_xtoa+3)^0,f,c
  1680  000950  502C               	movf	(??_xtoa+3)^0,w,c
  1681  000952  E10A               	bnz	u1370
  1682  000954  0E1A               	movlw	26
  1683  000956  5C2B               	subwf	(??_xtoa+2)^0,w,c
  1684  000958  A0D8               	btfss	status,0,c
  1685  00095A  EFB1  F004         	goto	u1371
  1686  00095E  EFB4  F004         	goto	u1370
  1687  000962                     u1371:
  1688  000962  0E01               	movlw	1
  1689  000964  EFB5  F004         	goto	u1380
  1690  000968                     u1370:
  1691  000968  0E00               	movlw	0
  1692  00096A                     u1380:
  1693  00096A  6E33               	movwf	_xtoa$396^0,c
  1694  00096C  6A34               	clrf	(_xtoa$396+1)^0,c
  1695  00096E  5033               	movf	_xtoa$396^0,w,c
  1696  000970  1034               	iorwf	(_xtoa$396+1)^0,w,c
  1697  000972  B4D8               	btfsc	status,2,c
  1698  000974  EFBE  F004         	goto	u1391
  1699  000978  EFC0  F004         	goto	u1390
  1700  00097C                     u1391:
  1701  00097C  EFCA  F004         	goto	l1818
  1702  000980                     u1390:
  1703  000980                     
  1704                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 647:       
      +                                c = toupper(c);
  1705  000980  C043  F009         	movff	xtoa@c,toupper@c
  1706  000984  C044  F00A         	movff	xtoa@c+1,toupper@c+1
  1707  000988  ECA0  F008         	call	_toupper	;wreg free
  1708  00098C  C009  F043         	movff	?_toupper,xtoa@c
  1709  000990  C00A  F044         	movff	?_toupper+1,xtoa@c+1
  1710  000994                     l1818:
  1711                           
  1712                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 649:       
      +                            dbuf[i] = (char)c;
  1713  000994  0E70               	movlw	low _dbuf
  1714  000996  2441               	addwf	xtoa@i^0,w,c
  1715  000998  6ED9               	movwf	fsr2l,c
  1716  00099A  0E00               	movlw	high _dbuf
  1717  00099C  2042               	addwfc	(xtoa@i+1)^0,w,c
  1718  00099E  6EDA               	movwf	fsr2h,c
  1719  0009A0  C043  FFDF         	movff	xtoa@c,indf2
  1720  0009A4                     
  1721                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 650:       
      +                            --p;
  1722  0009A4  0635               	decf	xtoa@p^0,f,c
  1723  0009A6  A0D8               	btfss	status,0,c
  1724  0009A8  0636               	decf	(xtoa@p+1)^0,f,c
  1725  0009AA                     
  1726                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 651:       
      +                            --w;
  1727  0009AA  0637               	decf	xtoa@w^0,f,c
  1728  0009AC  A0D8               	btfss	status,0,c
  1729  0009AE  0638               	decf	(xtoa@w+1)^0,f,c
  1730  0009B0                     
  1731                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 652:       
      +                            n = n >> 4;
  1732  0009B0  C039  F029         	movff	xtoa@n,??_xtoa
  1733  0009B4  C03A  F02A         	movff	xtoa@n+1,??_xtoa+1
  1734  0009B8  C03B  F02B         	movff	xtoa@n+2,??_xtoa+2
  1735  0009BC  C03C  F02C         	movff	xtoa@n+3,??_xtoa+3
  1736  0009C0  C03D  F02D         	movff	xtoa@n+4,??_xtoa+4
  1737  0009C4  C03E  F02E         	movff	xtoa@n+5,??_xtoa+5
  1738  0009C8  C03F  F02F         	movff	xtoa@n+6,??_xtoa+6
  1739  0009CC  C040  F030         	movff	xtoa@n+7,??_xtoa+7
  1740  0009D0  0E05               	movlw	5
  1741  0009D2  EFF4  F004         	goto	u1400
  1742  0009D6                     u1405:
  1743  0009D6  90D8               	bcf	status,0,c
  1744  0009D8  3230               	rrcf	(??_xtoa+7)^0,f,c
  1745  0009DA  322F               	rrcf	(??_xtoa+6)^0,f,c
  1746  0009DC  322E               	rrcf	(??_xtoa+5)^0,f,c
  1747  0009DE  322D               	rrcf	(??_xtoa+4)^0,f,c
  1748  0009E0  322C               	rrcf	(??_xtoa+3)^0,f,c
  1749  0009E2  322B               	rrcf	(??_xtoa+2)^0,f,c
  1750  0009E4  322A               	rrcf	(??_xtoa+1)^0,f,c
  1751  0009E6  3229               	rrcf	??_xtoa^0,f,c
  1752  0009E8                     u1400:
  1753  0009E8  2EE8               	decfsz	wreg,f,c
  1754  0009EA  EFEB  F004         	goto	u1405
  1755  0009EE  C029  F039         	movff	??_xtoa,xtoa@n
  1756  0009F2  C02A  F03A         	movff	??_xtoa+1,xtoa@n+1
  1757  0009F6  C02B  F03B         	movff	??_xtoa+2,xtoa@n+2
  1758  0009FA  C02C  F03C         	movff	??_xtoa+3,xtoa@n+3
  1759  0009FE  C02D  F03D         	movff	??_xtoa+4,xtoa@n+4
  1760  000A02  C02E  F03E         	movff	??_xtoa+5,xtoa@n+5
  1761  000A06  C02F  F03F         	movff	??_xtoa+6,xtoa@n+6
  1762  000A0A  C030  F040         	movff	??_xtoa+7,xtoa@n+7
  1763  000A0E                     l1826:
  1764                           
  1765                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 642:     wh
      +                          ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1766  000A0E  BE42               	btfsc	(xtoa@i+1)^0,7,c
  1767  000A10  EF13  F005         	goto	u1411
  1768  000A14  5042               	movf	(xtoa@i+1)^0,w,c
  1769  000A16  E109               	bnz	u1410
  1770  000A18  0E02               	movlw	2
  1771  000A1A  5C41               	subwf	xtoa@i^0,w,c
  1772  000A1C  A0D8               	btfss	status,0,c
  1773  000A1E  EF13  F005         	goto	u1411
  1774  000A22  EF15  F005         	goto	u1410
  1775  000A26                     u1411:
  1776  000A26  EF45  F005         	goto	l197
  1777  000A2A                     u1410:
  1778  000A2A  5039               	movf	xtoa@n^0,w,c
  1779  000A2C  103A               	iorwf	(xtoa@n+1)^0,w,c
  1780  000A2E  103B               	iorwf	(xtoa@n+2)^0,w,c
  1781  000A30  103C               	iorwf	(xtoa@n+3)^0,w,c
  1782  000A32  103D               	iorwf	(xtoa@n+4)^0,w,c
  1783  000A34  103E               	iorwf	(xtoa@n+5)^0,w,c
  1784  000A36  103F               	iorwf	(xtoa@n+6)^0,w,c
  1785  000A38  1040               	iorwf	(xtoa@n+7)^0,w,c
  1786  000A3A  A4D8               	btfss	status,2,c
  1787  000A3C  EF22  F005         	goto	u1421
  1788  000A40  EF24  F005         	goto	u1420
  1789  000A44                     u1421:
  1790  000A44  EF54  F004         	goto	l1796
  1791  000A48                     u1420:
  1792  000A48  BE36               	btfsc	(xtoa@p+1)^0,7,c
  1793  000A4A  EF31  F005         	goto	u1430
  1794  000A4E  5036               	movf	(xtoa@p+1)^0,w,c
  1795  000A50  E106               	bnz	u1431
  1796  000A52  0435               	decf	xtoa@p^0,w,c
  1797  000A54  B0D8               	btfsc	status,0,c
  1798  000A56  EF2F  F005         	goto	u1431
  1799  000A5A  EF31  F005         	goto	u1430
  1800  000A5E                     u1431:
  1801  000A5E  EF54  F004         	goto	l1796
  1802  000A62                     u1430:
  1803  000A62  BE38               	btfsc	(xtoa@w+1)^0,7,c
  1804  000A64  EF3C  F005         	goto	u1441
  1805  000A68  5038               	movf	(xtoa@w+1)^0,w,c
  1806  000A6A  E108               	bnz	u1440
  1807  000A6C  0437               	decf	xtoa@w^0,w,c
  1808  000A6E  A0D8               	btfss	status,0,c
  1809  000A70  EF3C  F005         	goto	u1441
  1810  000A74  EF3E  F005         	goto	u1440
  1811  000A78                     u1441:
  1812  000A78  EF45  F005         	goto	l197
  1813  000A7C                     u1440:
  1814  000A7C  B25A               	btfsc	_flags^0,1,c
  1815  000A7E  EF43  F005         	goto	u1451
  1816  000A82  EF45  F005         	goto	u1450
  1817  000A86                     u1451:
  1818  000A86  EF54  F004         	goto	l1796
  1819  000A8A                     u1450:
  1820  000A8A                     l197:
  1821                           
  1822                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 656:     if
      +                           (flags & (1 << 4)) {
  1823  000A8A  A85A               	btfss	_flags^0,4,c
  1824  000A8C  EF4A  F005         	goto	u1461
  1825  000A90  EF4C  F005         	goto	u1460
  1826  000A94                     u1461:
  1827  000A94  EF62  F005         	goto	l1842
  1828  000A98                     u1460:
  1829  000A98                     
  1830                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 657:       
      +                            --i;
  1831  000A98  0641               	decf	xtoa@i^0,f,c
  1832  000A9A  A0D8               	btfss	status,0,c
  1833  000A9C  0642               	decf	(xtoa@i+1)^0,f,c
  1834  000A9E                     
  1835                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 658:       
      +                            dbuf[i] = x;
  1836  000A9E  0E70               	movlw	low _dbuf
  1837  000AA0  2441               	addwf	xtoa@i^0,w,c
  1838  000AA2  6ED9               	movwf	fsr2l,c
  1839  000AA4  0E00               	movlw	high _dbuf
  1840  000AA6  2042               	addwfc	(xtoa@i+1)^0,w,c
  1841  000AA8  6EDA               	movwf	fsr2h,c
  1842  000AAA  C028  FFDF         	movff	xtoa@x,indf2
  1843  000AAE                     
  1844                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 659:       
      +                            --i;
  1845  000AAE  0641               	decf	xtoa@i^0,f,c
  1846  000AB0  A0D8               	btfss	status,0,c
  1847  000AB2  0642               	decf	(xtoa@i+1)^0,f,c
  1848                           
  1849                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 660:       
      +                            dbuf[i] = '0';
  1850  000AB4  0E70               	movlw	low _dbuf
  1851  000AB6  2441               	addwf	xtoa@i^0,w,c
  1852  000AB8  6ED9               	movwf	fsr2l,c
  1853  000ABA  0E00               	movlw	high _dbuf
  1854  000ABC  2042               	addwfc	(xtoa@i+1)^0,w,c
  1855  000ABE  6EDA               	movwf	fsr2h,c
  1856  000AC0  0E30               	movlw	48
  1857  000AC2  6EDF               	movwf	indf2,c
  1858  000AC4                     l1842:
  1859                           
  1860                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 664:     re
      +                          turn pad(fp, &dbuf[i], w);
  1861  000AC4  C01E  F013         	movff	xtoa@fp,pad@fp
  1862  000AC8  C01F  F014         	movff	xtoa@fp+1,pad@fp+1
  1863  000ACC  0E70               	movlw	low _dbuf
  1864  000ACE  2441               	addwf	xtoa@i^0,w,c
  1865  000AD0  6E15               	movwf	pad@buf^0,c
  1866  000AD2  0E00               	movlw	high _dbuf
  1867  000AD4  2042               	addwfc	(xtoa@i+1)^0,w,c
  1868  000AD6  6E16               	movwf	(pad@buf+1)^0,c
  1869  000AD8  C037  F017         	movff	xtoa@w,pad@p
  1870  000ADC  C038  F018         	movff	xtoa@w+1,pad@p+1
  1871  000AE0  EC94  F007         	call	_pad	;wreg free
  1872  000AE4  C013  F01E         	movff	?_pad,?_xtoa
  1873  000AE8  C014  F01F         	movff	?_pad+1,?_xtoa+1
  1874  000AEC  0012               	return		;funcret
  1875  000AEE                     __end_of_xtoa:
  1876                           	opt callstack 0
  1877                           
  1878 ;; *************** function _toupper *****************
  1879 ;; Defined at:
  1880 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\toupper.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;  c               2    8[COMRAM] int 
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;		None
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  2    8[COMRAM] int 
  1887 ;; Registers used:
  1888 ;;		wreg, status,2, status,0
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1894 ;;      Params:         2       0       0       0       0       0       0       0       0
  1895 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1896 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1897 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1898 ;;Total ram usage:        8 bytes
  1899 ;; Hardware stack levels used:    1
  1900 ;; Hardware stack levels required when called:    2
  1901 ;; This function calls:
  1902 ;;		_islower
  1903 ;; This function is called by:
  1904 ;;		_xtoa
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908                           	psect	text8
  1909  001140                     __ptext8:
  1910                           	opt callstack 0
  1911  001140                     _toupper:
  1912                           	opt callstack 23
  1913  001140  0E9F               	movlw	159
  1914  001142  6E0B               	movwf	??_toupper^0,c
  1915  001144  0EFF               	movlw	255
  1916  001146  6E0C               	movwf	(??_toupper+1)^0,c
  1917  001148  C009  F00D         	movff	toupper@c,??_toupper+2
  1918  00114C  C00A  F00E         	movff	toupper@c+1,??_toupper+3
  1919  001150  500B               	movf	??_toupper^0,w,c
  1920  001152  260D               	addwf	(??_toupper+2)^0,f,c
  1921  001154  500C               	movf	(??_toupper+1)^0,w,c
  1922  001156  220E               	addwfc	(??_toupper+3)^0,f,c
  1923  001158  500E               	movf	(??_toupper+3)^0,w,c
  1924  00115A  E10A               	bnz	u1270
  1925  00115C  0E1A               	movlw	26
  1926  00115E  5C0D               	subwf	(??_toupper+2)^0,w,c
  1927  001160  A0D8               	btfss	status,0,c
  1928  001162  EFB5  F008         	goto	u1271
  1929  001166  EFB8  F008         	goto	u1270
  1930  00116A                     u1271:
  1931  00116A  0E01               	movlw	1
  1932  00116C  EFB9  F008         	goto	u1280
  1933  001170                     u1270:
  1934  001170  0E00               	movlw	0
  1935  001172                     u1280:
  1936  001172  6E0F               	movwf	_toupper$936^0,c
  1937  001174  6A10               	clrf	(_toupper$936+1)^0,c
  1938  001176  500F               	movf	_toupper$936^0,w,c
  1939  001178  1010               	iorwf	(_toupper$936+1)^0,w,c
  1940  00117A  B4D8               	btfsc	status,2,c
  1941  00117C  EFC2  F008         	goto	u1291
  1942  001180  EFC4  F008         	goto	u1290
  1943  001184                     u1291:
  1944  001184  EFCA  F008         	goto	l952
  1945  001188                     u1290:
  1946  001188  0E5F               	movlw	95
  1947  00118A  1409               	andwf	toupper@c^0,w,c
  1948  00118C  6E09               	movwf	?_toupper^0,c
  1949  00118E  6A0A               	clrf	(?_toupper+1)^0,c
  1950  001190  EFCE  F008         	goto	l957
  1951  001194                     l952:
  1952  001194  C009  F009         	movff	toupper@c,?_toupper
  1953  001198  C00A  F00A         	movff	toupper@c+1,?_toupper+1
  1954  00119C                     l957:
  1955  00119C  0012               	return		;funcret
  1956  00119E                     __end_of_toupper:
  1957                           	opt callstack 0
  1958                           
  1959 ;; *************** function _islower *****************
  1960 ;; Defined at:
  1961 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\islower.c"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;  c               2    2[COMRAM] int 
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;		None
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  2    2[COMRAM] int 
  1968 ;; Registers used:
  1969 ;;		wreg, status,2, status,0
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1975 ;;      Params:         2       0       0       0       0       0       0       0       0
  1976 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1977 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1978 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1979 ;;Total ram usage:        6 bytes
  1980 ;; Hardware stack levels used:    1
  1981 ;; Hardware stack levels required when called:    1
  1982 ;; This function calls:
  1983 ;;		Nothing
  1984 ;; This function is called by:
  1985 ;;		_toupper
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           	psect	text9
  1990  0012C4                     __ptext9:
  1991                           	opt callstack 0
  1992  0012C4                     _islower:
  1993                           	opt callstack 23
  1994  0012C4  0E9F               	movlw	159
  1995  0012C6  6E05               	movwf	??_islower^0,c
  1996  0012C8  0EFF               	movlw	255
  1997  0012CA  6E06               	movwf	(??_islower+1)^0,c
  1998  0012CC  C003  F007         	movff	islower@c,??_islower+2
  1999  0012D0  C004  F008         	movff	islower@c+1,??_islower+3
  2000  0012D4  5005               	movf	??_islower^0,w,c
  2001  0012D6  2607               	addwf	(??_islower+2)^0,f,c
  2002  0012D8  5006               	movf	(??_islower+1)^0,w,c
  2003  0012DA  2208               	addwfc	(??_islower+3)^0,f,c
  2004  0012DC  5008               	movf	(??_islower+3)^0,w,c
  2005  0012DE  E10A               	bnz	u1170
  2006  0012E0  0E1A               	movlw	26
  2007  0012E2  5C07               	subwf	(??_islower+2)^0,w,c
  2008  0012E4  A0D8               	btfss	status,0,c
  2009  0012E6  EF77  F009         	goto	u1171
  2010  0012EA  EF7A  F009         	goto	u1170
  2011  0012EE                     u1171:
  2012  0012EE  0E01               	movlw	1
  2013  0012F0  EF7B  F009         	goto	u1180
  2014  0012F4                     u1170:
  2015  0012F4  0E00               	movlw	0
  2016  0012F6                     u1180:
  2017  0012F6  6E03               	movwf	?_islower^0,c
  2018  0012F8  6A04               	clrf	(?_islower+1)^0,c
  2019  0012FA  0012               	return		;funcret
  2020  0012FC                     __end_of_islower:
  2021                           	opt callstack 0
  2022                           
  2023 ;; *************** function _pad *****************
  2024 ;; Defined at:
  2025 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  2028 ;;		 -> sprintf@f(6), 
  2029 ;;  buf             2   20[COMRAM] PTR unsigned char 
  2030 ;;		 -> dbuf(32), 
  2031 ;;  p               2   22[COMRAM] int 
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;  w               2   27[COMRAM] int 
  2034 ;;  i               2   25[COMRAM] int 
  2035 ;; Return value:  Size  Location     Type
  2036 ;;                  2   18[COMRAM] int 
  2037 ;; Registers used:
  2038 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2039 ;; Tracked objects:
  2040 ;;		On entry : 0/0
  2041 ;;		On exit  : 0/0
  2042 ;;		Unchanged: 0/0
  2043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2044 ;;      Params:         6       0       0       0       0       0       0       0       0
  2045 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2046 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2047 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2048 ;;Total ram usage:       11 bytes
  2049 ;; Hardware stack levels used:    1
  2050 ;; Hardware stack levels required when called:    4
  2051 ;; This function calls:
  2052 ;;		_fputc
  2053 ;;		_fputs
  2054 ;;		_strlen
  2055 ;; This function is called by:
  2056 ;;		_xtoa
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           	psect	text10
  2061  000F28                     __ptext10:
  2062                           	opt callstack 0
  2063  000F28                     _pad:
  2064                           	opt callstack 21
  2065  000F28                     
  2066                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  2067  000F28  A05A               	btfss	_flags^0,0,c
  2068  000F2A  EF99  F007         	goto	u1191
  2069  000F2E  EF9B  F007         	goto	u1190
  2070  000F32                     u1191:
  2071  000F32  EFA5  F007         	goto	l1744
  2072  000F36                     u1190:
  2073  000F36                     
  2074                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  2075  000F36  C015  F00C         	movff	pad@buf,fputs@s
  2076  000F3A  C016  F00D         	movff	pad@buf+1,fputs@s+1
  2077  000F3E  C013  F00E         	movff	pad@fp,fputs@fp
  2078  000F42  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  2079  000F46  EC22  F009         	call	_fputs	;wreg free
  2080  000F4A                     l1744:
  2081                           
  2082                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  2083  000F4A  BE18               	btfsc	(pad@p+1)^0,7,c
  2084  000F4C  EFAA  F007         	goto	u1201
  2085  000F50  EFAC  F007         	goto	u1200
  2086  000F54                     u1201:
  2087  000F54  EFB2  F007         	goto	l1748
  2088  000F58                     u1200:
  2089  000F58  C017  F01C         	movff	pad@p,pad@w
  2090  000F5C  C018  F01D         	movff	pad@p+1,pad@w+1
  2091  000F60  EFB6  F007         	goto	l164
  2092  000F64                     l1748:
  2093  000F64  0E00               	movlw	0
  2094  000F66  6E1D               	movwf	(pad@w+1)^0,c
  2095  000F68  0E00               	movlw	0
  2096  000F6A  6E1C               	movwf	pad@w^0,c
  2097  000F6C                     l164:
  2098                           
  2099                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  2100  000F6C  0E00               	movlw	0
  2101  000F6E  6E1B               	movwf	(pad@i+1)^0,c
  2102  000F70  0E00               	movlw	0
  2103  000F72  6E1A               	movwf	pad@i^0,c
  2104                           
  2105                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2106  000F74  EFC8  F007         	goto	l1754
  2107  000F78                     l1750:
  2108                           
  2109                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  2110  000F78  0E00               	movlw	0
  2111  000F7A  6E04               	movwf	(fputc@c+1)^0,c
  2112  000F7C  0E20               	movlw	32
  2113  000F7E  6E03               	movwf	fputc@c^0,c
  2114  000F80  C013  F005         	movff	pad@fp,fputc@fp
  2115  000F84  C014  F006         	movff	pad@fp+1,fputc@fp+1
  2116  000F88  EC2F  F007         	call	_fputc	;wreg free
  2117  000F8C                     
  2118                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  2119  000F8C  4A1A               	infsnz	pad@i^0,f,c
  2120  000F8E  2A1B               	incf	(pad@i+1)^0,f,c
  2121  000F90                     l1754:
  2122                           
  2123                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  2124  000F90  501C               	movf	pad@w^0,w,c
  2125  000F92  5C1A               	subwf	pad@i^0,w,c
  2126  000F94  501B               	movf	(pad@i+1)^0,w,c
  2127  000F96  0A80               	xorlw	128
  2128  000F98  6E19               	movwf	??_pad^0,c
  2129  000F9A  501D               	movf	(pad@w+1)^0,w,c
  2130  000F9C  0A80               	xorlw	128
  2131  000F9E  5819               	subwfb	??_pad^0,w,c
  2132  000FA0  A0D8               	btfss	status,0,c
  2133  000FA2  EFD5  F007         	goto	u1211
  2134  000FA6  EFD7  F007         	goto	u1210
  2135  000FAA                     u1211:
  2136  000FAA  EFBC  F007         	goto	l1750
  2137  000FAE                     u1210:
  2138  000FAE                     
  2139                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  2140  000FAE  B05A               	btfsc	_flags^0,0,c
  2141  000FB0  EFDC  F007         	goto	u1221
  2142  000FB4  EFDE  F007         	goto	u1220
  2143  000FB8                     u1221:
  2144  000FB8  EFE8  F007         	goto	l1758
  2145  000FBC                     u1220:
  2146  000FBC                     
  2147                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  2148  000FBC  C015  F00C         	movff	pad@buf,fputs@s
  2149  000FC0  C016  F00D         	movff	pad@buf+1,fputs@s+1
  2150  000FC4  C013  F00E         	movff	pad@fp,fputs@fp
  2151  000FC8  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  2152  000FCC  EC22  F009         	call	_fputs	;wreg free
  2153  000FD0                     l1758:
  2154                           
  2155                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  2156  000FD0  C015  F003         	movff	pad@buf,strlen@s
  2157  000FD4  C016  F004         	movff	pad@buf+1,strlen@s+1
  2158  000FD8  EC9A  F009         	call	_strlen	;wreg free
  2159  000FDC  501C               	movf	pad@w^0,w,c
  2160  000FDE  2403               	addwf	?_strlen^0,w,c
  2161  000FE0  6E13               	movwf	?_pad^0,c
  2162  000FE2  501D               	movf	(pad@w+1)^0,w,c
  2163  000FE4  2004               	addwfc	(?_strlen+1)^0,w,c
  2164  000FE6  6E14               	movwf	(?_pad+1)^0,c
  2165  000FE8  0012               	return		;funcret
  2166  000FEA                     __end_of_pad:
  2167                           	opt callstack 0
  2168                           
  2169 ;; *************** function _strlen *****************
  2170 ;; Defined at:
  2171 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  2172 ;; Parameters:    Size  Location     Type
  2173 ;;  s               2    2[COMRAM] PTR const unsigned char 
  2174 ;;		 -> dbuf(32), texto(15), 
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;  a               2    4[COMRAM] PTR const unsigned char 
  2177 ;;		 -> dbuf(32), texto(15), 
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  2    2[COMRAM] unsigned int 
  2180 ;; Registers used:
  2181 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2187 ;;      Params:         2       0       0       0       0       0       0       0       0
  2188 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2189 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2190 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2191 ;;Total ram usage:        4 bytes
  2192 ;; Hardware stack levels used:    1
  2193 ;; Hardware stack levels required when called:    1
  2194 ;; This function calls:
  2195 ;;		Nothing
  2196 ;; This function is called by:
  2197 ;;		_Data1LCD
  2198 ;;		_Data2LCD
  2199 ;;		_pad
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203                           	psect	text11
  2204  001334                     __ptext11:
  2205                           	opt callstack 0
  2206  001334                     _strlen:
  2207                           	opt callstack 28
  2208  001334  C003  F005         	movff	strlen@s,strlen@a
  2209  001338  C004  F006         	movff	strlen@s+1,strlen@a+1
  2210  00133C  EFA2  F009         	goto	l1722
  2211  001340                     l1720:
  2212  001340  4A03               	infsnz	strlen@s^0,f,c
  2213  001342  2A04               	incf	(strlen@s+1)^0,f,c
  2214  001344                     l1722:
  2215  001344  C003  FFD9         	movff	strlen@s,fsr2l
  2216  001348  C004  FFDA         	movff	strlen@s+1,fsr2h
  2217  00134C  50DF               	movf	indf2,w,c
  2218  00134E  A4D8               	btfss	status,2,c
  2219  001350  EFAC  F009         	goto	u1151
  2220  001354  EFAE  F009         	goto	u1150
  2221  001358                     u1151:
  2222  001358  EFA0  F009         	goto	l1720
  2223  00135C                     u1150:
  2224  00135C  5005               	movf	strlen@a^0,w,c
  2225  00135E  5C03               	subwf	strlen@s^0,w,c
  2226  001360  6E03               	movwf	?_strlen^0,c
  2227  001362  5006               	movf	(strlen@a+1)^0,w,c
  2228  001364  5804               	subwfb	(strlen@s+1)^0,w,c
  2229  001366  6E04               	movwf	(?_strlen+1)^0,c
  2230  001368  0012               	return		;funcret
  2231  00136A                     __end_of_strlen:
  2232                           	opt callstack 0
  2233                           
  2234 ;; *************** function _fputs *****************
  2235 ;; Defined at:
  2236 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;  s               2   11[COMRAM] PTR const unsigned char 
  2239 ;;		 -> dbuf(32), 
  2240 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  2241 ;;		 -> sprintf@f(6), 
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;  i               2   16[COMRAM] int 
  2244 ;;  c               1   15[COMRAM] unsigned char 
  2245 ;; Return value:  Size  Location     Type
  2246 ;;                  2   11[COMRAM] int 
  2247 ;; Registers used:
  2248 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2254 ;;      Params:         4       0       0       0       0       0       0       0       0
  2255 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2256 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2257 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2258 ;;Total ram usage:        7 bytes
  2259 ;; Hardware stack levels used:    1
  2260 ;; Hardware stack levels required when called:    3
  2261 ;; This function calls:
  2262 ;;		_fputc
  2263 ;; This function is called by:
  2264 ;;		_pad
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           
  2268                           	psect	text12
  2269  001244                     __ptext12:
  2270                           	opt callstack 0
  2271  001244                     _fputs:
  2272                           	opt callstack 21
  2273  001244  0E00               	movlw	0
  2274  001246  6E12               	movwf	(fputs@i+1)^0,c
  2275  001248  0E00               	movlw	0
  2276  00124A  6E11               	movwf	fputs@i^0,c
  2277  00124C  EF33  F009         	goto	l1734
  2278  001250                     l1730:
  2279  001250  C010  F003         	movff	fputs@c,fputc@c
  2280  001254  6A04               	clrf	(fputc@c+1)^0,c
  2281  001256  C00E  F005         	movff	fputs@fp,fputc@fp
  2282  00125A  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  2283  00125E  EC2F  F007         	call	_fputc	;wreg free
  2284  001262  4A11               	infsnz	fputs@i^0,f,c
  2285  001264  2A12               	incf	(fputs@i+1)^0,f,c
  2286  001266                     l1734:
  2287  001266  5011               	movf	fputs@i^0,w,c
  2288  001268  240C               	addwf	fputs@s^0,w,c
  2289  00126A  6ED9               	movwf	fsr2l,c
  2290  00126C  5012               	movf	(fputs@i+1)^0,w,c
  2291  00126E  200D               	addwfc	(fputs@s+1)^0,w,c
  2292  001270  6EDA               	movwf	fsr2h,c
  2293  001272  50DF               	movf	indf2,w,c
  2294  001274  6E10               	movwf	fputs@c^0,c
  2295  001276  5010               	movf	fputs@c^0,w,c
  2296  001278  A4D8               	btfss	status,2,c
  2297  00127A  EF41  F009         	goto	u1161
  2298  00127E  EF43  F009         	goto	u1160
  2299  001282                     u1161:
  2300  001282  EF28  F009         	goto	l1730
  2301  001286                     u1160:
  2302  001286  0012               	return		;funcret
  2303  001288                     __end_of_fputs:
  2304                           	opt callstack 0
  2305                           
  2306 ;; *************** function _fputc *****************
  2307 ;; Defined at:
  2308 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  2309 ;; Parameters:    Size  Location     Type
  2310 ;;  c               2    2[COMRAM] int 
  2311 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  2312 ;;		 -> sprintf@f(6), 
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;		None
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  2    2[COMRAM] int 
  2317 ;; Registers used:
  2318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2324 ;;      Params:         4       0       0       0       0       0       0       0       0
  2325 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2326 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2327 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2328 ;;Total ram usage:        9 bytes
  2329 ;; Hardware stack levels used:    1
  2330 ;; Hardware stack levels required when called:    2
  2331 ;; This function calls:
  2332 ;;		_putch
  2333 ;; This function is called by:
  2334 ;;		_pad
  2335 ;;		_vfpfcnvrt
  2336 ;;		_fputs
  2337 ;; This function uses a non-reentrant model
  2338 ;;
  2339                           
  2340                           	psect	text13
  2341  000E5E                     __ptext13:
  2342                           	opt callstack 0
  2343  000E5E                     _fputc:
  2344                           	opt callstack 21
  2345  000E5E  5005               	movf	fputc@fp^0,w,c
  2346  000E60  1006               	iorwf	(fputc@fp+1)^0,w,c
  2347  000E62  B4D8               	btfsc	status,2,c
  2348  000E64  EF36  F007         	goto	u1111
  2349  000E68  EF38  F007         	goto	u1110
  2350  000E6C                     u1111:
  2351  000E6C  EF41  F007         	goto	l1708
  2352  000E70                     u1110:
  2353  000E70  5005               	movf	fputc@fp^0,w,c
  2354  000E72  1006               	iorwf	(fputc@fp+1)^0,w,c
  2355  000E74  A4D8               	btfss	status,2,c
  2356  000E76  EF3F  F007         	goto	u1121
  2357  000E7A  EF41  F007         	goto	u1120
  2358  000E7E                     u1121:
  2359  000E7E  EF46  F007         	goto	l1710
  2360  000E82                     u1120:
  2361  000E82                     l1708:
  2362  000E82  5003               	movf	fputc@c^0,w,c
  2363  000E84  ECF7  F009         	call	_putch
  2364  000E88  EF93  F007         	goto	l923
  2365  000E8C                     l1710:
  2366  000E8C  EE20 F004          	lfsr	2,4
  2367  000E90  5005               	movf	fputc@fp^0,w,c
  2368  000E92  26D9               	addwf	fsr2l,f,c
  2369  000E94  5006               	movf	(fputc@fp+1)^0,w,c
  2370  000E96  22DA               	addwfc	fsr2h,f,c
  2371  000E98  50DE               	movf	postinc2,w,c
  2372  000E9A  10DE               	iorwf	postinc2,w,c
  2373  000E9C  B4D8               	btfsc	status,2,c
  2374  000E9E  EF53  F007         	goto	u1131
  2375  000EA2  EF55  F007         	goto	u1130
  2376  000EA6                     u1131:
  2377  000EA6  EF70  F007         	goto	l1714
  2378  000EAA                     u1130:
  2379  000EAA  EE20 F004          	lfsr	2,4
  2380  000EAE  5005               	movf	fputc@fp^0,w,c
  2381  000EB0  26D9               	addwf	fsr2l,f,c
  2382  000EB2  5006               	movf	(fputc@fp+1)^0,w,c
  2383  000EB4  22DA               	addwfc	fsr2h,f,c
  2384  000EB6  EE10 F002          	lfsr	1,2
  2385  000EBA  5005               	movf	fputc@fp^0,w,c
  2386  000EBC  26E1               	addwf	fsr1l,f,c
  2387  000EBE  5006               	movf	(fputc@fp+1)^0,w,c
  2388  000EC0  22E2               	addwfc	fsr1h,f,c
  2389  000EC2  50DE               	movf	postinc2,w,c
  2390  000EC4  5CE6               	subwf	postinc1,w,c
  2391  000EC6  50E6               	movf	postinc1,w,c
  2392  000EC8  0A80               	xorlw	128
  2393  000ECA  6E0B               	movwf	(??_fputc+4)^0,c
  2394  000ECC  50DE               	movf	postinc2,w,c
  2395  000ECE  0A80               	xorlw	128
  2396  000ED0  580B               	subwfb	(??_fputc+4)^0,w,c
  2397  000ED2  B0D8               	btfsc	status,0,c
  2398  000ED4  EF6E  F007         	goto	u1141
  2399  000ED8  EF70  F007         	goto	u1140
  2400  000EDC                     u1141:
  2401  000EDC  EF93  F007         	goto	l923
  2402  000EE0                     u1140:
  2403  000EE0                     l1714:
  2404  000EE0  EE20 F002          	lfsr	2,2
  2405  000EE4  5005               	movf	fputc@fp^0,w,c
  2406  000EE6  26D9               	addwf	fsr2l,f,c
  2407  000EE8  5006               	movf	(fputc@fp+1)^0,w,c
  2408  000EEA  22DA               	addwfc	fsr2h,f,c
  2409  000EEC  CFDE F007          	movff	postinc2,??_fputc
  2410  000EF0  CFDD F008          	movff	postdec2,??_fputc+1
  2411  000EF4  C005  FFD9         	movff	fputc@fp,fsr2l
  2412  000EF8  C006  FFDA         	movff	fputc@fp+1,fsr2h
  2413  000EFC  CFDE F009          	movff	postinc2,??_fputc+2
  2414  000F00  CFDD F00A          	movff	postdec2,??_fputc+3
  2415  000F04  5007               	movf	??_fputc^0,w,c
  2416  000F06  2409               	addwf	(??_fputc+2)^0,w,c
  2417  000F08  6ED9               	movwf	fsr2l,c
  2418  000F0A  5008               	movf	(??_fputc+1)^0,w,c
  2419  000F0C  200A               	addwfc	(??_fputc+3)^0,w,c
  2420  000F0E  6EDA               	movwf	fsr2h,c
  2421  000F10  C003  FFDF         	movff	fputc@c,indf2
  2422  000F14  EE20 F002          	lfsr	2,2
  2423  000F18  5005               	movf	fputc@fp^0,w,c
  2424  000F1A  26D9               	addwf	fsr2l,f,c
  2425  000F1C  5006               	movf	(fputc@fp+1)^0,w,c
  2426  000F1E  22DA               	addwfc	fsr2h,f,c
  2427  000F20  2ADE               	incf	postinc2,f,c
  2428  000F22  0E00               	movlw	0
  2429  000F24  22DD               	addwfc	postdec2,f,c
  2430  000F26                     l923:
  2431  000F26  0012               	return		;funcret
  2432  000F28                     __end_of_fputc:
  2433                           	opt callstack 0
  2434                           
  2435 ;; *************** function _putch *****************
  2436 ;; Defined at:
  2437 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  2438 ;; Parameters:    Size  Location     Type
  2439 ;;  c               1    wreg     unsigned char 
  2440 ;; Auto vars:     Size  Location     Type
  2441 ;;  c               1    0[COMRAM] unsigned char 
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  1    wreg      void 
  2444 ;; Registers used:
  2445 ;;		wreg
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2451 ;;      Params:         0       0       0       0       0       0       0       0       0
  2452 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2453 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2454 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2455 ;;Total ram usage:        0 bytes
  2456 ;; Hardware stack levels used:    1
  2457 ;; Hardware stack levels required when called:    1
  2458 ;; This function calls:
  2459 ;;		Nothing
  2460 ;; This function is called by:
  2461 ;;		_fputc
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465                           	psect	text14
  2466  0013EE                     __ptext14:
  2467                           	opt callstack 0
  2468  0013EE                     _putch:
  2469                           	opt callstack 21
  2470  0013EE  0012               	return		;funcret
  2471  0013F0                     __end_of_putch:
  2472                           	opt callstack 0
  2473                           
  2474 ;; *************** function _isupper *****************
  2475 ;; Defined at:
  2476 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  2477 ;; Parameters:    Size  Location     Type
  2478 ;;  c               2    2[COMRAM] int 
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;		None
  2481 ;; Return value:  Size  Location     Type
  2482 ;;                  2    2[COMRAM] int 
  2483 ;; Registers used:
  2484 ;;		wreg, status,2, status,0
  2485 ;; Tracked objects:
  2486 ;;		On entry : 0/0
  2487 ;;		On exit  : 0/0
  2488 ;;		Unchanged: 0/0
  2489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2490 ;;      Params:         2       0       0       0       0       0       0       0       0
  2491 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2492 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2493 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2494 ;;Total ram usage:        6 bytes
  2495 ;; Hardware stack levels used:    1
  2496 ;; Hardware stack levels required when called:    1
  2497 ;; This function calls:
  2498 ;;		Nothing
  2499 ;; This function is called by:
  2500 ;;		_xtoa
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           
  2504                           	psect	text15
  2505  0012FC                     __ptext15:
  2506                           	opt callstack 0
  2507  0012FC                     _isupper:
  2508                           	opt callstack 24
  2509  0012FC  0EBF               	movlw	191
  2510  0012FE  6E05               	movwf	??_isupper^0,c
  2511  001300  0EFF               	movlw	255
  2512  001302  6E06               	movwf	(??_isupper+1)^0,c
  2513  001304  C003  F007         	movff	isupper@c,??_isupper+2
  2514  001308  C004  F008         	movff	isupper@c+1,??_isupper+3
  2515  00130C  5005               	movf	??_isupper^0,w,c
  2516  00130E  2607               	addwf	(??_isupper+2)^0,f,c
  2517  001310  5006               	movf	(??_isupper+1)^0,w,c
  2518  001312  2208               	addwfc	(??_isupper+3)^0,f,c
  2519  001314  5008               	movf	(??_isupper+3)^0,w,c
  2520  001316  E10A               	bnz	u1230
  2521  001318  0E1A               	movlw	26
  2522  00131A  5C07               	subwf	(??_isupper+2)^0,w,c
  2523  00131C  A0D8               	btfss	status,0,c
  2524  00131E  EF93  F009         	goto	u1231
  2525  001322  EF96  F009         	goto	u1230
  2526  001326                     u1231:
  2527  001326  0E01               	movlw	1
  2528  001328  EF97  F009         	goto	u1240
  2529  00132C                     u1230:
  2530  00132C  0E00               	movlw	0
  2531  00132E                     u1240:
  2532  00132E  6E03               	movwf	?_isupper^0,c
  2533  001330  6A04               	clrf	(?_isupper+1)^0,c
  2534  001332  0012               	return		;funcret
  2535  001334                     __end_of_isupper:
  2536                           	opt callstack 0
  2537                           
  2538 ;; *************** function _isalpha *****************
  2539 ;; Defined at:
  2540 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isalpha.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;  c               2    2[COMRAM] int 
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;		None
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  2    2[COMRAM] int 
  2547 ;; Registers used:
  2548 ;;		wreg, status,2, status,0
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2554 ;;      Params:         2       0       0       0       0       0       0       0       0
  2555 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2556 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2557 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2558 ;;Total ram usage:        6 bytes
  2559 ;; Hardware stack levels used:    1
  2560 ;; Hardware stack levels required when called:    1
  2561 ;; This function calls:
  2562 ;;		Nothing
  2563 ;; This function is called by:
  2564 ;;		_xtoa
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568                           	psect	text16
  2569  001288                     __ptext16:
  2570                           	opt callstack 0
  2571  001288                     _isalpha:
  2572                           	opt callstack 24
  2573  001288  0E9F               	movlw	159
  2574  00128A  6E05               	movwf	??_isalpha^0,c
  2575  00128C  0EFF               	movlw	255
  2576  00128E  6E06               	movwf	(??_isalpha+1)^0,c
  2577  001290  0E20               	movlw	32
  2578  001292  1003               	iorwf	isalpha@c^0,w,c
  2579  001294  6E07               	movwf	(??_isalpha+2)^0,c
  2580  001296  0E00               	movlw	0
  2581  001298  1004               	iorwf	(isalpha@c+1)^0,w,c
  2582  00129A  6E08               	movwf	(??_isalpha+3)^0,c
  2583  00129C  5005               	movf	??_isalpha^0,w,c
  2584  00129E  2607               	addwf	(??_isalpha+2)^0,f,c
  2585  0012A0  5006               	movf	(??_isalpha+1)^0,w,c
  2586  0012A2  2208               	addwfc	(??_isalpha+3)^0,f,c
  2587  0012A4  5008               	movf	(??_isalpha+3)^0,w,c
  2588  0012A6  E10A               	bnz	u1250
  2589  0012A8  0E1A               	movlw	26
  2590  0012AA  5C07               	subwf	(??_isalpha+2)^0,w,c
  2591  0012AC  A0D8               	btfss	status,0,c
  2592  0012AE  EF5B  F009         	goto	u1251
  2593  0012B2  EF5E  F009         	goto	u1250
  2594  0012B6                     u1251:
  2595  0012B6  0E01               	movlw	1
  2596  0012B8  EF5F  F009         	goto	u1260
  2597  0012BC                     u1250:
  2598  0012BC  0E00               	movlw	0
  2599  0012BE                     u1260:
  2600  0012BE  6E03               	movwf	?_isalpha^0,c
  2601  0012C0  6A04               	clrf	(?_isalpha+1)^0,c
  2602  0012C2  0012               	return		;funcret
  2603  0012C4                     __end_of_isalpha:
  2604                           	opt callstack 0
  2605                           
  2606 ;; *************** function _WriteLCD *****************
  2607 ;; Defined at:
  2608 ;;		line 121 in file "main.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;  word            1    wreg     unsigned char 
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;  word            1    3[COMRAM] unsigned char 
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  1    wreg      void 
  2615 ;; Registers used:
  2616 ;;		wreg, status,2, status,0, cstack
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2622 ;;      Params:         0       0       0       0       0       0       0       0       0
  2623 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2624 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2625 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2626 ;;Total ram usage:        1 bytes
  2627 ;; Hardware stack levels used:    1
  2628 ;; Hardware stack levels required when called:    2
  2629 ;; This function calls:
  2630 ;;		_LCD
  2631 ;; This function is called by:
  2632 ;;		_Data1LCD
  2633 ;;		_Data2LCD
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637                           	psect	text17
  2638  0013AE                     __ptext17:
  2639                           	opt callstack 0
  2640  0013AE                     _WriteLCD:
  2641                           	opt callstack 27
  2642                           
  2643                           ;incstack = 0
  2644                           ;WriteLCD@word stored from wreg
  2645  0013AE  6E04               	movwf	WriteLCD@word^0,c
  2646  0013B0                     
  2647                           ;main.c: 122:     LATE1 = 1;
  2648  0013B0  828D               	bsf	3981,1,c	;volatile
  2649  0013B2                     
  2650                           ;main.c: 123:     LCD(word >> 4);
  2651  0013B2  3804               	swapf	WriteLCD@word^0,w,c
  2652  0013B4  0B0F               	andlw	15
  2653  0013B6  ECB5  F009         	call	_LCD
  2654                           
  2655                           ;main.c: 124:     LCD(word & 0x0F);
  2656  0013BA  5004               	movf	WriteLCD@word^0,w,c
  2657  0013BC  0B0F               	andlw	15
  2658  0013BE  ECB5  F009         	call	_LCD
  2659  0013C2  0012               	return		;funcret
  2660  0013C4                     __end_of_WriteLCD:
  2661                           	opt callstack 0
  2662                           
  2663 ;; *************** function _SettingsLCD *****************
  2664 ;; Defined at:
  2665 ;;		line 115 in file "main.c"
  2666 ;; Parameters:    Size  Location     Type
  2667 ;;  word            1    wreg     unsigned char 
  2668 ;; Auto vars:     Size  Location     Type
  2669 ;;  word            1    3[COMRAM] unsigned char 
  2670 ;; Return value:  Size  Location     Type
  2671 ;;                  1    wreg      void 
  2672 ;; Registers used:
  2673 ;;		wreg, status,2, status,0, cstack
  2674 ;; Tracked objects:
  2675 ;;		On entry : 0/0
  2676 ;;		On exit  : 0/0
  2677 ;;		Unchanged: 0/0
  2678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2679 ;;      Params:         0       0       0       0       0       0       0       0       0
  2680 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2681 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2682 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2683 ;;Total ram usage:        1 bytes
  2684 ;; Hardware stack levels used:    1
  2685 ;; Hardware stack levels required when called:    2
  2686 ;; This function calls:
  2687 ;;		_LCD
  2688 ;; This function is called by:
  2689 ;;		_settings
  2690 ;;		_Data1LCD
  2691 ;;		_Data2LCD
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           	psect	text18
  2696  0013C4                     __ptext18:
  2697                           	opt callstack 0
  2698  0013C4                     _SettingsLCD:
  2699                           	opt callstack 27
  2700                           
  2701                           ;incstack = 0
  2702                           ;SettingsLCD@word stored from wreg
  2703  0013C4  6E04               	movwf	SettingsLCD@word^0,c
  2704  0013C6                     
  2705                           ;main.c: 116:     LATE1 = 0;
  2706  0013C6  928D               	bcf	3981,1,c	;volatile
  2707  0013C8                     
  2708                           ;main.c: 117:     LCD(word >> 4);
  2709  0013C8  3804               	swapf	SettingsLCD@word^0,w,c
  2710  0013CA  0B0F               	andlw	15
  2711  0013CC  ECB5  F009         	call	_LCD
  2712                           
  2713                           ;main.c: 118:     LCD(word & 0x0F);
  2714  0013D0  5004               	movf	SettingsLCD@word^0,w,c
  2715  0013D2  0B0F               	andlw	15
  2716  0013D4  ECB5  F009         	call	_LCD
  2717  0013D8  0012               	return		;funcret
  2718  0013DA                     __end_of_SettingsLCD:
  2719                           	opt callstack 0
  2720                           
  2721 ;; *************** function _LCD *****************
  2722 ;; Defined at:
  2723 ;;		line 127 in file "main.c"
  2724 ;; Parameters:    Size  Location     Type
  2725 ;;  data            1    wreg     unsigned char 
  2726 ;; Auto vars:     Size  Location     Type
  2727 ;;  data            1    2[COMRAM] unsigned char 
  2728 ;; Return value:  Size  Location     Type
  2729 ;;                  1    wreg      void 
  2730 ;; Registers used:
  2731 ;;		wreg, status,2, cstack
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/0
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2737 ;;      Params:         0       0       0       0       0       0       0       0       0
  2738 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2739 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2740 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2741 ;;Total ram usage:        1 bytes
  2742 ;; Hardware stack levels used:    1
  2743 ;; Hardware stack levels required when called:    1
  2744 ;; This function calls:
  2745 ;;		Nothing
  2746 ;; This function is called by:
  2747 ;;		_SettingsLCD
  2748 ;;		_WriteLCD
  2749 ;; This function uses a non-reentrant model
  2750 ;;
  2751                           
  2752                           	psect	text19
  2753  00136A                     __ptext19:
  2754                           	opt callstack 0
  2755  00136A                     _LCD:
  2756                           	opt callstack 27
  2757                           
  2758                           ;incstack = 0
  2759                           ;LCD@data stored from wreg
  2760  00136A  6E03               	movwf	LCD@data^0,c
  2761  00136C                     
  2762                           ;main.c: 128:     LATE0 = 1;
  2763  00136C  808D               	bsf	3981,0,c	;volatile
  2764  00136E                     
  2765                           ;main.c: 129:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  2766  00136E  0E06               	movlw	6
  2767  001370                     u1567:
  2768  001370  2EE8               	decfsz	wreg,f,c
  2769  001372  D7FE               	bra	u1567
  2770  001374  D000               	nop2	
  2771  001376                     
  2772                           ;main.c: 130:     LATD = data;
  2773  001376  C003  FF8C         	movff	LCD@data,3980	;volatile
  2774  00137A                     
  2775                           ;main.c: 131:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  2776  00137A  0E06               	movlw	6
  2777  00137C                     u1577:
  2778  00137C  2EE8               	decfsz	wreg,f,c
  2779  00137E  D7FE               	bra	u1577
  2780  001380  D000               	nop2	
  2781  001382                     
  2782                           ;main.c: 132:     LATE0 = 0;
  2783  001382  908D               	bcf	3981,0,c	;volatile
  2784  001384                     
  2785                           ;main.c: 133:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  2786  001384  0E06               	movlw	6
  2787  001386                     u1587:
  2788  001386  2EE8               	decfsz	wreg,f,c
  2789  001388  D7FE               	bra	u1587
  2790  00138A  D000               	nop2	
  2791  00138C  0012               	return		;funcret
  2792  00138E                     __end_of_LCD:
  2793                           	opt callstack 0
  2794                           
  2795 ;; *************** function _Slave_I2C *****************
  2796 ;; Defined at:
  2797 ;;		line 77 in file "main.c"
  2798 ;; Parameters:    Size  Location     Type
  2799 ;;		None
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;		None
  2802 ;; Return value:  Size  Location     Type
  2803 ;;                  1    wreg      void 
  2804 ;; Registers used:
  2805 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2806 ;; Tracked objects:
  2807 ;;		On entry : 0/0
  2808 ;;		On exit  : 0/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2811 ;;      Params:         0       0       0       0       0       0       0       0       0
  2812 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2813 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2814 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2815 ;;Total ram usage:        2 bytes
  2816 ;; Hardware stack levels used:    1
  2817 ;; This function calls:
  2818 ;;		Nothing
  2819 ;; This function is called by:
  2820 ;;		Interrupt level 2
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           
  2824                           	psect	intcode
  2825  000008                     __pintcode:
  2826                           	opt callstack 0
  2827  000008                     _Slave_I2C:
  2828                           	opt callstack 21
  2829                           
  2830                           ;incstack = 0
  2831  000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2832  00000A  EDBC  F006         	call	int_func,f	;refresh shadow registers
  2833                           
  2834                           	psect	intcode_body
  2835  000D78                     __pintcode_body:
  2836                           	opt callstack 21
  2837  000D78                     int_func:
  2838                           	opt callstack 21
  2839  000D78  0006               	pop		; remove dummy address from shadow register refresh
  2840  000D7A  CFD9 F001          	movff	fsr2l,??_Slave_I2C
  2841  000D7E  CFDA F002          	movff	fsr2h,??_Slave_I2C+1
  2842  000D82                     
  2843                           ;main.c: 78:     if (SSPIF == 1) {
  2844  000D82  A69E               	btfss	3998,3,c	;volatile
  2845  000D84  EFC6  F006         	goto	i2u101_41
  2846  000D88  EFC8  F006         	goto	i2u101_40
  2847  000D8C                     i2u101_41:
  2848  000D8C  EF29  F007         	goto	i2l112
  2849  000D90                     i2u101_40:
  2850  000D90                     
  2851                           ;main.c: 79:         SSPCON1bits.CKP = 0;
  2852  000D90  98C6               	bcf	198,4,c	;volatile
  2853                           
  2854                           ;main.c: 80:         if (SSPCON1bits.SSPOV || SSPCON1bits.WCOL) {
  2855  000D92  BCC6               	btfsc	198,6,c	;volatile
  2856  000D94  EFCE  F006         	goto	i2u102_41
  2857  000D98  EFD0  F006         	goto	i2u102_40
  2858  000D9C                     i2u102_41:
  2859  000D9C  EFD7  F006         	goto	i2l97
  2860  000DA0                     i2u102_40:
  2861  000DA0  AEC6               	btfss	198,7,c	;volatile
  2862  000DA2  EFD5  F006         	goto	i2u103_41
  2863  000DA6  EFD7  F006         	goto	i2u103_40
  2864  000DAA                     i2u103_41:
  2865  000DAA  EFDC  F006         	goto	i2l95
  2866  000DAE                     i2u103_40:
  2867  000DAE                     i2l97:
  2868                           
  2869                           ;main.c: 81:             buffer = SSPBUF;
  2870  000DAE  CFC9 F06F          	movff	4041,_buffer	;volatile
  2871                           
  2872                           ;main.c: 82:             SSPCON1bits.SSPOV = 0;
  2873  000DB2  9CC6               	bcf	198,6,c	;volatile
  2874                           
  2875                           ;main.c: 83:             SSPCON1bits.WCOL = 0;
  2876  000DB4  9EC6               	bcf	198,7,c	;volatile
  2877                           
  2878                           ;main.c: 84:             SSPCON1bits.CKP = 1;
  2879  000DB6  88C6               	bsf	198,4,c	;volatile
  2880  000DB8                     i2l95:
  2881                           
  2882                           ;main.c: 86:         if (!SSPSTATbits.D_nA || !SSPSTATbits.R_nW) {
  2883  000DB8  AAC7               	btfss	199,5,c	;volatile
  2884  000DBA  EFE1  F006         	goto	i2u104_41
  2885  000DBE  EFE3  F006         	goto	i2u104_40
  2886  000DC2                     i2u104_41:
  2887  000DC2  EFEA  F006         	goto	i2l100
  2888  000DC6                     i2u104_40:
  2889  000DC6  B4C7               	btfsc	199,2,c	;volatile
  2890  000DC8  EFE8  F006         	goto	i2u105_41
  2891  000DCC  EFEA  F006         	goto	i2u105_40
  2892  000DD0                     i2u105_41:
  2893  000DD0  EF0D  F007         	goto	i2l98
  2894  000DD4                     i2u105_40:
  2895  000DD4                     i2l100:
  2896                           
  2897                           ;main.c: 91:             buffer = SSPBUF;
  2898  000DD4  CFC9 F06F          	movff	4041,_buffer	;volatile
  2899  000DD8                     i2l101:
  2900  000DD8  B0C7               	btfsc	4039,0,c	;volatile
  2901  000DDA  EFF1  F006         	goto	i2u106_41
  2902  000DDE  EFF3  F006         	goto	i2u106_40
  2903  000DE2                     i2u106_41:
  2904  000DE2  EFEC  F006         	goto	i2l101
  2905  000DE6                     i2u106_40:
  2906  000DE6                     
  2907                           ;main.c: 93:             mibuffer = SSPBUF;
  2908  000DE6  CFC9 F06E          	movff	4041,_mibuffer	;volatile
  2909  000DEA                     
  2910                           ;main.c: 94:             text[i] = mibuffer;
  2911  000DEA  0E60               	movlw	low _text
  2912  000DEC  245C               	addwf	_i^0,w,c
  2913  000DEE  6ED9               	movwf	fsr2l,c
  2914  000DF0  6ADA               	clrf	fsr2h,c
  2915  000DF2  0E00               	movlw	high _text
  2916  000DF4  22DA               	addwfc	fsr2h,f,c
  2917  000DF6  C06E  FFDF         	movff	_mibuffer,indf2
  2918  000DFA                     
  2919                           ;main.c: 95:             i++;
  2920  000DFA  2A5C               	incf	_i^0,f,c
  2921  000DFC                     
  2922                           ;main.c: 96:             if (i == 6) {
  2923  000DFC  0E06               	movlw	6
  2924  000DFE  185C               	xorwf	_i^0,w,c
  2925  000E00  A4D8               	btfss	status,2,c
  2926  000E02  EF05  F007         	goto	i2u107_41
  2927  000E06  EF07  F007         	goto	i2u107_40
  2928  000E0A                     i2u107_41:
  2929  000E0A  EF09  F007         	goto	i2l1678
  2930  000E0E                     i2u107_40:
  2931  000E0E                     
  2932                           ;main.c: 97:                 i = 0;
  2933  000E0E  0E00               	movlw	0
  2934  000E10  6E5C               	movwf	_i^0,c
  2935  000E12                     i2l1678:
  2936                           
  2937                           ;main.c: 99:             SSPCON1bits.CKP = 1;
  2938  000E12  88C6               	bsf	198,4,c	;volatile
  2939  000E14                     
  2940                           ;main.c: 100:             SSPM3 = 0;
  2941  000E14  96C6               	bcf	4038,3,c	;volatile
  2942                           
  2943                           ;main.c: 101:         } else if (!SSPSTATbits.D_nA || SSPSTATbits.R_nW) {
  2944  000E16  EF28  F007         	goto	i2l105
  2945  000E1A                     i2l98:
  2946  000E1A  AAC7               	btfss	199,5,c	;volatile
  2947  000E1C  EF12  F007         	goto	i2u108_41
  2948  000E20  EF14  F007         	goto	i2u108_40
  2949  000E24                     i2u108_41:
  2950  000E24  EF1B  F007         	goto	i2l108
  2951  000E28                     i2u108_40:
  2952  000E28  A4C7               	btfss	199,2,c	;volatile
  2953  000E2A  EF19  F007         	goto	i2u109_41
  2954  000E2E  EF1B  F007         	goto	i2u109_40
  2955  000E32                     i2u109_41:
  2956  000E32  EF28  F007         	goto	i2l105
  2957  000E36                     i2u109_40:
  2958  000E36                     i2l108:
  2959                           
  2960                           ;main.c: 105:             buffer = SSPBUF;
  2961  000E36  CFC9 F06F          	movff	4041,_buffer	;volatile
  2962                           
  2963                           ;main.c: 106:             BF = 0;
  2964  000E3A  90C7               	bcf	4039,0,c	;volatile
  2965                           
  2966                           ;main.c: 107:             SSPBUF = PORTC;
  2967  000E3C  CF82 FFC9          	movff	3970,4041	;volatile
  2968                           
  2969                           ;main.c: 108:             SSPCON1bits.CKP = 1;
  2970  000E40  88C6               	bsf	198,4,c	;volatile
  2971  000E42                     i2l109:
  2972  000E42  B0C7               	btfsc	199,0,c	;volatile
  2973  000E44  EF26  F007         	goto	i2u110_41
  2974  000E48  EF28  F007         	goto	i2u110_40
  2975  000E4C                     i2u110_41:
  2976  000E4C  EF21  F007         	goto	i2l109
  2977  000E50                     i2u110_40:
  2978  000E50                     i2l105:
  2979                           
  2980                           ;main.c: 111:         SSPIF = 0;
  2981  000E50  969E               	bcf	3998,3,c	;volatile
  2982  000E52                     i2l112:
  2983  000E52  C002  FFDA         	movff	??_Slave_I2C+1,fsr2h
  2984  000E56  C001  FFD9         	movff	??_Slave_I2C,fsr2l
  2985  000E5A  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2986  000E5C  0011               	retfie		f
  2987  000E5E                     __end_of_Slave_I2C:
  2988                           	opt callstack 0
  2989                           
  2990                           	psect	rparam
  2991  0000                     
  2992                           	psect	temp
  2993  00005D                     btemp:
  2994                           	opt callstack 0
  2995  00005D                     	ds	1
  2996  0000                     int$flags	set	btemp
  2997  0000                     wtemp8	set	btemp+1
  2998  0000                     ttemp5	set	btemp+1
  2999  0000                     ttemp6	set	btemp+4
  3000  0000                     ttemp7	set	btemp+8
  3001                           tosu	equ	0xFFF
  3002                           tosh	equ	0xFFE
  3003                           tosl	equ	0xFFD
  3004                           stkptr	equ	0xFFC
  3005                           pclatu	equ	0xFFB
  3006                           pclath	equ	0xFFA
  3007                           pcl	equ	0xFF9
  3008                           tblptru	equ	0xFF8
  3009                           tblptrh	equ	0xFF7
  3010                           tblptrl	equ	0xFF6
  3011                           tablat	equ	0xFF5
  3012                           prodh	equ	0xFF4
  3013                           prodl	equ	0xFF3
  3014                           indf0	equ	0xFEF
  3015                           postinc0	equ	0xFEE
  3016                           postdec0	equ	0xFED
  3017                           preinc0	equ	0xFEC
  3018                           plusw0	equ	0xFEB
  3019                           fsr0h	equ	0xFEA
  3020                           fsr0l	equ	0xFE9
  3021                           wreg	equ	0xFE8
  3022                           indf1	equ	0xFE7
  3023                           postinc1	equ	0xFE6
  3024                           postdec1	equ	0xFE5
  3025                           preinc1	equ	0xFE4
  3026                           plusw1	equ	0xFE3
  3027                           fsr1h	equ	0xFE2
  3028                           fsr1l	equ	0xFE1
  3029                           bsr	equ	0xFE0
  3030                           indf2	equ	0xFDF
  3031                           postinc2	equ	0xFDE
  3032                           postdec2	equ	0xFDD
  3033                           preinc2	equ	0xFDC
  3034                           plusw2	equ	0xFDB
  3035                           fsr2h	equ	0xFDA
  3036                           fsr2l	equ	0xFD9
  3037                           status	equ	0xFD8


Data Sizes:
    Strings     24
    Constant    0
    Data        0
    BSS         81
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     89      92
    BANK0           160     30     108
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), texto(BANK0[15]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), texto(BANK0[15]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), STR_1(CODE[12]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 15
		 -> texto2(BANK0[15]), texto(BANK0[15]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 15
		 -> texto2(BANK0[15]), texto(BANK0[15]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S873_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 15
		 -> texto2(BANK0[15]), texto(BANK0[15]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 15
		 -> texto2(BANK0[15]), texto(BANK0[15]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), STR_1(CODE[12]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 12
		 -> STR_2(CODE[12]), STR_1(CODE[12]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 


Critical Paths under _main in COMRAM

    _settings->_SettingsLCD
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _pad->_fputs
    _fputs->_fputc
    _WriteLCD->_LCD
    _SettingsLCD->_LCD

Critical Paths under _Slave_I2C in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Data1LCD
    _main->_Data2LCD
    _Data2LCD->_sprintf
    _Data1LCD->_sprintf
    _sprintf->_vfprintf

Critical Paths under _Slave_I2C in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Slave_I2C in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Slave_I2C in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Slave_I2C in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Slave_I2C in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Slave_I2C in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Slave_I2C in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Slave_I2C in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   18860
                           _Data1LCD
                           _Data2LCD
                           _settings
 ---------------------------------------------------------------------------------
 (1) _settings                                             0     0      0      66
                        _SettingsLCD
 ---------------------------------------------------------------------------------
 (1) _Data2LCD                                             2     2      0    9397
                                             28 BANK0      2     2      0
                        _SettingsLCD
                           _WriteLCD
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _Data1LCD                                             2     2      0    9397
                                             28 BANK0      2     2      0
                        _SettingsLCD
                           _WriteLCD
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             20    10     10    8865
                                              8 BANK0     20    10     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    8199
                                              0 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           44    38      6    7690
                                             68 COMRAM    21    15      6
                              _fputc
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    5627
                                             29 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     512
                                              8 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     191
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3597
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     400
                                              2 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4    1037
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     191
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     191
                                              2 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _WriteLCD                                             1     1      0      66
                                              3 COMRAM     1     1      0
                                _LCD
 ---------------------------------------------------------------------------------
 (2) _SettingsLCD                                          1     1      0      66
                                              3 COMRAM     1     1      0
                                _LCD
 ---------------------------------------------------------------------------------
 (3) _LCD                                                  1     1      0      22
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _Slave_I2C                                           2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Data1LCD
     _SettingsLCD
       _LCD
     _WriteLCD
       _LCD
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _fputc
             _putch
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
     _strlen
   _Data2LCD
     _SettingsLCD
       _LCD
     _WriteLCD
       _LCD
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _fputc
             _putch
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
     _strlen
   _settings
     _SettingsLCD
       _LCD

 _Slave_I2C (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1E      6C       5       67.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     59      5C       1       97.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C8      20        0.0%
DATA                 0      0      C8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Mar 19 21:21:32 2021

                      _i 005C                        _j 006C              _SSPSTATbits 000FC7  
                     _BF 007E38                       l89 11F0                      l121 138C  
                    l115 13D8                      l213 0BE0                      l133 1062  
                    l118 13C2                      l127 10DC                      l224 1136  
                    l225 113E                      l218 0D76                      l164 0F6C  
                    l174 0852                      l167 0FAE                      l183 08EE  
                    l176 085A                      l169 0FE8                      l197 0A8A  
                    l199 0AEC                      l902 12C2                      l923 0F26  
                    l931 1286                      l908 1332                      l941 13EE  
                    l952 1194                      l938 1242                      l947 1368  
                    l963 12FA                      l957 119C                      _GIE 007F97  
                    _LCD 136A                      _pad 0F28                      wreg 000FE8  
           __CFG_LVP$OFF 000000                     ?_LCD 0001             __CFG_WDT$OFF 000000  
                   l1600 119E                     l1610 11CE                     l1602 11B6  
                   l1620 11E0                     l1612 11D4                     l1604 11BC  
                   l1710 0E8C                     l1630 11EE                     l1622 11E4  
                   l1614 11D6                     l1606 11C2                     l1560 136C  
                   l1712 0EAA                     l1704 0E5E                     l1720 1340  
                   l1800 08B6                     l1624 11E8                     l1616 11D8  
                   l1608 11C8                     l1570 1384                     l1562 136E  
                   l1714 0EE0                     l1706 0E70                     l1730 1250  
                   l1722 1344                     l1810 0934                     l1802 08D2  
                   l1626 11EA                     l1618 11DC                     l1564 1376  
                   l1580 13C6                     l1708 0E82                     l1732 1262  
                   l1724 135C                     l1740 0F28                     l1820 09A4  
                   l1804 08E2                     l1900 0CD4                     l1628 11EC  
                   l1566 137A                     l1582 13C8                     l1734 1266  
                   l1718 1334                     l1750 0F78                     l1742 0F36  
                   l1830 0A48                     l1822 09AA                     l1814 096E  
                   l1902 0CF8                     l1910 0D26                     l1568 1382  
                   l1584 13B0                     l1728 1244                     l1752 0F8C  
                   l1744 0F4A                     l1736 12C4                     l1840 0AAE  
                   l1832 0A62                     l1824 09B0                     l1816 0980  
                   l1808 0922                     l1912 0D34                     l1904 0D06  
                   l1586 13B2                     l1762 12FC                     l1754 0F90  
                   l1746 0F58                     l1770 1140                     l1842 0AC4  
                   l1834 0A7C                     l1818 0994                     l1826 0A0E  
                   l1906 0D1A                     l1850 0B20                     l1930 10E6  
                   l1756 0FBC                     l1748 0F64                     l1836 0A98  
                   l1828 0A2A                     l1780 081A                     l1860 0B56  
                   l1852 0B32                     l1916 0D40                     l1932 10F4  
                   l1940 120C                     l1766 1288                     l1758 0FD0  
                   l1774 1176                     l1838 0A9E                     l1790 0878  
                   l1782 082A                     l1918 0D64                     l1854 0B36  
                   l1846 0AEE                     l1934 111A                     l1942 1214  
                   l1950 106A                     l1776 1188                     l1792 0898  
                   l1784 082C                     l1880 0B7A                     l1872 0B68  
                   l1864 0B5C                     l1856 0B42                     l1848 0B12  
                   l1928 10DE                     l1944 1230                     l1936 11F2  
                   l1952 1092                     l1960 0FEA                     l1794 08A0  
                   l1786 0846                     l1890 0C38                     l1858 0B44  
                   l1882 0BCE                     l1938 1204                     l1954 109C  
                   l1970 1038                     l1962 0FF0                     l1796 08A8  
                   l1788 0870                     l1892 0C4E                     l1884 0BEE  
                   l1876 0B6E                     l1868 0B62                     l1956 10AE  
                   l1948 1064                     l1964 1018                     l1972 13DA  
                   l1798 08AE                     l1894 0C5C                     l1886 0BF0  
                   l1958 10B2                     l1966 1022                     l1974 13DE  
                   ?_pad 0013                     l1896 0C98                     l1888 0C14  
                   l1968 1034                     l1976 13E2                     l1998 0BA0  
                   STR_1 0801                     STR_2 080D                     u1110 0E70  
                   u1111 0E6C                     u1120 0E82                     u1200 0F58  
                   u1121 0E7E                     u1201 0F54                     u1130 0EAA  
                   u1210 0FAE                     u1131 0EA6                     u1211 0FAA  
                   u1140 0EE0                     u1220 0FBC                     u1300 082A  
                   u1141 0EDC                     u1221 0FB8                     u1301 0826  
                   u1230 132C                     u1150 135C                     u1310 0846  
                   u1231 1326                     u1151 1358                     u1311 0842  
                   u1240 132E                     u1160 1286                     u1400 09E8  
                   u1320 0870                     u1161 1282                     u1321 086C  
                   u1250 12BC                     u1170 12F4                     u1410 0A2A  
                   u1330 08D2                     u1251 12B6                     u1171 12EE  
                   u1411 0A26                     u1331 08CE                     u1260 12BE  
                   u1180 12F6                     u1420 0A48                     u1340 091C  
                   u1500 0C14                     u1421 0A44                     u1405 09D6  
                   u1341 0916                     u1501 0C10                     u1190 0F36  
                   u1270 1170                     u1430 0A62                     u1350 091E  
                   u1510 0C38                     u1191 0F32                     u1271 116A  
                   u1431 0A5E                     u1511 0C34                     u1280 1172  
                   u1440 0A7C                     u1360 0934                     u1520 0CF8  
                   _LATD 000F8C                     u1441 0A78                     u1361 0930  
                   u1521 0CF4                     _LATE 000F8D                     u1290 1188  
                   u1450 0A8A                     u1370 0968                     u1530 1136  
                   u1291 1184                     u1451 0A86                     u1371 0962  
                   u1531 1132                     u1460 0A98                     u1380 096A  
                   u1540 10DC                     u1461 0A94                     u1541 10D8  
                   u1390 0980                     u1470 0B12                     u1550 1062  
                   u1391 097C                     u1471 0B0E                     u1551 105E  
                   u1480 0BE0                     u1481 0BDC                     u1490 0BEE  
                   u1491 0BEA                     u1567 1370                     u1577 137C  
                   u1587 1386                     _PEIE 007F96                     i2l95 0DB8  
                   i2l97 0DAE                     i2l98 0E1A                     _dbuf 0070  
                   _main 13DA                     _byte 006D                     _prec 006A  
                   _nout 0066                     pad@i 001A                     pad@p 0017  
                   _text 0060                     fsr1h 000FE2                     fsr2h 000FDA  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 001C  
                   fsr2l 000FD9                     btemp 005D                     _xtoa 081A  
                   start 000E              _toupper$936 000F             ___param_bank 000000  
                  ??_LCD 0003                    ??_pad 0019                    ?_main 0001  
                  ?_xtoa 001E                    _LATE0 007C68                    _LATE1 007C69  
                  i2l100 0DD4                    i2l101 0DD8                    i2l103 0DE6  
                  i2l112 0E52                    i2l105 0E50                    i2l108 0E36  
                  i2l109 0E42             vfpfcnvrt@fmt 0047             vfpfcnvrt@llu 004F  
                  _PORTC 000F82                    _SSPM3 007E33                    _TRISD 000F95  
                  _SSPIE 007CEB                    _TRISE 000F96                    _SSPIF 007CF3  
                  _flags 005A                    _fputc 0E5E          __end_of_isalpha 12C4  
                  _fputs 1244                    pad@fp 0013                    _width 0068  
                  _texto 009F                    _putch 13EE          __end_of_islower 12FC  
       __end_of_Data1LCD 10DE         __end_of_Data2LCD 1064          __end_of_isupper 1334  
                  tablat 000FF5                    ttemp5 005E                    ttemp6 0061  
                  ttemp7 0065                    status 000FD8                    wtemp8 005E  
        __end_of_sprintf 1244                    xtoa@c 0043                    xtoa@d 0020  
                  xtoa@i 0041                    xtoa@n 0039                    xtoa@p 0035  
                  xtoa@w 0037                    xtoa@x 0028          __end_of_toupper 119E  
        __initialization 138E             __end_of_main 13EE             __end_of_xtoa 0AEE  
                 ??_main 005A                   ??_xtoa 0029            __activetblptr 000002  
                 _ADCON1 000FC1                   ?_fputc 0003                   ?_fputs 000C  
                 ?_putch 0001         __end_of_WriteLCD 13C4                   i2l1670 0DEA  
                 i2l1662 0D82                   i2l1680 0E14                   i2l1672 0DFA  
                 i2l1664 0D90                   i2l1682 0E28                   i2l1674 0DFC  
                 i2l1666 0DA0                   i2l1676 0E0E                   i2l1668 0DC6  
                 i2l1678 0E12                   _OSCCON 000FD3            vfpfcnvrt@done 0058  
                 _SSPADD 000FC8                   _SSPBUF 000FC9             vfprintf@cfmt 00B4  
                 _buffer 006F                   clear_0 1394       __size_of_Slave_I2C 0E56  
                 _texto2 0090                   pad@buf 0015                   _strlen 1334  
                 fputc@c 0003                   fputs@c 0010                   fputs@i 0011  
                 fputs@s 000C                ??_isalpha 0005                ??_islower 0005  
           __mediumconst 0000            ??_SettingsLCD 0004         __end_of_settings 11F2  
                 tblptrh 000FF7                ??_isupper 0005                   tblptrl 000FF6  
                 tblptru 000FF8                   putch@c 0001         __end_of_vfprintf 1140  
              ??_sprintf 005A                   xtoa@fp 001E                ??_toupper 000B  
             __accesstop 0060  __end_of__initialization 13A0             WriteLCD@word 0004  
          ___rparam_used 000001           __pcstackCOMRAM 0001            __end_of_fputc 0F28  
          __end_of_fputs 1288            __end_of_putch 13F0                ?_Data1LCD 0001  
              ?_Data2LCD 0001                  ??_fputc 0007                  ??_fputs 0010  
                ??_putch 0003                  LCD@data 0003               __pbssBANK0 0060  
    __end_of_SettingsLCD 13DA        __end_of_Slave_I2C 0E5E                ?_WriteLCD 0001  
             ??_Data1LCD 00CA               ??_Data2LCD 00CA                  ?_strlen 0003  
     __size_of_vfpfcnvrt 028A                  _SSPCON1 000FC6                  _SSPCON2 000FC5  
                _SSPSTAT 000FC7                  __Hparam 0000                  __Lparam 0000  
              ?_settings 0001                ?_vfprintf 00AE             __psmallconst 0800  
                __pcinit 138E               ??_WriteLCD 0004                  __ramtop 0800  
                __ptext0 13DA                  __ptext1 119E                  __ptext2 0FEA  
                __ptext3 1064                  __ptext4 11F2                  __ptext5 10DE  
                __ptext6 0AEE                  __ptext7 081A                  __ptext8 1140  
                __ptext9 12C4             __size_of_LCD 0024          __size_of_strlen 0036  
           __size_of_pad 00C2                  _isalpha 1288                  _islower 12C4  
                _isupper 12FC              _SettingsLCD 13C4                  _sprintf 11F2  
         __pintcode_body 0D78                  _toupper 1140     end_of_initialization 13A0  
                fputc@fp 0005            __Lmediumconst 0000                  int_func 0D78  
                fputs@fp 000E        __end_of_vfpfcnvrt 0D78                  postdec2 000FDD  
             ??_settings 0005                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE               ??_vfprintf 005A                  strlen@a 0005  
                strlen@s 0003                _TRISBbits 000F93              vfpfcnvrt@ap 0049  
            vfpfcnvrt@fp 0045           __end_of_strlen 136A        __size_of_Data1LCD 007A  
      __size_of_Data2LCD 007A      start_initialization 138E              __end_of_LCD 138E  
            __end_of_pad 0FEA                _Slave_I2C 0008              vfprintf@fmt 00B0  
               ??_strlen 0005        __size_of_WriteLCD 0016              __pbssCOMRAM 005A  
          __pcstackBANK0 00AE               ?_Slave_I2C 0001                __pintcode 0008  
      __size_of_settings 0054        __size_of_vfprintf 0062              __smallconst 0800  
               ?_isalpha 0003                 ?_islower 0003                 ?_isupper 0003  
           ?_SettingsLCD 0001                 ?_sprintf 00B6           __size_of_fputc 00CA  
         __size_of_fputs 0044                 ?_toupper 0009           __size_of_putch 0002  
               i2u101_40 0D90                 i2u101_41 0D8C                 i2u110_40 0E50  
               i2u102_40 0DA0                 i2u110_41 0E4C                 i2u102_41 0D9C  
               i2u103_40 0DAE                 i2u103_41 0DAA                 i2u104_40 0DC6  
               i2u104_41 0DC2                 i2u105_40 0DD4                 i2u105_41 0DD0  
               i2u106_40 0DE6                 i2u106_41 0DE2                 i2u107_40 0E0E  
               i2u107_41 0E0A                 i2u108_40 0E28                 i2u108_41 0E24  
               i2u109_40 0E36                 i2u109_41 0E32                _vfpfcnvrt 0AEE  
               _Data1LCD 1064                 _Data2LCD 0FEA               vfpfcnvrt@c 0057  
               __Hrparam 0000              ??_Slave_I2C 0001               vfprintf@ap 00B2  
               __Lrparam 0000               vfprintf@fp 00AE               ?_vfpfcnvrt 0045  
               _WriteLCD 13AE               sprintf@fmt 00B8         __size_of_isalpha 003C  
       __size_of_islower 0038                 __ptext10 0F28                 __ptext11 1334  
               __ptext12 1244                 __ptext13 0E5E                 __ptext14 13EE  
               __ptext15 12FC                 __ptext16 1288                 __ptext17 13AE  
               __ptext18 13C4                 __ptext19 136A         __size_of_isupper 0038  
       __size_of_sprintf 0052         __size_of_toupper 005E            __size_of_main 0014  
               _mibuffer 006E            __size_of_xtoa 02D4                 _settings 119E  
               int$flags 005D                 _xtoa$395 0031                 _xtoa$396 0033  
               _vfprintf 10DE                 isalpha@c 0003     __size_of_SettingsLCD 0016  
               intlevel2 0000                sprintf@ap 00C2                 islower@c 0003  
               isupper@c 0003              ??_vfpfcnvrt 004B                 sprintf@f 00C4  
    __CFG_FOSC$INTOSC_HS 000000                 sprintf@s 00B6                 toupper@c 0009  
        SettingsLCD@word 0004              _SSPCON1bits 000FC6  
