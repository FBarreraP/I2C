

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Mar 10 21:30:47 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    62  0000                     
    63                           ; Version 2.10
    64                           ; Generated 31/07/2019 GMT
    65                           ; 
    66                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F4550 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97  0000                     _SSPBUF	set	4041
    98  0000                     _LATD	set	3980
    99  0000                     _TRISD	set	3989
   100  0000                     _LATE	set	3981
   101  0000                     _TRISE	set	3990
   102  0000                     _SSPADD	set	4040
   103  0000                     _SSPCON2	set	4037
   104  0000                     _SSPCON1	set	4038
   105  0000                     _SSPSTAT	set	4039
   106  0000                     _TRISBbits	set	3987
   107  0000                     _ADCON1	set	4033
   108  0000                     _OSCCON	set	4051
   109  0000                     _LATE0	set	31848
   110  0000                     _LATE1	set	31849
   111  0000                     _ACKEN	set	32300
   112  0000                     _ACKDT	set	32301
   113  0000                     _RCEN	set	32299
   114  0000                     _RSEN	set	32297
   115  0000                     _PEN	set	32298
   116  0000                     _SEN	set	32296
   117                           
   118                           	psect	smallconst
   119  000800                     __psmallconst:
   120                           	opt callstack 0
   121  000800  00                 	db	0
   122  000801                     STR_1:
   123  000801  25                 	db	37
   124  000802  2E                 	db	46
   125  000803  34                 	db	52	;'4'
   126  000804  66                 	db	102	;'f'
   127  000805  20                 	db	32
   128  000806  56                 	db	86	;'V'
   129  000807  00                 	db	0
   130  000808                     STR_2:
   131  000808  49                 	db	73	;'I'
   132  000809  4E                 	db	78	;'N'
   133  00080A  46                 	db	70	;'F'
   134  00080B  00                 	db	0
   135  00080C                     STR_6:
   136  00080C  4E                 	db	78	;'N'
   137  00080D  41                 	db	65	;'A'
   138  00080E  4E                 	db	78	;'N'
   139  00080F  00                 	db	0
   140  000810                     STR_3:
   141  000810  69                 	db	105	;'i'
   142  000811  6E                 	db	110	;'n'
   143  000812  66                 	db	102	;'f'
   144  000813  00                 	db	0
   145  000814                     STR_7:
   146  000814  6E                 	db	110	;'n'
   147  000815  61                 	db	97	;'a'
   148  000816  6E                 	db	110	;'n'
   149  000817  00                 	db	0
   150  000818                     STR_10:
   151  000818  6C                 	db	108	;'l'
   152  000819  66                 	db	102	;'f'
   153  00081A  00                 	db	0
   154  0000                     
   155                           ; #config settings
   156  00081B  00                 	db	0	; dummy byte at the end
   157  0000                     
   158                           	psect	cinit
   159  0038DC                     __pcinit:
   160                           	opt callstack 0
   161  0038DC                     start_initialization:
   162                           	opt callstack 0
   163  0038DC                     __initialization:
   164                           	opt callstack 0
   165                           
   166                           ; Clear objects allocated to BANK1 (80 bytes)
   167  0038DC  EE01  F000         	lfsr	0,__pbssBANK1
   168  0038E0  0E50               	movlw	80
   169  0038E2                     clear_0:
   170  0038E2  6AEE               	clrf	postinc0,c
   171  0038E4  06E8               	decf	wreg,f,c
   172  0038E6  E1FD               	bnz	clear_0
   173                           
   174                           ; Clear objects allocated to BANK0 (47 bytes)
   175  0038E8  EE00  F0AA         	lfsr	0,__pbssBANK0
   176  0038EC  0E2F               	movlw	47
   177  0038EE                     clear_1:
   178  0038EE  6AEE               	clrf	postinc0,c
   179  0038F0  06E8               	decf	wreg,f,c
   180  0038F2  E1FD               	bnz	clear_1
   181                           
   182                           ; Clear objects allocated to COMRAM (2 bytes)
   183  0038F4  6A5F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   184  0038F6  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   185  0038F8                     end_of_initialization:
   186                           	opt callstack 0
   187  0038F8                     __end_of__initialization:
   188                           	opt callstack 0
   189  0038F8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   190  0038FA  6EF8               	movwf	tblptru,c
   191  0038FC  0100               	movlb	0
   192  0038FE  EF04  F015         	goto	_main	;jump to C main() function
   193                           
   194                           	psect	bssCOMRAM
   195  00005E                     __pbssCOMRAM:
   196                           	opt callstack 0
   197  00005E                     _flags:
   198                           	opt callstack 0
   199  00005E                     	ds	2
   200                           
   201                           	psect	bssBANK0
   202  0000AA                     __pbssBANK0:
   203                           	opt callstack 0
   204  0000AA                     floorf@F524:
   205                           	opt callstack 0
   206  0000AA                     	ds	4
   207  0000AE                     ___fpclassifyf@F463:
   208                           	opt callstack 0
   209  0000AE                     	ds	4
   210  0000B2                     _voltage_V:
   211                           	opt callstack 0
   212  0000B2                     	ds	4
   213  0000B6                     _shuntVoltage_mV:
   214                           	opt callstack 0
   215  0000B6                     	ds	4
   216  0000BA                     _busVoltage_V:
   217                           	opt callstack 0
   218  0000BA                     	ds	4
   219  0000BE                     _nout:
   220                           	opt callstack 0
   221  0000BE                     	ds	2
   222  0000C0                     _width:
   223                           	opt callstack 0
   224  0000C0                     	ds	2
   225  0000C2                     _prec:
   226                           	opt callstack 0
   227  0000C2                     	ds	2
   228  0000C4                     _i:
   229                           	opt callstack 0
   230  0000C4                     	ds	2
   231  0000C6                     _ina219_powerDivider_mW:
   232                           	opt callstack 0
   233  0000C6                     	ds	1
   234  0000C7                     _ina219_currentDivider_mA:
   235                           	opt callstack 0
   236  0000C7                     	ds	1
   237  0000C8                     _text:
   238                           	opt callstack 0
   239  0000C8                     	ds	15
   240  0000D7                     _ina219_calValue:
   241                           	opt callstack 0
   242  0000D7                     	ds	2
   243                           
   244                           	psect	bssBANK1
   245  000100                     __pbssBANK1:
   246                           	opt callstack 0
   247  000100                     _dbuf:
   248                           	opt callstack 0
   249  000100                     	ds	80
   250                           
   251                           	psect	cstackBANK0
   252  000060                     __pcstackBANK0:
   253                           	opt callstack 0
   254  000060                     efgtoa@ou:
   255                           	opt callstack 0
   256                           
   257                           ; 4 bytes @ 0x0
   258  000060                     	ds	4
   259  000064                     _efgtoa$322:
   260                           	opt callstack 0
   261                           
   262                           ; 2 bytes @ 0x4
   263  000064                     	ds	2
   264  000066                     _efgtoa$323:
   265                           	opt callstack 0
   266                           
   267                           ; 2 bytes @ 0x6
   268  000066                     	ds	2
   269  000068                     _efgtoa$328:
   270                           	opt callstack 0
   271                           
   272                           ; 2 bytes @ 0x8
   273  000068                     	ds	2
   274  00006A                     _efgtoa$332:
   275                           	opt callstack 0
   276                           
   277                           ; 2 bytes @ 0xA
   278  00006A                     	ds	2
   279  00006C                     _efgtoa$333:
   280                           	opt callstack 0
   281                           
   282                           ; 2 bytes @ 0xC
   283  00006C                     	ds	2
   284  00006E                     _efgtoa$334:
   285                           	opt callstack 0
   286                           
   287                           ; 2 bytes @ 0xE
   288  00006E                     	ds	2
   289  000070                     efgtoa@t:
   290                           	opt callstack 0
   291                           
   292                           ; 2 bytes @ 0x10
   293  000070                     	ds	2
   294  000072                     efgtoa@pp:
   295                           	opt callstack 0
   296                           
   297                           ; 2 bytes @ 0x12
   298  000072                     	ds	2
   299  000074                     efgtoa@m:
   300                           	opt callstack 0
   301                           
   302                           ; 2 bytes @ 0x14
   303  000074                     	ds	2
   304  000076                     efgtoa@ne:
   305                           	opt callstack 0
   306                           
   307                           ; 2 bytes @ 0x16
   308  000076                     	ds	2
   309  000078                     efgtoa@d:
   310                           	opt callstack 0
   311                           
   312                           ; 2 bytes @ 0x18
   313  000078                     	ds	2
   314  00007A                     efgtoa@sign:
   315                           	opt callstack 0
   316                           
   317                           ; 2 bytes @ 0x1A
   318  00007A                     	ds	2
   319  00007C                     efgtoa@p:
   320                           	opt callstack 0
   321                           
   322                           ; 2 bytes @ 0x1C
   323  00007C                     	ds	2
   324  00007E                     efgtoa@nmode:
   325                           	opt callstack 0
   326                           
   327                           ; 1 bytes @ 0x1E
   328  00007E                     	ds	1
   329  00007F                     efgtoa@w:
   330                           	opt callstack 0
   331                           
   332                           ; 2 bytes @ 0x1F
   333  00007F                     	ds	2
   334  000081                     efgtoa@mode:
   335                           	opt callstack 0
   336                           
   337                           ; 1 bytes @ 0x21
   338  000081                     	ds	1
   339  000082                     efgtoa@h:
   340                           	opt callstack 0
   341                           
   342                           ; 4 bytes @ 0x22
   343  000082                     	ds	4
   344  000086                     efgtoa@l:
   345                           	opt callstack 0
   346                           
   347                           ; 4 bytes @ 0x26
   348  000086                     	ds	4
   349  00008A                     efgtoa@i:
   350                           	opt callstack 0
   351                           
   352                           ; 2 bytes @ 0x2A
   353  00008A                     	ds	2
   354  00008C                     efgtoa@g:
   355                           	opt callstack 0
   356                           
   357                           ; 4 bytes @ 0x2C
   358  00008C                     	ds	4
   359  000090                     efgtoa@e:
   360                           	opt callstack 0
   361                           
   362                           ; 2 bytes @ 0x30
   363  000090                     	ds	2
   364  000092                     efgtoa@n:
   365                           	opt callstack 0
   366                           
   367                           ; 2 bytes @ 0x32
   368  000092                     	ds	2
   369  000094                     efgtoa@u:
   370                           	opt callstack 0
   371                           
   372                           ; 4 bytes @ 0x34
   373  000094                     	ds	4
   374  000098                     ?_sprintf:
   375                           	opt callstack 0
   376  000098                     sprintf@s:
   377                           	opt callstack 0
   378                           
   379                           ; 2 bytes @ 0x38
   380  000098                     	ds	2
   381  00009A                     sprintf@fmt:
   382                           	opt callstack 0
   383                           
   384                           ; 2 bytes @ 0x3A
   385  00009A                     	ds	8
   386  0000A2                     sprintf@ap:
   387                           	opt callstack 0
   388                           
   389                           ; 2 bytes @ 0x42
   390  0000A2                     	ds	2
   391  0000A4                     sprintf@f:
   392                           	opt callstack 0
   393                           
   394                           ; 6 bytes @ 0x44
   395  0000A4                     	ds	6
   396                           
   397                           	psect	cstackCOMRAM
   398  000001                     __pcstackCOMRAM:
   399                           	opt callstack 0
   400  000001                     ??_ReadyI2C:
   401  000001                     ?_strlen:
   402                           	opt callstack 0
   403  000001                     ?___fpclassifyf:
   404                           	opt callstack 0
   405  000001                     ?_isupper:
   406                           	opt callstack 0
   407  000001                     ?_isdigit:
   408                           	opt callstack 0
   409  000001                     ?_strncmp:
   410                           	opt callstack 0
   411  000001                     ?_isspace:
   412                           	opt callstack 0
   413  000001                     ?___wmul:
   414                           	opt callstack 0
   415  000001                     ?___awdiv:
   416                           	opt callstack 0
   417  000001                     ?___awmod:
   418                           	opt callstack 0
   419  000001                     ?___fldiv:
   420                           	opt callstack 0
   421  000001                     ?___flneg:
   422                           	opt callstack 0
   423  000001                     ?___fltol:
   424                           	opt callstack 0
   425  000001                     ?___xxtofl:
   426                           	opt callstack 0
   427  000001                     LCD@data:
   428                           	opt callstack 0
   429  000001                     ___wmul@multiplier:
   430                           	opt callstack 0
   431  000001                     ___awdiv@dividend:
   432                           	opt callstack 0
   433  000001                     ___awmod@dividend:
   434                           	opt callstack 0
   435  000001                     isdigit@c:
   436                           	opt callstack 0
   437  000001                     isspace@c:
   438                           	opt callstack 0
   439  000001                     isupper@c:
   440                           	opt callstack 0
   441  000001                     fputc@c:
   442                           	opt callstack 0
   443  000001                     strcpy@dest:
   444                           	opt callstack 0
   445  000001                     strlen@s:
   446                           	opt callstack 0
   447  000001                     strncmp@_l:
   448                           	opt callstack 0
   449  000001                     ___fleq@ff1:
   450                           	opt callstack 0
   451  000001                     ___flneg@f1:
   452                           	opt callstack 0
   453  000001                     ___fltol@f1:
   454                           	opt callstack 0
   455  000001                     ___fldiv@b:
   456                           	opt callstack 0
   457  000001                     ___xxtofl@val:
   458                           	opt callstack 0
   459  000001                     ___fpclassifyf@x:
   460                           	opt callstack 0
   461                           
   462                           ; 4 bytes @ 0x0
   463  000001                     	ds	1
   464  000002                     SendI2C@data:
   465                           	opt callstack 0
   466  000002                     ReceiveI2C@flag:
   467                           	opt callstack 0
   468  000002                     SettingsLCD@word:
   469                           	opt callstack 0
   470  000002                     WriteLCD@word:
   471                           	opt callstack 0
   472                           
   473                           ; 1 bytes @ 0x1
   474  000002                     	ds	1
   475  000003                     ??_isupper:
   476  000003                     ??_isdigit:
   477  000003                     ??_isspace:
   478  000003                     WriteI2C@Register:
   479                           	opt callstack 0
   480  000003                     ReceiveI2C@buffer:
   481                           	opt callstack 0
   482  000003                     ___wmul@multiplicand:
   483                           	opt callstack 0
   484  000003                     ___awdiv@divisor:
   485                           	opt callstack 0
   486  000003                     ___awmod@divisor:
   487                           	opt callstack 0
   488  000003                     fputc@fp:
   489                           	opt callstack 0
   490  000003                     strcpy@src:
   491                           	opt callstack 0
   492  000003                     strlen@a:
   493                           	opt callstack 0
   494  000003                     strncmp@_r:
   495                           	opt callstack 0
   496                           
   497                           ; 2 bytes @ 0x2
   498  000003                     	ds	1
   499  000004                     ReadI2C@Register:
   500                           	opt callstack 0
   501  000004                     WriteI2C@Data:
   502                           	opt callstack 0
   503                           
   504                           ; 2 bytes @ 0x3
   505  000004                     	ds	1
   506  000005                     ??_fputc:
   507  000005                     ??___fpclassifyf:
   508  000005                     ??_strcpy:
   509  000005                     ??___fltol:
   510  000005                     ??___xxtofl:
   511  000005                     ___awdiv@counter:
   512                           	opt callstack 0
   513  000005                     ___awmod@counter:
   514                           	opt callstack 0
   515  000005                     ReadI2C@Data:
   516                           	opt callstack 0
   517  000005                     ___wmul@product:
   518                           	opt callstack 0
   519  000005                     strncmp@n:
   520                           	opt callstack 0
   521  000005                     ___fleq@ff2:
   522                           	opt callstack 0
   523  000005                     ___fldiv@a:
   524                           	opt callstack 0
   525                           
   526                           ; 4 bytes @ 0x4
   527  000005                     	ds	1
   528  000006                     ___awdiv@sign:
   529                           	opt callstack 0
   530  000006                     ___awmod@sign:
   531                           	opt callstack 0
   532  000006                     WriteI2C@bytes:
   533                           	opt callstack 0
   534                           
   535                           ; 2 bytes @ 0x5
   536  000006                     	ds	1
   537  000007                     ??_strncmp:
   538  000007                     ?_tolower:
   539                           	opt callstack 0
   540  000007                     _isspace$854:
   541                           	opt callstack 0
   542  000007                     ReadI2C@bytes:
   543                           	opt callstack 0
   544  000007                     ___awdiv@quotient:
   545                           	opt callstack 0
   546  000007                     strcpy@s:
   547                           	opt callstack 0
   548  000007                     tolower@c:
   549                           	opt callstack 0
   550                           
   551                           ; 2 bytes @ 0x6
   552  000007                     	ds	1
   553  000008                     ??_WriteI2C:
   554  000008                     ?_atoi:
   555                           	opt callstack 0
   556  000008                     atoi@s:
   557                           	opt callstack 0
   558  000008                     strncmp@l:
   559                           	opt callstack 0
   560                           
   561                           ; 2 bytes @ 0x7
   562  000008                     	ds	1
   563  000009                     ??_tolower:
   564  000009                     ??___fldiv:
   565  000009                     ??_ReadI2C:
   566  000009                     ??___fleq:
   567  000009                     ___fltol@sign1:
   568                           	opt callstack 0
   569  000009                     ___xxtofl@sign:
   570                           	opt callstack 0
   571  000009                     ___fpclassifyf@e:
   572                           	opt callstack 0
   573  000009                     strcpy@d:
   574                           	opt callstack 0
   575                           
   576                           ; 2 bytes @ 0x8
   577  000009                     	ds	1
   578  00000A                     ??_atoi:
   579  00000A                     WriteI2C@Address:
   580                           	opt callstack 0
   581  00000A                     ___fltol@exp1:
   582                           	opt callstack 0
   583  00000A                     ___xxtofl@exp:
   584                           	opt callstack 0
   585  00000A                     fputs@s:
   586                           	opt callstack 0
   587  00000A                     strncmp@r:
   588                           	opt callstack 0
   589                           
   590                           ; 2 bytes @ 0x9
   591  00000A                     	ds	1
   592  00000B                     ReadI2C@Address:
   593                           	opt callstack 0
   594  00000B                     setCalibration_32V_2A@config:
   595                           	opt callstack 0
   596  00000B                     ___xxtofl@arg:
   597                           	opt callstack 0
   598  00000B                     ___fpclassifyf@u:
   599                           	opt callstack 0
   600                           
   601                           ; 4 bytes @ 0xA
   602  00000B                     	ds	1
   603  00000C                     ?_getBusVoltage_raw:
   604                           	opt callstack 0
   605  00000C                     ?_getShuntVoltage_raw:
   606                           	opt callstack 0
   607  00000C                     fputs@fp:
   608                           	opt callstack 0
   609                           
   610                           ; 2 bytes @ 0xB
   611  00000C                     	ds	1
   612  00000D                     _tolower$939:
   613                           	opt callstack 0
   614  00000D                     ___fldiv@rem:
   615                           	opt callstack 0
   616                           
   617                           ; 4 bytes @ 0xC
   618  00000D                     	ds	1
   619  00000E                     ??_getBusVoltage_raw:
   620  00000E                     ??_getShuntVoltage_raw:
   621  00000E                     fputs@c:
   622                           	opt callstack 0
   623  00000E                     atoi@neg:
   624                           	opt callstack 0
   625                           
   626                           ; 2 bytes @ 0xD
   627  00000E                     	ds	1
   628  00000F                     ?___flmul:
   629                           	opt callstack 0
   630  00000F                     fputs@i:
   631                           	opt callstack 0
   632  00000F                     ___flmul@b:
   633                           	opt callstack 0
   634                           
   635                           ; 4 bytes @ 0xE
   636  00000F                     	ds	1
   637  000010                     getBusVoltage_raw@temp:
   638                           	opt callstack 0
   639  000010                     getShuntVoltage_raw@temp:
   640                           	opt callstack 0
   641  000010                     _atoi$823:
   642                           	opt callstack 0
   643                           
   644                           ; 2 bytes @ 0xF
   645  000010                     	ds	1
   646  000011                     ?_pad:
   647                           	opt callstack 0
   648  000011                     ___fldiv@sign:
   649                           	opt callstack 0
   650  000011                     pad@fp:
   651                           	opt callstack 0
   652                           
   653                           ; 2 bytes @ 0x10
   654  000011                     	ds	1
   655  000012                     getBusVoltage_raw@value:
   656                           	opt callstack 0
   657  000012                     getShuntVoltage_raw@value:
   658                           	opt callstack 0
   659  000012                     ___fldiv@new_exp:
   660                           	opt callstack 0
   661  000012                     _atoi$825:
   662                           	opt callstack 0
   663                           
   664                           ; 2 bytes @ 0x11
   665  000012                     	ds	1
   666  000013                     pad@buf:
   667                           	opt callstack 0
   668  000013                     ___flmul@a:
   669                           	opt callstack 0
   670                           
   671                           ; 4 bytes @ 0x12
   672  000013                     	ds	1
   673  000014                     _atoi$824:
   674                           	opt callstack 0
   675  000014                     ___fldiv@grs:
   676                           	opt callstack 0
   677                           
   678                           ; 4 bytes @ 0x13
   679  000014                     	ds	1
   680  000015                     pad@p:
   681                           	opt callstack 0
   682  000015                     atoi@n:
   683                           	opt callstack 0
   684                           
   685                           ; 2 bytes @ 0x14
   686  000015                     	ds	2
   687  000017                     ??___flmul:
   688  000017                     ??_pad:
   689                           
   690                           ; 1 bytes @ 0x16
   691  000017                     	ds	1
   692  000018                     ___fldiv@bexp:
   693                           	opt callstack 0
   694  000018                     pad@i:
   695                           	opt callstack 0
   696                           
   697                           ; 2 bytes @ 0x17
   698  000018                     	ds	1
   699  000019                     ___fldiv@aexp:
   700                           	opt callstack 0
   701                           
   702                           ; 1 bytes @ 0x18
   703  000019                     	ds	1
   704  00001A                     ?_floorf:
   705                           	opt callstack 0
   706  00001A                     ?___fladd:
   707                           	opt callstack 0
   708  00001A                     pad@w:
   709                           	opt callstack 0
   710  00001A                     ___fladd@b:
   711                           	opt callstack 0
   712  00001A                     floorf@x:
   713                           	opt callstack 0
   714                           
   715                           ; 4 bytes @ 0x19
   716  00001A                     	ds	1
   717  00001B                     ___flmul@sign:
   718                           	opt callstack 0
   719                           
   720                           ; 1 bytes @ 0x1A
   721  00001B                     	ds	1
   722  00001C                     ___flmul@grs:
   723                           	opt callstack 0
   724                           
   725                           ; 4 bytes @ 0x1B
   726  00001C                     	ds	2
   727  00001E                     ??_floorf:
   728  00001E                     ___fladd@a:
   729                           	opt callstack 0
   730                           
   731                           ; 4 bytes @ 0x1D
   732  00001E                     	ds	2
   733  000020                     ___flmul@aexp:
   734                           	opt callstack 0
   735                           
   736                           ; 1 bytes @ 0x1F
   737  000020                     	ds	1
   738  000021                     ___flmul@bexp:
   739                           	opt callstack 0
   740                           
   741                           ; 1 bytes @ 0x20
   742  000021                     	ds	1
   743  000022                     ??___fladd:
   744  000022                     ___flmul@prod:
   745                           	opt callstack 0
   746                           
   747                           ; 4 bytes @ 0x21
   748  000022                     	ds	2
   749  000024                     floorf@m:
   750                           	opt callstack 0
   751                           
   752                           ; 4 bytes @ 0x23
   753  000024                     	ds	2
   754  000026                     ___fladd@signs:
   755                           	opt callstack 0
   756  000026                     ___flmul@temp:
   757                           	opt callstack 0
   758                           
   759                           ; 2 bytes @ 0x25
   760  000026                     	ds	1
   761  000027                     ___fladd@aexp:
   762                           	opt callstack 0
   763                           
   764                           ; 1 bytes @ 0x26
   765  000027                     	ds	1
   766  000028                     ?_getBusVoltage_V:
   767                           	opt callstack 0
   768  000028                     ?_getShuntVoltage_mV:
   769                           	opt callstack 0
   770  000028                     ___fladd@bexp:
   771                           	opt callstack 0
   772  000028                     floorf@e:
   773                           	opt callstack 0
   774  000028                     ___flge@ff1:
   775                           	opt callstack 0
   776                           
   777                           ; 4 bytes @ 0x27
   778  000028                     	ds	1
   779  000029                     ___fladd@grs:
   780                           	opt callstack 0
   781                           
   782                           ; 1 bytes @ 0x28
   783  000029                     	ds	1
   784  00002A                     ?___flsub:
   785                           	opt callstack 0
   786  00002A                     ___flsub@b:
   787                           	opt callstack 0
   788  00002A                     floorf@u:
   789                           	opt callstack 0
   790                           
   791                           ; 4 bytes @ 0x29
   792  00002A                     	ds	2
   793  00002C                     getBusVoltage_V@value:
   794                           	opt callstack 0
   795  00002C                     getShuntVoltage_mV@value:
   796                           	opt callstack 0
   797  00002C                     ___flge@ff2:
   798                           	opt callstack 0
   799                           
   800                           ; 4 bytes @ 0x2B
   801  00002C                     	ds	2
   802  00002E                     ___flsub@a:
   803                           	opt callstack 0
   804                           
   805                           ; 4 bytes @ 0x2D
   806  00002E                     	ds	2
   807  000030                     ??___flge:
   808                           
   809                           ; 1 bytes @ 0x2F
   810  000030                     	ds	2
   811  000032                     
   812                           ; 1 bytes @ 0x31
   813  000032                     	ds	2
   814  000034                     ?_efgtoa:
   815                           	opt callstack 0
   816  000034                     efgtoa@fp:
   817                           	opt callstack 0
   818                           
   819                           ; 2 bytes @ 0x33
   820  000034                     	ds	2
   821  000036                     efgtoa@f:
   822                           	opt callstack 0
   823                           
   824                           ; 4 bytes @ 0x35
   825  000036                     	ds	4
   826  00003A                     efgtoa@c:
   827                           	opt callstack 0
   828                           
   829                           ; 1 bytes @ 0x39
   830  00003A                     	ds	1
   831  00003B                     ??_efgtoa:
   832                           
   833                           ; 1 bytes @ 0x3A
   834  00003B                     	ds	5
   835  000040                     ?_vfpfcnvrt:
   836                           	opt callstack 0
   837  000040                     vfpfcnvrt@fp:
   838                           	opt callstack 0
   839                           
   840                           ; 2 bytes @ 0x3F
   841  000040                     	ds	2
   842  000042                     vfpfcnvrt@fmt:
   843                           	opt callstack 0
   844                           
   845                           ; 2 bytes @ 0x41
   846  000042                     	ds	2
   847  000044                     vfpfcnvrt@ap:
   848                           	opt callstack 0
   849                           
   850                           ; 2 bytes @ 0x43
   851  000044                     	ds	2
   852  000046                     ??_vfpfcnvrt:
   853                           
   854                           ; 1 bytes @ 0x45
   855  000046                     	ds	4
   856  00004A                     _vfpfcnvrt$348:
   857                           	opt callstack 0
   858                           
   859                           ; 2 bytes @ 0x49
   860  00004A                     	ds	2
   861  00004C                     _vfpfcnvrt$352:
   862                           	opt callstack 0
   863                           
   864                           ; 2 bytes @ 0x4B
   865  00004C                     	ds	2
   866  00004E                     vfpfcnvrt@f:
   867                           	opt callstack 0
   868                           
   869                           ; 4 bytes @ 0x4D
   870  00004E                     	ds	4
   871  000052                     vfpfcnvrt@ct:
   872                           	opt callstack 0
   873                           
   874                           ; 3 bytes @ 0x51
   875  000052                     	ds	3
   876  000055                     vfpfcnvrt@c:
   877                           	opt callstack 0
   878                           
   879                           ; 1 bytes @ 0x54
   880  000055                     	ds	1
   881  000056                     ?_vfprintf:
   882                           	opt callstack 0
   883  000056                     vfprintf@fp:
   884                           	opt callstack 0
   885                           
   886                           ; 2 bytes @ 0x55
   887  000056                     	ds	2
   888  000058                     vfprintf@fmt:
   889                           	opt callstack 0
   890                           
   891                           ; 2 bytes @ 0x57
   892  000058                     	ds	2
   893  00005A                     vfprintf@ap:
   894                           	opt callstack 0
   895                           
   896                           ; 2 bytes @ 0x59
   897  00005A                     	ds	2
   898  00005C                     vfprintf@cfmt:
   899                           	opt callstack 0
   900                           
   901                           ; 2 bytes @ 0x5B
   902  00005C                     	ds	2
   903  00005E                     
   904                           ; 1 bytes @ 0x5D
   905 ;;
   906 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   907 ;;
   908 ;; *************** function _main *****************
   909 ;; Defined at:
   910 ;;		line 69 in file "main.c"
   911 ;; Parameters:    Size  Location     Type
   912 ;;		None
   913 ;; Auto vars:     Size  Location     Type
   914 ;;		None
   915 ;; Return value:  Size  Location     Type
   916 ;;                  1    wreg      void 
   917 ;; Registers used:
   918 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   919 ;; Tracked objects:
   920 ;;		On entry : 0/0
   921 ;;		On exit  : 0/0
   922 ;;		Unchanged: 0/0
   923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   924 ;;      Params:         0       0       0       0       0       0       0       0       0
   925 ;;      Locals:         0       0       0       0       0       0       0       0       0
   926 ;;      Temps:          0       0       0       0       0       0       0       0       0
   927 ;;      Totals:         0       0       0       0       0       0       0       0       0
   928 ;;Total ram usage:        0 bytes
   929 ;; Hardware stack levels required when called:    8
   930 ;; This function calls:
   931 ;;		_SettingsLCD
   932 ;;		_WriteLCD
   933 ;;		___fladd
   934 ;;		___fldiv
   935 ;;		_getBusVoltage_V
   936 ;;		_getShuntVoltage_mV
   937 ;;		_setCalibration_32V_2A
   938 ;;		_settings
   939 ;;		_sprintf
   940 ;;		_strlen
   941 ;; This function is called by:
   942 ;;		Startup code after reset
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           
   946                           	psect	text0
   947  002A08                     __ptext0:
   948                           	opt callstack 0
   949  002A08                     _main:
   950                           	opt callstack 23
   951  002A08                     
   952                           ;main.c: 70:     settings();
   953  002A08  EC60  F01B         	call	_settings	;wreg free
   954  002A0C                     
   955                           ;main.c: 71:     setCalibration_32V_2A();
   956  002A0C  EC38  F01B         	call	_setCalibration_32V_2A	;wreg free
   957  002A10                     l4071:
   958                           
   959                           ;main.c: 73:         busVoltage_V = getBusVoltage_V();
   960  002A10  ECBC  F01A         	call	_getBusVoltage_V	;wreg free
   961  002A14  C028  F0BA         	movff	?_getBusVoltage_V,_busVoltage_V
   962  002A18  C029  F0BB         	movff	?_getBusVoltage_V+1,_busVoltage_V+1
   963  002A1C  C02A  F0BC         	movff	?_getBusVoltage_V+2,_busVoltage_V+2
   964  002A20  C02B  F0BD         	movff	?_getBusVoltage_V+3,_busVoltage_V+3
   965  002A24                     
   966                           ;main.c: 74:         shuntVoltage_mV = getShuntVoltage_mV();
   967  002A24  EC92  F01A         	call	_getShuntVoltage_mV	;wreg free
   968  002A28  C028  F0B6         	movff	?_getShuntVoltage_mV,_shuntVoltage_mV
   969  002A2C  C029  F0B7         	movff	?_getShuntVoltage_mV+1,_shuntVoltage_mV+1
   970  002A30  C02A  F0B8         	movff	?_getShuntVoltage_mV+2,_shuntVoltage_mV+2
   971  002A34  C02B  F0B9         	movff	?_getShuntVoltage_mV+3,_shuntVoltage_mV+3
   972  002A38                     
   973                           ;main.c: 75:         voltage_V = busVoltage_V + (shuntVoltage_mV / 1000);
   974  002A38  0E00               	movlw	0
   975  002A3A  6E05               	movwf	___fldiv@a^0,c
   976  002A3C  0E00               	movlw	0
   977  002A3E  6E06               	movwf	(___fldiv@a+1)^0,c
   978  002A40  0E7A               	movlw	122
   979  002A42  6E07               	movwf	(___fldiv@a+2)^0,c
   980  002A44  0E44               	movlw	68
   981  002A46  6E08               	movwf	(___fldiv@a+3)^0,c
   982  002A48  C0B6  F001         	movff	_shuntVoltage_mV,___fldiv@b
   983  002A4C  C0B7  F002         	movff	_shuntVoltage_mV+1,___fldiv@b+1
   984  002A50  C0B8  F003         	movff	_shuntVoltage_mV+2,___fldiv@b+2
   985  002A54  C0B9  F004         	movff	_shuntVoltage_mV+3,___fldiv@b+3
   986  002A58  EC8C  F010         	call	___fldiv	;wreg free
   987  002A5C  C001  F01A         	movff	?___fldiv,___fladd@b
   988  002A60  C002  F01B         	movff	?___fldiv+1,___fladd@b+1
   989  002A64  C003  F01C         	movff	?___fldiv+2,___fladd@b+2
   990  002A68  C004  F01D         	movff	?___fldiv+3,___fladd@b+3
   991  002A6C  C0BA  F01E         	movff	_busVoltage_V,___fladd@a
   992  002A70  C0BB  F01F         	movff	_busVoltage_V+1,___fladd@a+1
   993  002A74  C0BC  F020         	movff	_busVoltage_V+2,___fladd@a+2
   994  002A78  C0BD  F021         	movff	_busVoltage_V+3,___fladd@a+3
   995  002A7C  ECE7  F009         	call	___fladd	;wreg free
   996  002A80  C01A  F0B2         	movff	?___fladd,_voltage_V
   997  002A84  C01B  F0B3         	movff	?___fladd+1,_voltage_V+1
   998  002A88  C01C  F0B4         	movff	?___fladd+2,_voltage_V+2
   999  002A8C  C01D  F0B5         	movff	?___fladd+3,_voltage_V+3
  1000  002A90                     
  1001                           ;main.c: 76:         sprintf(text,"%.4f V",voltage_V);
  1002  002A90  0EC8               	movlw	low _text
  1003  002A92  0100               	movlb	0	; () banked
  1004  002A94  6F98               	movwf	sprintf@s& (0+255),b
  1005  002A96  0E00               	movlw	high _text
  1006  002A98  6F99               	movwf	(sprintf@s+1)& (0+255),b
  1007  002A9A  0E01               	movlw	low STR_1
  1008  002A9C  6F9A               	movwf	sprintf@fmt& (0+255),b
  1009  002A9E  0E08               	movlw	high STR_1
  1010  002AA0  6F9B               	movwf	(sprintf@fmt+1)& (0+255),b
  1011  002AA2  C0B2  F09C         	movff	_voltage_V,?_sprintf+4
  1012  002AA6  C0B3  F09D         	movff	_voltage_V+1,?_sprintf+5
  1013  002AAA  C0B4  F09E         	movff	_voltage_V+2,?_sprintf+6
  1014  002AAE  C0B5  F09F         	movff	_voltage_V+3,?_sprintf+7
  1015  002AB2  ECE6  F01A         	call	_sprintf	;wreg free
  1016  002AB6                     
  1017                           ;main.c: 77:         SettingsLCD(0xC0);
  1018  002AB6  0EC0               	movlw	192
  1019  002AB8  ECB9  F01C         	call	_SettingsLCD
  1020  002ABC                     
  1021                           ;main.c: 78:         for(i=0; i<strlen(text); i++){
  1022  002ABC  0E00               	movlw	0
  1023  002ABE  0100               	movlb	0	; () banked
  1024  002AC0  6FC5               	movwf	(_i+1)& (0+255),b
  1025  002AC2  0E00               	movlw	0
  1026  002AC4  6FC4               	movwf	_i& (0+255),b
  1027  002AC6  EF71  F015         	goto	l4087
  1028  002ACA                     l4083:
  1029                           
  1030                           ; BSR set to: 0
  1031                           ;main.c: 79:             WriteLCD(text[i]);
  1032  002ACA  0EC8               	movlw	low _text
  1033  002ACC  25C4               	addwf	_i& (0+255),w,b
  1034  002ACE  6ED9               	movwf	fsr2l,c
  1035  002AD0  0E00               	movlw	high _text
  1036  002AD2  21C5               	addwfc	(_i+1)& (0+255),w,b
  1037  002AD4  6EDA               	movwf	fsr2h,c
  1038  002AD6  50DF               	movf	indf2,w,c
  1039  002AD8  ECC4  F01C         	call	_WriteLCD
  1040  002ADC                     
  1041                           ;main.c: 80:         }
  1042  002ADC  0100               	movlb	0	; () banked
  1043  002ADE  4BC4               	infsnz	_i& (0+255),f,b
  1044  002AE0  2BC5               	incf	(_i+1)& (0+255),f,b
  1045  002AE2                     l4087:
  1046                           
  1047                           ; BSR set to: 0
  1048  002AE2  0EC8               	movlw	low _text
  1049  002AE4  6E01               	movwf	strlen@s^0,c
  1050  002AE6  0E00               	movlw	high _text
  1051  002AE8  6E02               	movwf	(strlen@s+1)^0,c
  1052  002AEA  EC3C  F01C         	call	_strlen	;wreg free
  1053  002AEE  5001               	movf	?_strlen^0,w,c
  1054  002AF0  0100               	movlb	0	; () banked
  1055  002AF2  5DC4               	subwf	_i& (0+255),w,b
  1056  002AF4  5002               	movf	(?_strlen+1)^0,w,c
  1057  002AF6  59C5               	subwfb	(_i+1)& (0+255),w,b
  1058  002AF8  A0D8               	btfss	status,0,c
  1059  002AFA  EF81  F015         	goto	u4861
  1060  002AFE  EF83  F015         	goto	u4860
  1061  002B02                     u4861:
  1062  002B02  EF65  F015         	goto	l4083
  1063  002B06                     u4860:
  1064  002B06  EF08  F015         	goto	l4071
  1065  002B0A  EF00  F000         	goto	start
  1066  002B0E                     __end_of_main:
  1067                           	opt callstack 0
  1068                           
  1069 ;; *************** function _sprintf *****************
  1070 ;; Defined at:
  1071 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  1072 ;; Parameters:    Size  Location     Type
  1073 ;;  s               2   56[BANK0 ] PTR unsigned char 
  1074 ;;		 -> text(15), 
  1075 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  1076 ;;		 -> STR_1(7), 
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;  f               6   68[BANK0 ] struct _IO_FILE
  1079 ;;  ap              2   66[BANK0 ] PTR void [1]
  1080 ;;		 -> ?_sprintf(2), 
  1081 ;;  ret             2    0        int 
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  2   56[BANK0 ] int 
  1084 ;; Registers used:
  1085 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1091 ;;      Params:         0       8       0       0       0       0       0       0       0
  1092 ;;      Locals:         0      10       0       0       0       0       0       0       0
  1093 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1094 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1095 ;;Total ram usage:       18 bytes
  1096 ;; Hardware stack levels used:    1
  1097 ;; Hardware stack levels required when called:    7
  1098 ;; This function calls:
  1099 ;;		_vfprintf
  1100 ;; This function is called by:
  1101 ;;		_main
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	text1
  1106  0035CC                     __ptext1:
  1107                           	opt callstack 0
  1108  0035CC                     _sprintf:
  1109                           	opt callstack 23
  1110  0035CC  0E9C               	movlw	low (?_sprintf+4)
  1111  0035CE  0100               	movlb	0	; () banked
  1112  0035D0  6FA2               	movwf	sprintf@ap& (0+255),b
  1113  0035D2  0E00               	movlw	high (?_sprintf+4)
  1114  0035D4  6FA3               	movwf	(sprintf@ap+1)& (0+255),b
  1115  0035D6  C098  F0A4         	movff	sprintf@s,sprintf@f
  1116  0035DA  C099  F0A5         	movff	sprintf@s+1,sprintf@f+1
  1117  0035DE                     
  1118                           ; BSR set to: 0
  1119  0035DE  0E00               	movlw	0
  1120  0035E0  6FA7               	movwf	(sprintf@f+3)& (0+255),b
  1121  0035E2  0E00               	movlw	0
  1122  0035E4  6FA6               	movwf	(sprintf@f+2)& (0+255),b
  1123  0035E6                     
  1124                           ; BSR set to: 0
  1125  0035E6  0E00               	movlw	0
  1126  0035E8  6FA9               	movwf	(sprintf@f+5)& (0+255),b
  1127  0035EA  0E00               	movlw	0
  1128  0035EC  6FA8               	movwf	(sprintf@f+4)& (0+255),b
  1129  0035EE                     
  1130                           ; BSR set to: 0
  1131  0035EE  0EA4               	movlw	low sprintf@f
  1132  0035F0  6E56               	movwf	vfprintf@fp^0,c
  1133  0035F2  0E00               	movlw	high sprintf@f
  1134  0035F4  6E57               	movwf	(vfprintf@fp+1)^0,c
  1135  0035F6  C09A  F058         	movff	sprintf@fmt,vfprintf@fmt
  1136  0035FA  C09B  F059         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1137  0035FE  0EA2               	movlw	low sprintf@ap
  1138  003600  6E5A               	movwf	vfprintf@ap^0,c
  1139  003602  0E00               	movlw	high sprintf@ap
  1140  003604  6E5B               	movwf	(vfprintf@ap+1)^0,c
  1141  003606  ECA7  F019         	call	_vfprintf	;wreg free
  1142  00360A  0100               	movlb	0	; () banked
  1143  00360C  51A6               	movf	(sprintf@f+2)& (0+255),w,b
  1144  00360E  2598               	addwf	sprintf@s& (0+255),w,b
  1145  003610  6ED9               	movwf	fsr2l,c
  1146  003612  51A7               	movf	(sprintf@f+3)& (0+255),w,b
  1147  003614  2199               	addwfc	(sprintf@s+1)& (0+255),w,b
  1148  003616  6EDA               	movwf	fsr2h,c
  1149  003618  0E00               	movlw	0
  1150  00361A  6EDF               	movwf	indf2,c
  1151  00361C                     
  1152                           ; BSR set to: 0
  1153  00361C  0012               	return		;funcret
  1154  00361E                     __end_of_sprintf:
  1155                           	opt callstack 0
  1156                           
  1157 ;; *************** function _vfprintf *****************
  1158 ;; Defined at:
  1159 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;  fp              2   85[COMRAM] PTR struct _IO_FILE
  1162 ;;		 -> sprintf@f(6), 
  1163 ;;  fmt             2   87[COMRAM] PTR const unsigned char 
  1164 ;;		 -> STR_1(7), 
  1165 ;;  ap              2   89[COMRAM] PTR PTR void 
  1166 ;;		 -> sprintf@ap(2), 
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;  cfmt            2   91[COMRAM] PTR unsigned char 
  1169 ;;		 -> STR_1(7), 
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  2   85[COMRAM] int 
  1172 ;; Registers used:
  1173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1179 ;;      Params:         6       0       0       0       0       0       0       0       0
  1180 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1181 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1182 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1183 ;;Total ram usage:        8 bytes
  1184 ;; Hardware stack levels used:    1
  1185 ;; Hardware stack levels required when called:    6
  1186 ;; This function calls:
  1187 ;;		_vfpfcnvrt
  1188 ;; This function is called by:
  1189 ;;		_sprintf
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           	psect	text2
  1194  00334E                     __ptext2:
  1195                           	opt callstack 0
  1196  00334E                     _vfprintf:
  1197                           	opt callstack 23
  1198  00334E                     
  1199                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  1200  00334E  C058  F05C         	movff	vfprintf@fmt,vfprintf@cfmt
  1201  003352  C059  F05D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1202  003356                     
  1203                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  1204  003356  0E00               	movlw	0
  1205  003358  0100               	movlb	0	; () banked
  1206  00335A  6FBF               	movwf	(_nout+1)& (0+255),b
  1207  00335C  0E00               	movlw	0
  1208  00335E  6FBE               	movwf	_nout& (0+255),b
  1209                           
  1210                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1211  003360  EFC5  F019         	goto	l3969
  1212  003364                     l3967:
  1213                           
  1214                           ; BSR set to: 0
  1215                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  1216  003364  C056  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  1217  003368  C057  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1218  00336C  0E5C               	movlw	low vfprintf@cfmt
  1219  00336E  6E42               	movwf	vfpfcnvrt@fmt^0,c
  1220  003370  0E00               	movlw	high vfprintf@cfmt
  1221  003372  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1222  003374  C05A  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  1223  003378  C05B  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1224  00337C  EC47  F00C         	call	_vfpfcnvrt	;wreg free
  1225  003380  5040               	movf	?_vfpfcnvrt^0,w,c
  1226  003382  0100               	movlb	0	; () banked
  1227  003384  27BE               	addwf	_nout& (0+255),f,b
  1228  003386  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  1229  003388  23BF               	addwfc	(_nout+1)& (0+255),f,b
  1230  00338A                     l3969:
  1231                           
  1232                           ; BSR set to: 0
  1233                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  1234  00338A  C05C  FFF6         	movff	vfprintf@cfmt,tblptrl
  1235  00338E  C05D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1236  003392                     	if	0	;tblptru may be non-zero
  1237  003392                     	endif
  1238  003392                     	if	0	;tblptru may be non-zero
  1239  003392                     	endif
  1240  003392  0008               	tblrd		*
  1241  003394  50F5               	movf	tablat,w,c
  1242  003396  0900               	iorlw	0
  1243  003398  A4D8               	btfss	status,2,c
  1244  00339A  EFD1  F019         	goto	u4751
  1245  00339E  EFD3  F019         	goto	u4750
  1246  0033A2                     u4751:
  1247  0033A2  EFB2  F019         	goto	l3967
  1248  0033A6                     u4750:
  1249  0033A6                     
  1250                           ; BSR set to: 0
  1251                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  1252  0033A6  C0BE  F056         	movff	_nout,?_vfprintf
  1253  0033AA  C0BF  F057         	movff	_nout+1,?_vfprintf+1
  1254  0033AE                     
  1255                           ; BSR set to: 0
  1256  0033AE  0012               	return		;funcret
  1257  0033B0                     __end_of_vfprintf:
  1258                           	opt callstack 0
  1259                           
  1260 ;; *************** function _vfpfcnvrt *****************
  1261 ;; Defined at:
  1262 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1265 ;;		 -> sprintf@f(6), 
  1266 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1267 ;;		 -> vfprintf@cfmt(2), 
  1268 ;;  ap              2   67[COMRAM] PTR PTR void 
  1269 ;;		 -> sprintf@ap(2), 
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;  llu             8    0        unsigned long long 
  1272 ;;  ll              8    0        long long 
  1273 ;;  f               4   77[COMRAM] long long 
  1274 ;;  ct              3   81[COMRAM] unsigned char [3]
  1275 ;;  vp              3    0        PTR void 
  1276 ;;  cp              3    0        PTR unsigned char 
  1277 ;;  i               2    0        int 
  1278 ;;  done            2    0        int 
  1279 ;;  c               1   84[COMRAM] unsigned char 
  1280 ;; Return value:  Size  Location     Type
  1281 ;;                  2   63[COMRAM] int 
  1282 ;; Registers used:
  1283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1289 ;;      Params:         6       0       0       0       0       0       0       0       0
  1290 ;;      Locals:        12       0       0       0       0       0       0       0       0
  1291 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1292 ;;      Totals:        22       0       0       0       0       0       0       0       0
  1293 ;;Total ram usage:       22 bytes
  1294 ;; Hardware stack levels used:    1
  1295 ;; Hardware stack levels required when called:    5
  1296 ;; This function calls:
  1297 ;;		_atoi
  1298 ;;		_efgtoa
  1299 ;;		_fputc
  1300 ;;		_isdigit
  1301 ;;		_isupper
  1302 ;;		_strncmp
  1303 ;;		_tolower
  1304 ;; This function is called by:
  1305 ;;		_vfprintf
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           	psect	text3
  1310  00188E                     __ptext3:
  1311                           	opt callstack 0
  1312  00188E                     _vfpfcnvrt:
  1313                           	opt callstack 23
  1314  00188E                     
  1315                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  1316  00188E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1317  001892  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1318  001896  CFDE FFF6          	movff	postinc2,tblptrl
  1319  00189A  CFDD FFF7          	movff	postdec2,tblptrh
  1320  00189E                     	if	0	;tblptru may be non-zero
  1321  00189E                     	endif
  1322  00189E                     	if	0	;tblptru may be non-zero
  1323  00189E                     	endif
  1324  00189E  0008               	tblrd		*
  1325  0018A0  50F5               	movf	tablat,w,c
  1326  0018A2  0A25               	xorlw	37
  1327  0018A4  A4D8               	btfss	status,2,c
  1328  0018A6  EF57  F00C         	goto	u4611
  1329  0018AA  EF59  F00C         	goto	u4610
  1330  0018AE                     u4611:
  1331  0018AE  EF5B  F00E         	goto	l3927
  1332  0018B2                     u4610:
  1333  0018B2                     
  1334                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  1335  0018B2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1336  0018B6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1337  0018BA  2ADE               	incf	postinc2,f,c
  1338  0018BC  0E00               	movlw	0
  1339  0018BE  22DD               	addwfc	postdec2,f,c
  1340  0018C0                     
  1341                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  1342  0018C0  0E00               	movlw	0
  1343  0018C2  0100               	movlb	0	; () banked
  1344  0018C4  6FC1               	movwf	(_width+1)& (0+255),b
  1345  0018C6  0E00               	movlw	0
  1346  0018C8  6FC0               	movwf	_width& (0+255),b
  1347  0018CA  C0C0  F05E         	movff	_width,_flags
  1348  0018CE  C0C1  F05F         	movff	_width+1,_flags+1
  1349  0018D2                     
  1350                           ; BSR set to: 0
  1351                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  1352  0018D2  69C2               	setf	_prec& (0+255),b
  1353  0018D4  69C3               	setf	(_prec+1)& (0+255),b
  1354  0018D6                     
  1355                           ; BSR set to: 0
  1356                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  1357  0018D6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1358  0018DA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1359  0018DE  CFDE FFF6          	movff	postinc2,tblptrl
  1360  0018E2  CFDD FFF7          	movff	postdec2,tblptrh
  1361  0018E6                     	if	0	;tblptru may be non-zero
  1362  0018E6                     	endif
  1363  0018E6                     	if	0	;tblptru may be non-zero
  1364  0018E6                     	endif
  1365  0018E6  0008               	tblrd		*
  1366  0018E8  50F5               	movf	tablat,w,c
  1367  0018EA  0A2E               	xorlw	46
  1368  0018EC  A4D8               	btfss	status,2,c
  1369  0018EE  EF7B  F00C         	goto	u4621
  1370  0018F2  EF7D  F00C         	goto	u4620
  1371  0018F6                     u4621:
  1372  0018F6  EFFA  F00C         	goto	l3873
  1373  0018FA                     u4620:
  1374  0018FA                     
  1375                           ; BSR set to: 0
  1376                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  1377  0018FA  0E00               	movlw	0
  1378  0018FC  6FC3               	movwf	(_prec+1)& (0+255),b
  1379  0018FE  0E00               	movlw	0
  1380  001900  6FC2               	movwf	_prec& (0+255),b
  1381  001902                     
  1382                           ; BSR set to: 0
  1383                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  1384  001902  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1385  001906  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1386  00190A  2ADE               	incf	postinc2,f,c
  1387  00190C  0E00               	movlw	0
  1388  00190E  22DD               	addwfc	postdec2,f,c
  1389  001910                     
  1390                           ; BSR set to: 0
  1391                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  1392  001910  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1393  001914  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1394  001918  CFDE FFF6          	movff	postinc2,tblptrl
  1395  00191C  CFDD FFF7          	movff	postdec2,tblptrh
  1396  001920                     	if	0	;tblptru may be non-zero
  1397  001920                     	endif
  1398  001920                     	if	0	;tblptru may be non-zero
  1399  001920                     	endif
  1400  001920  0008               	tblrd		*
  1401  001922  50F5               	movf	tablat,w,c
  1402  001924  0A2A               	xorlw	42
  1403  001926  A4D8               	btfss	status,2,c
  1404  001928  EF98  F00C         	goto	u4631
  1405  00192C  EF9A  F00C         	goto	u4630
  1406  001930                     u4631:
  1407  001930  EFB7  F00C         	goto	l3863
  1408  001934                     u4630:
  1409  001934                     
  1410                           ; BSR set to: 0
  1411                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  1412  001934  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1413  001938  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1414  00193C  2ADE               	incf	postinc2,f,c
  1415  00193E  0E00               	movlw	0
  1416  001940  22DD               	addwfc	postdec2,f,c
  1417                           
  1418                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1419  001942  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1420  001946  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1421  00194A  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1422  00194E  0E02               	movlw	2
  1423  001950  26DE               	addwf	postinc2,f,c
  1424  001952  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1425  001956  0E00               	movlw	0
  1426  001958  22DD               	addwfc	postdec2,f,c
  1427  00195A  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1428  00195E  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1429  001962  CFDE F0C2          	movff	postinc2,_prec
  1430  001966  CFDD F0C3          	movff	postdec2,_prec+1
  1431                           
  1432                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  1433  00196A  EFFA  F00C         	goto	l3873
  1434  00196E                     l3863:
  1435                           
  1436                           ; BSR set to: 0
  1437                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  1438  00196E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1439  001972  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1440  001976  CFDE F008          	movff	postinc2,atoi@s
  1441  00197A  CFDD F009          	movff	postdec2,atoi@s+1
  1442  00197E  EC3C  F014         	call	_atoi	;wreg free
  1443  001982  C008  F0C2         	movff	?_atoi,_prec
  1444  001986  C009  F0C3         	movff	?_atoi+1,_prec+1
  1445                           
  1446                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1447  00198A  EFCE  F00C         	goto	l3867
  1448  00198E                     l3865:
  1449                           
  1450                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  1451  00198E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1452  001992  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1453  001996  2ADE               	incf	postinc2,f,c
  1454  001998  0E00               	movlw	0
  1455  00199A  22DD               	addwfc	postdec2,f,c
  1456  00199C                     l3867:
  1457  00199C  0ED0               	movlw	208
  1458  00199E  6E46               	movwf	??_vfpfcnvrt^0,c
  1459  0019A0  0EFF               	movlw	255
  1460  0019A2  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  1461  0019A4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1462  0019A8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1463  0019AC  CFDE FFF6          	movff	postinc2,tblptrl
  1464  0019B0  CFDD FFF7          	movff	postdec2,tblptrh
  1465  0019B4                     	if	0	;tblptru may be non-zero
  1466  0019B4                     	endif
  1467  0019B4                     	if	0	;tblptru may be non-zero
  1468  0019B4                     	endif
  1469  0019B4  0008               	tblrd		*
  1470  0019B6  50F5               	movf	tablat,w,c
  1471  0019B8  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  1472  0019BA  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  1473  0019BC  5046               	movf	??_vfpfcnvrt^0,w,c
  1474  0019BE  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1475  0019C0  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  1476  0019C2  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1477  0019C4  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  1478  0019C6  E10A               	bnz	u4640
  1479  0019C8  0E0A               	movlw	10
  1480  0019CA  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1481  0019CC  A0D8               	btfss	status,0,c
  1482  0019CE  EFEB  F00C         	goto	u4641
  1483  0019D2  EFEE  F00C         	goto	u4640
  1484  0019D6                     u4641:
  1485  0019D6  0E01               	movlw	1
  1486  0019D8  EFEF  F00C         	goto	u4650
  1487  0019DC                     u4640:
  1488  0019DC  0E00               	movlw	0
  1489  0019DE                     u4650:
  1490  0019DE  6E4A               	movwf	_vfpfcnvrt$348^0,c
  1491  0019E0  6A4B               	clrf	(_vfpfcnvrt$348+1)^0,c
  1492  0019E2  504A               	movf	_vfpfcnvrt$348^0,w,c
  1493  0019E4  104B               	iorwf	(_vfpfcnvrt$348+1)^0,w,c
  1494  0019E6  A4D8               	btfss	status,2,c
  1495  0019E8  EFF8  F00C         	goto	u4661
  1496  0019EC  EFFA  F00C         	goto	u4660
  1497  0019F0                     u4661:
  1498  0019F0  EFC7  F00C         	goto	l3865
  1499  0019F4                     u4660:
  1500  0019F4                     l3873:
  1501                           
  1502                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  1503  0019F4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1504  0019F8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1505  0019FC  CFDE FFF6          	movff	postinc2,tblptrl
  1506  001A00  CFDD FFF7          	movff	postdec2,tblptrh
  1507  001A04                     	if	0	;tblptru may be non-zero
  1508  001A04                     	endif
  1509  001A04                     	if	0	;tblptru may be non-zero
  1510  001A04                     	endif
  1511  001A04  0008               	tblrd		*
  1512  001A06  50F5               	movf	tablat,w,c
  1513  001A08  6E07               	movwf	tolower@c^0,c
  1514  001A0A  6A08               	clrf	(tolower@c+1)^0,c
  1515  001A0C  ECD8  F019         	call	_tolower	;wreg free
  1516  001A10  5007               	movf	?_tolower^0,w,c
  1517  001A12  6E52               	movwf	vfpfcnvrt@ct^0,c
  1518  001A14                     
  1519                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  1520  001A14  5052               	movf	vfpfcnvrt@ct^0,w,c
  1521  001A16  B4D8               	btfsc	status,2,c
  1522  001A18  EF10  F00D         	goto	u4671
  1523  001A1C  EF12  F00D         	goto	u4670
  1524  001A20                     u4671:
  1525  001A20  EF4A  F00D         	goto	l3883
  1526  001A24                     u4670:
  1527  001A24                     
  1528                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  1529  001A24  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1530  001A28  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1531  001A2C  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  1532  001A30  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  1533  001A34  0E01               	movlw	1
  1534  001A36  2646               	addwf	??_vfpfcnvrt^0,f,c
  1535  001A38  0E00               	movlw	0
  1536  001A3A  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1537  001A3C  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1538  001A40  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1539  001A44                     	if	0	;tblptru may be non-zero
  1540  001A44                     	endif
  1541  001A44                     	if	0	;tblptru may be non-zero
  1542  001A44                     	endif
  1543  001A44  0008               	tblrd		*
  1544  001A46  50F5               	movf	tablat,w,c
  1545  001A48  6E07               	movwf	tolower@c^0,c
  1546  001A4A  6A08               	clrf	(tolower@c+1)^0,c
  1547  001A4C  ECD8  F019         	call	_tolower	;wreg free
  1548  001A50  5007               	movf	?_tolower^0,w,c
  1549  001A52  6E53               	movwf	(vfpfcnvrt@ct+1)^0,c
  1550  001A54                     
  1551                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  1552  001A54  5053               	movf	(vfpfcnvrt@ct+1)^0,w,c
  1553  001A56  B4D8               	btfsc	status,2,c
  1554  001A58  EF30  F00D         	goto	u4681
  1555  001A5C  EF32  F00D         	goto	u4680
  1556  001A60                     u4681:
  1557  001A60  EF4A  F00D         	goto	l3883
  1558  001A64                     u4680:
  1559  001A64                     
  1560                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  1561  001A64  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1562  001A68  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1563  001A6C  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  1564  001A70  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  1565  001A74  0E02               	movlw	2
  1566  001A76  2646               	addwf	??_vfpfcnvrt^0,f,c
  1567  001A78  0E00               	movlw	0
  1568  001A7A  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1569  001A7C  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1570  001A80  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1571  001A84                     	if	0	;tblptru may be non-zero
  1572  001A84                     	endif
  1573  001A84                     	if	0	;tblptru may be non-zero
  1574  001A84                     	endif
  1575  001A84  0008               	tblrd		*
  1576  001A86  50F5               	movf	tablat,w,c
  1577  001A88  6E07               	movwf	tolower@c^0,c
  1578  001A8A  6A08               	clrf	(tolower@c+1)^0,c
  1579  001A8C  ECD8  F019         	call	_tolower	;wreg free
  1580  001A90  5007               	movf	?_tolower^0,w,c
  1581  001A92  6E54               	movwf	(vfpfcnvrt@ct+2)^0,c
  1582  001A94                     l3883:
  1583                           
  1584                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  1585  001A94  0E66               	movlw	102
  1586  001A96  1852               	xorwf	vfpfcnvrt@ct^0,w,c
  1587  001A98  A4D8               	btfss	status,2,c
  1588  001A9A  EF51  F00D         	goto	u4691
  1589  001A9E  EF53  F00D         	goto	u4690
  1590  001AA2                     u4691:
  1591  001AA2  EF93  F00D         	goto	l3895
  1592  001AA6                     u4690:
  1593  001AA6                     
  1594                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  1595  001AA6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1596  001AAA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1597  001AAE  CFDE FFF6          	movff	postinc2,tblptrl
  1598  001AB2  CFDD FFF7          	movff	postdec2,tblptrh
  1599  001AB6                     	if	0	;tblptru may be non-zero
  1600  001AB6                     	endif
  1601  001AB6                     	if	0	;tblptru may be non-zero
  1602  001AB6                     	endif
  1603  001AB6  0008               	tblrd		*
  1604  001AB8  CFF5 F055          	movff	tablat,vfpfcnvrt@c
  1605  001ABC                     
  1606                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  1607  001ABC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1608  001AC0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1609  001AC4  2ADE               	incf	postinc2,f,c
  1610  001AC6  0E00               	movlw	0
  1611  001AC8  22DD               	addwfc	postdec2,f,c
  1612  001ACA                     
  1613                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1614  001ACA  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1615  001ACE  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1616  001AD2  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1617  001AD6  0E04               	movlw	4
  1618  001AD8  26DE               	addwf	postinc2,f,c
  1619  001ADA  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1620  001ADE  0E00               	movlw	0
  1621  001AE0  22DD               	addwfc	postdec2,f,c
  1622  001AE2  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1623  001AE6  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1624  001AEA  CFDE F04E          	movff	postinc2,vfpfcnvrt@f
  1625  001AEE  CFDE F04F          	movff	postinc2,vfpfcnvrt@f+1
  1626  001AF2  CFDE F050          	movff	postinc2,vfpfcnvrt@f+2
  1627  001AF6  CFDE F051          	movff	postinc2,vfpfcnvrt@f+3
  1628  001AFA                     l3891:
  1629                           
  1630                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  1631  001AFA  C040  F034         	movff	vfpfcnvrt@fp,efgtoa@fp
  1632  001AFE  C041  F035         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  1633  001B02  C04E  F036         	movff	vfpfcnvrt@f,efgtoa@f
  1634  001B06  C04F  F037         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  1635  001B0A  C050  F038         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  1636  001B0E  C051  F039         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  1637  001B12  C055  F03A         	movff	vfpfcnvrt@c,efgtoa@c
  1638  001B16  EC0E  F004         	call	_efgtoa	;wreg free
  1639  001B1A  C034  F040         	movff	?_efgtoa,?_vfpfcnvrt
  1640  001B1E  C035  F041         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  1641  001B22  EF76  F00E         	goto	l316
  1642  001B26                     l3895:
  1643                           
  1644                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  1645  001B26  0E52               	movlw	low vfpfcnvrt@ct
  1646  001B28  6E01               	movwf	strncmp@_l^0,c
  1647  001B2A  0E00               	movlw	high vfpfcnvrt@ct
  1648  001B2C  6E02               	movwf	(strncmp@_l+1)^0,c
  1649  001B2E  0E18               	movlw	low STR_10
  1650  001B30  6E03               	movwf	strncmp@_r^0,c
  1651  001B32  0E08               	movlw	high STR_10
  1652  001B34  6E04               	movwf	(strncmp@_r+1)^0,c
  1653  001B36  0E00               	movlw	0
  1654  001B38  6E06               	movwf	(strncmp@n+1)^0,c
  1655  001B3A  0E02               	movlw	2
  1656  001B3C  6E05               	movwf	strncmp@n^0,c
  1657  001B3E  EC0B  F017         	call	_strncmp	;wreg free
  1658  001B42  5001               	movf	?_strncmp^0,w,c
  1659  001B44  1002               	iorwf	(?_strncmp+1)^0,w,c
  1660  001B46  A4D8               	btfss	status,2,c
  1661  001B48  EFA8  F00D         	goto	u4701
  1662  001B4C  EFAA  F00D         	goto	u4700
  1663  001B50                     u4701:
  1664  001B50  EF25  F00E         	goto	l3911
  1665  001B54                     u4700:
  1666  001B54                     
  1667                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  1668  001B54  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1669  001B58  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1670  001B5C  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  1671  001B60  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  1672  001B64  0E01               	movlw	1
  1673  001B66  2646               	addwf	??_vfpfcnvrt^0,f,c
  1674  001B68  0E00               	movlw	0
  1675  001B6A  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  1676  001B6C  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1677  001B70  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1678  001B74                     	if	0	;tblptru may be non-zero
  1679  001B74                     	endif
  1680  001B74                     	if	0	;tblptru may be non-zero
  1681  001B74                     	endif
  1682  001B74  0008               	tblrd		*
  1683  001B76  CFF5 F055          	movff	tablat,vfpfcnvrt@c
  1684  001B7A  0EBF               	movlw	191
  1685  001B7C  6E46               	movwf	??_vfpfcnvrt^0,c
  1686  001B7E  0EFF               	movlw	255
  1687  001B80  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  1688  001B82  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1689  001B86  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1690  001B8A  CFDE FFF6          	movff	postinc2,tblptrl
  1691  001B8E  CFDD FFF7          	movff	postdec2,tblptrh
  1692  001B92                     	if	0	;tblptru may be non-zero
  1693  001B92                     	endif
  1694  001B92                     	if	0	;tblptru may be non-zero
  1695  001B92                     	endif
  1696  001B92  0008               	tblrd		*
  1697  001B94  50F5               	movf	tablat,w,c
  1698  001B96  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  1699  001B98  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  1700  001B9A  5046               	movf	??_vfpfcnvrt^0,w,c
  1701  001B9C  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  1702  001B9E  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  1703  001BA0  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  1704  001BA2  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  1705  001BA4  E10A               	bnz	u4710
  1706  001BA6  0E1A               	movlw	26
  1707  001BA8  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  1708  001BAA  A0D8               	btfss	status,0,c
  1709  001BAC  EFDA  F00D         	goto	u4711
  1710  001BB0  EFDD  F00D         	goto	u4710
  1711  001BB4                     u4711:
  1712  001BB4  0E01               	movlw	1
  1713  001BB6  EFDE  F00D         	goto	u4720
  1714  001BBA                     u4710:
  1715  001BBA  0E00               	movlw	0
  1716  001BBC                     u4720:
  1717  001BBC  6E4C               	movwf	_vfpfcnvrt$352^0,c
  1718  001BBE  6A4D               	clrf	(_vfpfcnvrt$352+1)^0,c
  1719  001BC0  504C               	movf	_vfpfcnvrt$352^0,w,c
  1720  001BC2  104D               	iorwf	(_vfpfcnvrt$352+1)^0,w,c
  1721  001BC4  B4D8               	btfsc	status,2,c
  1722  001BC6  EFE7  F00D         	goto	u4731
  1723  001BCA  EFE9  F00D         	goto	u4730
  1724  001BCE                     u4731:
  1725  001BCE  EF03  F00E         	goto	l3905
  1726  001BD2                     u4730:
  1727  001BD2                     
  1728                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1729  001BD2  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1730  001BD6  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1731  001BDA  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1732  001BDE  0E04               	movlw	4
  1733  001BE0  26DE               	addwf	postinc2,f,c
  1734  001BE2  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1735  001BE6  0E00               	movlw	0
  1736  001BE8  22DD               	addwfc	postdec2,f,c
  1737  001BEA  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1738  001BEE  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1739  001BF2  CFDE F04E          	movff	postinc2,vfpfcnvrt@f
  1740  001BF6  CFDE F04F          	movff	postinc2,vfpfcnvrt@f+1
  1741  001BFA  CFDE F050          	movff	postinc2,vfpfcnvrt@f+2
  1742  001BFE  CFDE F051          	movff	postinc2,vfpfcnvrt@f+3
  1743                           
  1744                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  1745  001C02  EF1B  F00E         	goto	l323
  1746  001C06                     l3905:
  1747                           
  1748                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1749  001C06  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1750  001C0A  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1751  001C0E  CFDF F046          	movff	indf2,??_vfpfcnvrt
  1752  001C12  0E04               	movlw	4
  1753  001C14  26DE               	addwf	postinc2,f,c
  1754  001C16  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  1755  001C1A  0E00               	movlw	0
  1756  001C1C  22DD               	addwfc	postdec2,f,c
  1757  001C1E  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1758  001C22  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1759  001C26  CFDE F04E          	movff	postinc2,vfpfcnvrt@f
  1760  001C2A  CFDE F04F          	movff	postinc2,vfpfcnvrt@f+1
  1761  001C2E  CFDE F050          	movff	postinc2,vfpfcnvrt@f+2
  1762  001C32  CFDE F051          	movff	postinc2,vfpfcnvrt@f+3
  1763  001C36                     l323:
  1764                           
  1765                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  1766  001C36  0E02               	movlw	2
  1767  001C38  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1768  001C3C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1769  001C40  26DE               	addwf	postinc2,f,c
  1770  001C42  0E00               	movlw	0
  1771  001C44  22DD               	addwfc	postdec2,f,c
  1772  001C46  EF7D  F00D         	goto	l3891
  1773  001C4A                     l3911:
  1774                           
  1775                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  1776  001C4A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1777  001C4E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1778  001C52  CFDE FFF6          	movff	postinc2,tblptrl
  1779  001C56  CFDD FFF7          	movff	postdec2,tblptrh
  1780  001C5A                     	if	0	;tblptru may be non-zero
  1781  001C5A                     	endif
  1782  001C5A                     	if	0	;tblptru may be non-zero
  1783  001C5A                     	endif
  1784  001C5A  0008               	tblrd		*
  1785  001C5C  50F5               	movf	tablat,w,c
  1786  001C5E  0A25               	xorlw	37
  1787  001C60  A4D8               	btfss	status,2,c
  1788  001C62  EF35  F00E         	goto	u4741
  1789  001C66  EF37  F00E         	goto	u4740
  1790  001C6A                     u4741:
  1791  001C6A  EF4E  F00E         	goto	l3921
  1792  001C6E                     u4740:
  1793  001C6E                     
  1794                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  1795  001C6E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1796  001C72  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1797  001C76  2ADE               	incf	postinc2,f,c
  1798  001C78  0E00               	movlw	0
  1799  001C7A  22DD               	addwfc	postdec2,f,c
  1800  001C7C                     
  1801                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  1802  001C7C  0E00               	movlw	0
  1803  001C7E  6E02               	movwf	(fputc@c+1)^0,c
  1804  001C80  0E25               	movlw	37
  1805  001C82  6E01               	movwf	fputc@c^0,c
  1806  001C84  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1807  001C88  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1808  001C8C  EC76  F017         	call	_fputc	;wreg free
  1809  001C90                     l3917:
  1810                           
  1811                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  1812  001C90  0E00               	movlw	0
  1813  001C92  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1814  001C94  0E01               	movlw	1
  1815  001C96  6E40               	movwf	?_vfpfcnvrt^0,c
  1816  001C98  EF76  F00E         	goto	l316
  1817  001C9C                     l3921:
  1818                           
  1819                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  1820  001C9C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1821  001CA0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1822  001CA4  2ADE               	incf	postinc2,f,c
  1823  001CA6  0E00               	movlw	0
  1824  001CA8  22DD               	addwfc	postdec2,f,c
  1825  001CAA                     
  1826                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  1827  001CAA  0E00               	movlw	0
  1828  001CAC  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1829  001CAE  0E00               	movlw	0
  1830  001CB0  6E40               	movwf	?_vfpfcnvrt^0,c
  1831  001CB2  EF76  F00E         	goto	l316
  1832  001CB6                     l3927:
  1833                           
  1834                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  1835  001CB6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1836  001CBA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1837  001CBE  CFDE FFF6          	movff	postinc2,tblptrl
  1838  001CC2  CFDD FFF7          	movff	postdec2,tblptrh
  1839  001CC6                     	if	0	;tblptru may be non-zero
  1840  001CC6                     	endif
  1841  001CC6                     	if	0	;tblptru may be non-zero
  1842  001CC6                     	endif
  1843  001CC6  0008               	tblrd		*
  1844  001CC8  50F5               	movf	tablat,w,c
  1845  001CCA  6E01               	movwf	fputc@c^0,c
  1846  001CCC  6A02               	clrf	(fputc@c+1)^0,c
  1847  001CCE  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1848  001CD2  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1849  001CD6  EC76  F017         	call	_fputc	;wreg free
  1850  001CDA                     
  1851                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  1852  001CDA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1853  001CDE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1854  001CE2  2ADE               	incf	postinc2,f,c
  1855  001CE4  0E00               	movlw	0
  1856  001CE6  22DD               	addwfc	postdec2,f,c
  1857  001CE8  EF48  F00E         	goto	l3917
  1858  001CEC                     l316:
  1859  001CEC  0012               	return		;funcret
  1860  001CEE                     __end_of_vfpfcnvrt:
  1861                           	opt callstack 0
  1862                           
  1863 ;; *************** function _strncmp *****************
  1864 ;; Defined at:
  1865 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  1868 ;;		 -> vfpfcnvrt@ct(3), 
  1869 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  1870 ;;		 -> STR_12(3), 
  1871 ;;  n               2    4[COMRAM] unsigned int 
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;  r               2    9[COMRAM] PTR const unsigned char 
  1874 ;;		 -> STR_12(3), 
  1875 ;;  l               2    7[COMRAM] PTR const unsigned char 
  1876 ;;		 -> vfpfcnvrt@ct(3), 
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  2    0[COMRAM] int 
  1879 ;; Registers used:
  1880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1886 ;;      Params:         6       0       0       0       0       0       0       0       0
  1887 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1888 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1889 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1890 ;;Total ram usage:       11 bytes
  1891 ;; Hardware stack levels used:    1
  1892 ;; This function calls:
  1893 ;;		Nothing
  1894 ;; This function is called by:
  1895 ;;		_vfpfcnvrt
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           	psect	text4
  1900  002E16                     __ptext4:
  1901                           	opt callstack 0
  1902  002E16                     _strncmp:
  1903                           	opt callstack 27
  1904  002E16  C001  F008         	movff	strncmp@_l,strncmp@l
  1905  002E1A  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  1906  002E1E  C003  F00A         	movff	strncmp@_r,strncmp@r
  1907  002E22  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  1908  002E26  0605               	decf	strncmp@n^0,f,c
  1909  002E28  A0D8               	btfss	status,0,c
  1910  002E2A  0606               	decf	(strncmp@n+1)^0,f,c
  1911  002E2C  2805               	incf	strncmp@n^0,w,c
  1912  002E2E  E106               	bnz	u4541
  1913  002E30  2806               	incf	(strncmp@n+1)^0,w,c
  1914  002E32  A4D8               	btfss	status,2,c
  1915  002E34  EF1E  F017         	goto	u4541
  1916  002E38  EF20  F017         	goto	u4540
  1917  002E3C                     u4541:
  1918  002E3C  EF2D  F017         	goto	l3801
  1919  002E40                     u4540:
  1920  002E40  0E00               	movlw	0
  1921  002E42  6E02               	movwf	(?_strncmp+1)^0,c
  1922  002E44  0E00               	movlw	0
  1923  002E46  6E01               	movwf	?_strncmp^0,c
  1924  002E48  EF75  F017         	goto	l1125
  1925  002E4C                     l3799:
  1926  002E4C  4A08               	infsnz	strncmp@l^0,f,c
  1927  002E4E  2A09               	incf	(strncmp@l+1)^0,f,c
  1928  002E50  4A0A               	infsnz	strncmp@r^0,f,c
  1929  002E52  2A0B               	incf	(strncmp@r+1)^0,f,c
  1930  002E54  0605               	decf	strncmp@n^0,f,c
  1931  002E56  A0D8               	btfss	status,0,c
  1932  002E58  0606               	decf	(strncmp@n+1)^0,f,c
  1933  002E5A                     l3801:
  1934  002E5A  C008  FFD9         	movff	strncmp@l,fsr2l
  1935  002E5E  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1936  002E62  50DF               	movf	indf2,w,c
  1937  002E64  B4D8               	btfsc	status,2,c
  1938  002E66  EF37  F017         	goto	u4551
  1939  002E6A  EF39  F017         	goto	u4550
  1940  002E6E                     u4551:
  1941  002E6E  EF64  F017         	goto	l3809
  1942  002E72                     u4550:
  1943  002E72  C00A  FFF6         	movff	strncmp@r,tblptrl
  1944  002E76  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1945  002E7A                     	if	0	;tblptru may be non-zero
  1946  002E7A                     	endif
  1947  002E7A                     	if	0	;tblptru may be non-zero
  1948  002E7A                     	endif
  1949  002E7A  0008               	tblrd		*
  1950  002E7C  50F5               	movf	tablat,w,c
  1951  002E7E  0900               	iorlw	0
  1952  002E80  B4D8               	btfsc	status,2,c
  1953  002E82  EF45  F017         	goto	u4561
  1954  002E86  EF47  F017         	goto	u4560
  1955  002E8A                     u4561:
  1956  002E8A  EF64  F017         	goto	l3809
  1957  002E8E                     u4560:
  1958  002E8E  5005               	movf	strncmp@n^0,w,c
  1959  002E90  1006               	iorwf	(strncmp@n+1)^0,w,c
  1960  002E92  B4D8               	btfsc	status,2,c
  1961  002E94  EF4E  F017         	goto	u4571
  1962  002E98  EF50  F017         	goto	u4570
  1963  002E9C                     u4571:
  1964  002E9C  EF64  F017         	goto	l3809
  1965  002EA0                     u4570:
  1966  002EA0  C008  FFD9         	movff	strncmp@l,fsr2l
  1967  002EA4  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1968  002EA8  50DF               	movf	indf2,w,c
  1969  002EAA  6E07               	movwf	??_strncmp^0,c
  1970  002EAC  C00A  FFF6         	movff	strncmp@r,tblptrl
  1971  002EB0  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1972  002EB4                     	if	0	;tblptru may be non-zero
  1973  002EB4                     	endif
  1974  002EB4                     	if	0	;tblptru may be non-zero
  1975  002EB4                     	endif
  1976  002EB4  0008               	tblrd		*
  1977  002EB6  50F5               	movf	tablat,w,c
  1978  002EB8  1807               	xorwf	??_strncmp^0,w,c
  1979  002EBA  B4D8               	btfsc	status,2,c
  1980  002EBC  EF62  F017         	goto	u4581
  1981  002EC0  EF64  F017         	goto	u4580
  1982  002EC4                     u4581:
  1983  002EC4  EF26  F017         	goto	l3799
  1984  002EC8                     u4580:
  1985  002EC8                     l3809:
  1986  002EC8  C008  FFD9         	movff	strncmp@l,fsr2l
  1987  002ECC  C009  FFDA         	movff	strncmp@l+1,fsr2h
  1988  002ED0  50DF               	movf	indf2,w,c
  1989  002ED2  6E07               	movwf	??_strncmp^0,c
  1990  002ED4  C00A  FFF6         	movff	strncmp@r,tblptrl
  1991  002ED8  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  1992  002EDC                     	if	0	;tblptru may be non-zero
  1993  002EDC                     	endif
  1994  002EDC                     	if	0	;tblptru may be non-zero
  1995  002EDC                     	endif
  1996  002EDC  0008               	tblrd		*
  1997  002EDE  50F5               	movf	tablat,w,c
  1998  002EE0  5C07               	subwf	??_strncmp^0,w,c
  1999  002EE2  6E01               	movwf	?_strncmp^0,c
  2000  002EE4  6A02               	clrf	(?_strncmp+1)^0,c
  2001  002EE6  A0D8               	btfss	status,0,c
  2002  002EE8  0602               	decf	(?_strncmp+1)^0,f,c
  2003  002EEA                     l1125:
  2004  002EEA  0012               	return		;funcret
  2005  002EEC                     __end_of_strncmp:
  2006                           	opt callstack 0
  2007                           
  2008 ;; *************** function _efgtoa *****************
  2009 ;; Defined at:
  2010 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;  fp              2   51[COMRAM] PTR struct _IO_FILE
  2013 ;;		 -> sprintf@f(6), 
  2014 ;;  f               4   53[COMRAM] PTR struct _IO_FILE
  2015 ;;  c               1   57[COMRAM] unsigned char 
  2016 ;; Auto vars:     Size  Location     Type
  2017 ;;  u               4   52[BANK0 ] unsigned char 
  2018 ;;  g               4   44[BANK0 ] unsigned char 
  2019 ;;  l               4   38[BANK0 ] unsigned char 
  2020 ;;  h               4   34[BANK0 ] unsigned char 
  2021 ;;  ou              4    0[BANK0 ] unsigned char 
  2022 ;;  n               2   50[BANK0 ] int 
  2023 ;;  e               2   48[BANK0 ] int 
  2024 ;;  i               2   42[BANK0 ] int 
  2025 ;;  w               2   31[BANK0 ] int 
  2026 ;;  p               2   28[BANK0 ] int 
  2027 ;;  sign            2   26[BANK0 ] int 
  2028 ;;  d               2   24[BANK0 ] int 
  2029 ;;  ne              2   22[BANK0 ] int 
  2030 ;;  m               2   20[BANK0 ] int 
  2031 ;;  pp              2   18[BANK0 ] int 
  2032 ;;  t               2   16[BANK0 ] int 
  2033 ;;  mode            1   33[BANK0 ] unsigned char 
  2034 ;;  nmode           1   30[BANK0 ] unsigned char 
  2035 ;; Return value:  Size  Location     Type
  2036 ;;                  2   51[COMRAM] int 
  2037 ;; Registers used:
  2038 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2039 ;; Tracked objects:
  2040 ;;		On entry : 0/0
  2041 ;;		On exit  : 0/0
  2042 ;;		Unchanged: 0/0
  2043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2044 ;;      Params:         7       0       0       0       0       0       0       0       0
  2045 ;;      Locals:         0      56       0       0       0       0       0       0       0
  2046 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2047 ;;      Totals:        12      56       0       0       0       0       0       0       0
  2048 ;;Total ram usage:       68 bytes
  2049 ;; Hardware stack levels used:    1
  2050 ;; Hardware stack levels required when called:    4
  2051 ;; This function calls:
  2052 ;;		___awdiv
  2053 ;;		___awmod
  2054 ;;		___fladd
  2055 ;;		___fldiv
  2056 ;;		___fleq
  2057 ;;		___flge
  2058 ;;		___flmul
  2059 ;;		___flneg
  2060 ;;		___flsub
  2061 ;;		___fltol
  2062 ;;		___fpclassifyf
  2063 ;;		_floorf
  2064 ;;		_isupper
  2065 ;;		_pad
  2066 ;;		_strcpy
  2067 ;;		_tolower
  2068 ;; This function is called by:
  2069 ;;		_vfpfcnvrt
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           	psect	text5
  2074  00081C                     __ptext5:
  2075                           	opt callstack 0
  2076  00081C                     _efgtoa:
  2077                           	opt callstack 23
  2078  00081C                     
  2079                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  2080  00081C  0E00               	movlw	0
  2081  00081E  0100               	movlb	0	; () banked
  2082  000820  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2083  000822  0E00               	movlw	0
  2084  000824  6F7A               	movwf	efgtoa@sign& (0+255),b
  2085  000826                     
  2086                           ; BSR set to: 0
  2087                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  2088  000826  C036  F08C         	movff	efgtoa@f,efgtoa@g
  2089  00082A  C037  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  2090  00082E  C038  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  2091  000832  C039  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  2092  000836                     
  2093                           ; BSR set to: 0
  2094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  2095  000836  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2096  000838  EF22  F004         	goto	u3950
  2097  00083C  EF20  F004         	goto	u3951
  2098  000840                     u3951:
  2099  000840  EF38  F004         	goto	l3463
  2100  000844                     u3950:
  2101  000844                     
  2102                           ; BSR set to: 0
  2103                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  2104  000844  0E00               	movlw	0
  2105  000846  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2106  000848  0E01               	movlw	1
  2107  00084A  6F7A               	movwf	efgtoa@sign& (0+255),b
  2108  00084C                     
  2109                           ; BSR set to: 0
  2110                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  2111  00084C  C08C  F001         	movff	efgtoa@g,___flneg@f1
  2112  000850  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  2113  000854  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  2114  000858  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  2115  00085C  EC04  F01C         	call	___flneg	;wreg free
  2116  000860  C001  F08C         	movff	?___flneg,efgtoa@g
  2117  000864  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  2118  000868  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  2119  00086C  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  2120  000870                     l3463:
  2121                           
  2122                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  2123  000870  0E00               	movlw	0
  2124  000872  0100               	movlb	0	; () banked
  2125  000874  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  2126  000876  0E00               	movlw	0
  2127  000878  6F92               	movwf	efgtoa@n& (0+255),b
  2128  00087A                     
  2129                           ; BSR set to: 0
  2130                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  2131  00087A  C0C0  F07F         	movff	_width,efgtoa@w
  2132  00087E  C0C1  F080         	movff	_width+1,efgtoa@w+1
  2133  000882                     
  2134                           ; BSR set to: 0
  2135                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  2136  000882  517A               	movf	efgtoa@sign& (0+255),w,b
  2137  000884  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2138  000886  A4D8               	btfss	status,2,c
  2139  000888  EF48  F004         	goto	u3961
  2140  00088C  EF4A  F004         	goto	u3960
  2141  000890                     u3961:
  2142  000890  EF51  F004         	goto	l3471
  2143  000894                     u3960:
  2144  000894                     
  2145                           ; BSR set to: 0
  2146  000894  A45E               	btfss	_flags^0,2,c
  2147  000896  EF4F  F004         	goto	u3971
  2148  00089A  EF51  F004         	goto	u3970
  2149  00089E                     u3971:
  2150  00089E  EF6B  F004         	goto	l3483
  2151  0008A2                     u3970:
  2152  0008A2                     l3471:
  2153                           
  2154                           ; BSR set to: 0
  2155                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  2156  0008A2  517A               	movf	efgtoa@sign& (0+255),w,b
  2157  0008A4  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2158  0008A6  A4D8               	btfss	status,2,c
  2159  0008A8  EF58  F004         	goto	u3981
  2160  0008AC  EF5A  F004         	goto	u3980
  2161  0008B0                     u3981:
  2162  0008B0  EF60  F004         	goto	l3475
  2163  0008B4                     u3980:
  2164  0008B4                     
  2165                           ; BSR set to: 0
  2166  0008B4  0E00               	movlw	0
  2167  0008B6  6F65               	movwf	(_efgtoa$322+1)& (0+255),b
  2168  0008B8  0E2B               	movlw	43
  2169  0008BA  6F64               	movwf	_efgtoa$322& (0+255),b
  2170  0008BC  EF64  F004         	goto	l3477
  2171  0008C0                     l3475:
  2172                           
  2173                           ; BSR set to: 0
  2174  0008C0  0E00               	movlw	0
  2175  0008C2  6F65               	movwf	(_efgtoa$322+1)& (0+255),b
  2176  0008C4  0E2D               	movlw	45
  2177  0008C6  6F64               	movwf	_efgtoa$322& (0+255),b
  2178  0008C8                     l3477:
  2179                           
  2180                           ; BSR set to: 0
  2181  0008C8  C064  F100         	movff	_efgtoa$322,_dbuf
  2182  0008CC                     
  2183                           ; BSR set to: 0
  2184                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  2185  0008CC  4B92               	infsnz	efgtoa@n& (0+255),f,b
  2186  0008CE  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  2187  0008D0                     
  2188                           ; BSR set to: 0
  2189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  2190  0008D0  077F               	decf	efgtoa@w& (0+255),f,b
  2191  0008D2  A0D8               	btfss	status,0,c
  2192  0008D4  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  2193  0008D6                     l3483:
  2194                           
  2195                           ; BSR set to: 0
  2196                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2197  0008D6  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2198  0008DA  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2199  0008DE  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2200  0008E2  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2201  0008E6  EC8C  F016         	call	___fpclassifyf	;wreg free
  2202  0008EA  0401               	decf	?___fpclassifyf^0,w,c
  2203  0008EC  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2204  0008EE  A4D8               	btfss	status,2,c
  2205  0008F0  EF7C  F004         	goto	u3991
  2206  0008F4  EF7E  F004         	goto	u3990
  2207  0008F8                     u3991:
  2208  0008F8  EFD5  F004         	goto	l3501
  2209  0008FC                     u3990:
  2210  0008FC  0EBF               	movlw	191
  2211  0008FE  6E3B               	movwf	??_efgtoa^0,c
  2212  000900  0EFF               	movlw	255
  2213  000902  6E3C               	movwf	(??_efgtoa+1)^0,c
  2214  000904  503A               	movf	efgtoa@c^0,w,c
  2215  000906  6E3D               	movwf	(??_efgtoa+2)^0,c
  2216  000908  6A3E               	clrf	(??_efgtoa+3)^0,c
  2217  00090A  503B               	movf	??_efgtoa^0,w,c
  2218  00090C  263D               	addwf	(??_efgtoa+2)^0,f,c
  2219  00090E  503C               	movf	(??_efgtoa+1)^0,w,c
  2220  000910  223E               	addwfc	(??_efgtoa+3)^0,f,c
  2221  000912  503E               	movf	(??_efgtoa+3)^0,w,c
  2222  000914  E10A               	bnz	u4000
  2223  000916  0E1A               	movlw	26
  2224  000918  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  2225  00091A  A0D8               	btfss	status,0,c
  2226  00091C  EF92  F004         	goto	u4001
  2227  000920  EF95  F004         	goto	u4000
  2228  000924                     u4001:
  2229  000924  0E01               	movlw	1
  2230  000926  EF96  F004         	goto	u4010
  2231  00092A                     u4000:
  2232  00092A  0E00               	movlw	0
  2233  00092C                     u4010:
  2234  00092C  0100               	movlb	0	; () banked
  2235  00092E  6F66               	movwf	_efgtoa$323& (0+255),b
  2236  000930  6B67               	clrf	(_efgtoa$323+1)& (0+255),b
  2237  000932                     
  2238                           ; BSR set to: 0
  2239  000932  5166               	movf	_efgtoa$323& (0+255),w,b
  2240  000934  1167               	iorwf	(_efgtoa$323+1)& (0+255),w,b
  2241  000936  B4D8               	btfsc	status,2,c
  2242  000938  EFA0  F004         	goto	u4021
  2243  00093C  EFA2  F004         	goto	u4020
  2244  000940                     u4021:
  2245  000940  EFB0  F004         	goto	l3493
  2246  000944                     u4020:
  2247  000944                     
  2248                           ; BSR set to: 0
  2249                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  2250  000944  0E00               	movlw	low _dbuf
  2251  000946  2592               	addwf	efgtoa@n& (0+255),w,b
  2252  000948  6E01               	movwf	strcpy@dest^0,c
  2253  00094A  0E01               	movlw	high _dbuf
  2254  00094C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2255  00094E  6E02               	movwf	(strcpy@dest+1)^0,c
  2256  000950  0E08               	movlw	low STR_2
  2257  000952  6E03               	movwf	strcpy@src^0,c
  2258  000954  0E08               	movlw	high STR_2
  2259  000956  6E04               	movwf	(strcpy@src+1)^0,c
  2260  000958  EC38  F01A         	call	_strcpy	;wreg free
  2261                           
  2262                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  2263  00095C  EFBC  F004         	goto	l3495
  2264  000960                     l3493:
  2265                           
  2266                           ; BSR set to: 0
  2267                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  2268  000960  0E00               	movlw	low _dbuf
  2269  000962  2592               	addwf	efgtoa@n& (0+255),w,b
  2270  000964  6E01               	movwf	strcpy@dest^0,c
  2271  000966  0E01               	movlw	high _dbuf
  2272  000968  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2273  00096A  6E02               	movwf	(strcpy@dest+1)^0,c
  2274  00096C  0E10               	movlw	low STR_3
  2275  00096E  6E03               	movwf	strcpy@src^0,c
  2276  000970  0E08               	movlw	high STR_3
  2277  000972  6E04               	movwf	(strcpy@src+1)^0,c
  2278  000974  EC38  F01A         	call	_strcpy	;wreg free
  2279  000978                     l3495:
  2280                           
  2281                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  2282  000978  0100               	movlb	0	; () banked
  2283  00097A  0EFD               	movlw	253
  2284  00097C  277F               	addwf	efgtoa@w& (0+255),f,b
  2285  00097E  0EFF               	movlw	255
  2286  000980  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2287  000982                     l3497:
  2288                           
  2289                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  2290  000982  C034  F011         	movff	efgtoa@fp,pad@fp
  2291  000986  C035  F012         	movff	efgtoa@fp+1,pad@fp+1
  2292  00098A  0E00               	movlw	low _dbuf
  2293  00098C  6E13               	movwf	pad@buf^0,c
  2294  00098E  0E01               	movlw	high _dbuf
  2295  000990  6E14               	movwf	(pad@buf+1)^0,c
  2296  000992  C07F  F015         	movff	efgtoa@w,pad@p
  2297  000996  C080  F016         	movff	efgtoa@w+1,pad@p+1
  2298  00099A  EC3D  F018         	call	_pad	;wreg free
  2299  00099E  C011  F034         	movff	?_pad,?_efgtoa
  2300  0009A2  C012  F035         	movff	?_pad+1,?_efgtoa+1
  2301  0009A6  EFE6  F009         	goto	l226
  2302  0009AA                     l3501:
  2303                           
  2304                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2305  0009AA  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  2306  0009AE  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2307  0009B2  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2308  0009B6  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2309  0009BA  EC8C  F016         	call	___fpclassifyf	;wreg free
  2310  0009BE  5001               	movf	?___fpclassifyf^0,w,c
  2311  0009C0  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  2312  0009C2  A4D8               	btfss	status,2,c
  2313  0009C4  EFE6  F004         	goto	u4031
  2314  0009C8  EFE8  F004         	goto	u4030
  2315  0009CC                     u4031:
  2316  0009CC  EF28  F005         	goto	l3519
  2317  0009D0                     u4030:
  2318  0009D0  0EBF               	movlw	191
  2319  0009D2  6E3B               	movwf	??_efgtoa^0,c
  2320  0009D4  0EFF               	movlw	255
  2321  0009D6  6E3C               	movwf	(??_efgtoa+1)^0,c
  2322  0009D8  503A               	movf	efgtoa@c^0,w,c
  2323  0009DA  6E3D               	movwf	(??_efgtoa+2)^0,c
  2324  0009DC  6A3E               	clrf	(??_efgtoa+3)^0,c
  2325  0009DE  503B               	movf	??_efgtoa^0,w,c
  2326  0009E0  263D               	addwf	(??_efgtoa+2)^0,f,c
  2327  0009E2  503C               	movf	(??_efgtoa+1)^0,w,c
  2328  0009E4  223E               	addwfc	(??_efgtoa+3)^0,f,c
  2329  0009E6  503E               	movf	(??_efgtoa+3)^0,w,c
  2330  0009E8  E10A               	bnz	u4040
  2331  0009EA  0E1A               	movlw	26
  2332  0009EC  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  2333  0009EE  A0D8               	btfss	status,0,c
  2334  0009F0  EFFC  F004         	goto	u4041
  2335  0009F4  EFFF  F004         	goto	u4040
  2336  0009F8                     u4041:
  2337  0009F8  0E01               	movlw	1
  2338  0009FA  EF00  F005         	goto	u4050
  2339  0009FE                     u4040:
  2340  0009FE  0E00               	movlw	0
  2341  000A00                     u4050:
  2342  000A00  0100               	movlb	0	; () banked
  2343  000A02  6F68               	movwf	_efgtoa$328& (0+255),b
  2344  000A04  6B69               	clrf	(_efgtoa$328+1)& (0+255),b
  2345  000A06                     
  2346                           ; BSR set to: 0
  2347  000A06  5168               	movf	_efgtoa$328& (0+255),w,b
  2348  000A08  1169               	iorwf	(_efgtoa$328+1)& (0+255),w,b
  2349  000A0A  B4D8               	btfsc	status,2,c
  2350  000A0C  EF0A  F005         	goto	u4061
  2351  000A10  EF0C  F005         	goto	u4060
  2352  000A14                     u4061:
  2353  000A14  EF1A  F005         	goto	l3511
  2354  000A18                     u4060:
  2355  000A18                     
  2356                           ; BSR set to: 0
  2357                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  2358  000A18  0E00               	movlw	low _dbuf
  2359  000A1A  2592               	addwf	efgtoa@n& (0+255),w,b
  2360  000A1C  6E01               	movwf	strcpy@dest^0,c
  2361  000A1E  0E01               	movlw	high _dbuf
  2362  000A20  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2363  000A22  6E02               	movwf	(strcpy@dest+1)^0,c
  2364  000A24  0E0C               	movlw	low STR_6
  2365  000A26  6E03               	movwf	strcpy@src^0,c
  2366  000A28  0E08               	movlw	high STR_6
  2367  000A2A  6E04               	movwf	(strcpy@src+1)^0,c
  2368  000A2C  EC38  F01A         	call	_strcpy	;wreg free
  2369                           
  2370                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  2371  000A30  EFBC  F004         	goto	l3495
  2372  000A34                     l3511:
  2373                           
  2374                           ; BSR set to: 0
  2375                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  2376  000A34  0E00               	movlw	low _dbuf
  2377  000A36  2592               	addwf	efgtoa@n& (0+255),w,b
  2378  000A38  6E01               	movwf	strcpy@dest^0,c
  2379  000A3A  0E01               	movlw	high _dbuf
  2380  000A3C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2381  000A3E  6E02               	movwf	(strcpy@dest+1)^0,c
  2382  000A40  0E14               	movlw	low STR_7
  2383  000A42  6E03               	movwf	strcpy@src^0,c
  2384  000A44  0E08               	movlw	high STR_7
  2385  000A46  6E04               	movwf	(strcpy@src+1)^0,c
  2386  000A48  EC38  F01A         	call	_strcpy	;wreg free
  2387  000A4C  EFBC  F004         	goto	l3495
  2388  000A50                     l3519:
  2389                           
  2390                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  2391  000A50  0E00               	movlw	0
  2392  000A52  0100               	movlb	0	; () banked
  2393  000A54  6F94               	movwf	efgtoa@u& (0+255),b
  2394  000A56  0E00               	movlw	0
  2395  000A58  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2396  000A5A  0E80               	movlw	128
  2397  000A5C  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2398  000A5E  0E3F               	movlw	63
  2399  000A60  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2400                           
  2401                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  2402  000A62  0E00               	movlw	0
  2403  000A64  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2404  000A66  0E00               	movlw	0
  2405  000A68  6F90               	movwf	efgtoa@e& (0+255),b
  2406  000A6A                     
  2407                           ; BSR set to: 0
  2408                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  2409  000A6A  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  2410  000A6E  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  2411  000A72  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  2412  000A76  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  2413  000A7A  0E00               	movlw	0
  2414  000A7C  6E05               	movwf	___fleq@ff2^0,c
  2415  000A7E  0E00               	movlw	0
  2416  000A80  6E06               	movwf	(___fleq@ff2+1)^0,c
  2417  000A82  0E00               	movlw	0
  2418  000A84  6E07               	movwf	(___fleq@ff2+2)^0,c
  2419  000A86  0E00               	movlw	0
  2420  000A88  6E08               	movwf	(___fleq@ff2+3)^0,c
  2421  000A8A  EC52  F019         	call	___fleq	;wreg free
  2422  000A8E  B0D8               	btfsc	status,0,c
  2423  000A90  EF4C  F005         	goto	u4071
  2424  000A94  EF4E  F005         	goto	u4070
  2425  000A98                     u4071:
  2426  000A98  EFD1  F005         	goto	l3537
  2427  000A9C                     u4070:
  2428  000A9C  EF6D  F005         	goto	l3529
  2429  000AA0                     l3525:
  2430                           
  2431                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  2432  000AA0  C094  F00F         	movff	efgtoa@u,___flmul@b
  2433  000AA4  C095  F010         	movff	efgtoa@u+1,___flmul@b+1
  2434  000AA8  C096  F011         	movff	efgtoa@u+2,___flmul@b+2
  2435  000AAC  C097  F012         	movff	efgtoa@u+3,___flmul@b+3
  2436  000AB0  0E00               	movlw	0
  2437  000AB2  6E13               	movwf	___flmul@a^0,c
  2438  000AB4  0E00               	movlw	0
  2439  000AB6  6E14               	movwf	(___flmul@a+1)^0,c
  2440  000AB8  0E20               	movlw	32
  2441  000ABA  6E15               	movwf	(___flmul@a+2)^0,c
  2442  000ABC  0E41               	movlw	65
  2443  000ABE  6E16               	movwf	(___flmul@a+3)^0,c
  2444  000AC0  EC77  F00E         	call	___flmul	;wreg free
  2445  000AC4  C00F  F094         	movff	?___flmul,efgtoa@u
  2446  000AC8  C010  F095         	movff	?___flmul+1,efgtoa@u+1
  2447  000ACC  C011  F096         	movff	?___flmul+2,efgtoa@u+2
  2448  000AD0  C012  F097         	movff	?___flmul+3,efgtoa@u+3
  2449  000AD4                     
  2450                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  2451  000AD4  0100               	movlb	0	; () banked
  2452  000AD6  4B90               	infsnz	efgtoa@e& (0+255),f,b
  2453  000AD8  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  2454  000ADA                     l3529:
  2455                           
  2456                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  2457  000ADA  C08C  F028         	movff	efgtoa@g,___flge@ff1
  2458  000ADE  C08D  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2459  000AE2  C08E  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2460  000AE6  C08F  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2461  000AEA  0E00               	movlw	0
  2462  000AEC  6E13               	movwf	___flmul@a^0,c
  2463  000AEE  0E00               	movlw	0
  2464  000AF0  6E14               	movwf	(___flmul@a+1)^0,c
  2465  000AF2  0E20               	movlw	32
  2466  000AF4  6E15               	movwf	(___flmul@a+2)^0,c
  2467  000AF6  0E41               	movlw	65
  2468  000AF8  6E16               	movwf	(___flmul@a+3)^0,c
  2469  000AFA  C094  F00F         	movff	efgtoa@u,___flmul@b
  2470  000AFE  C095  F010         	movff	efgtoa@u+1,___flmul@b+1
  2471  000B02  C096  F011         	movff	efgtoa@u+2,___flmul@b+2
  2472  000B06  C097  F012         	movff	efgtoa@u+3,___flmul@b+3
  2473  000B0A  EC77  F00E         	call	___flmul	;wreg free
  2474  000B0E  C00F  F02C         	movff	?___flmul,___flge@ff2
  2475  000B12  C010  F02D         	movff	?___flmul+1,___flge@ff2+1
  2476  000B16  C011  F02E         	movff	?___flmul+2,___flge@ff2+2
  2477  000B1A  C012  F02F         	movff	?___flmul+3,___flge@ff2+3
  2478  000B1E  EC0A  F016         	call	___flge	;wreg free
  2479  000B22  B0D8               	btfsc	status,0,c
  2480  000B24  EF96  F005         	goto	u4081
  2481  000B28  EF98  F005         	goto	u4080
  2482  000B2C                     u4081:
  2483  000B2C  EF50  F005         	goto	l3525
  2484  000B30                     u4080:
  2485  000B30  EFB8  F005         	goto	l3535
  2486  000B34                     l3531:
  2487                           
  2488                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  2489  000B34  C094  F001         	movff	efgtoa@u,___fldiv@b
  2490  000B38  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2491  000B3C  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2492  000B40  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2493  000B44  0E00               	movlw	0
  2494  000B46  6E05               	movwf	___fldiv@a^0,c
  2495  000B48  0E00               	movlw	0
  2496  000B4A  6E06               	movwf	(___fldiv@a+1)^0,c
  2497  000B4C  0E20               	movlw	32
  2498  000B4E  6E07               	movwf	(___fldiv@a+2)^0,c
  2499  000B50  0E41               	movlw	65
  2500  000B52  6E08               	movwf	(___fldiv@a+3)^0,c
  2501  000B54  EC8C  F010         	call	___fldiv	;wreg free
  2502  000B58  C001  F094         	movff	?___fldiv,efgtoa@u
  2503  000B5C  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  2504  000B60  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  2505  000B64  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  2506  000B68                     
  2507                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  2508  000B68  0100               	movlb	0	; () banked
  2509  000B6A  0790               	decf	efgtoa@e& (0+255),f,b
  2510  000B6C  A0D8               	btfss	status,0,c
  2511  000B6E  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  2512  000B70                     l3535:
  2513                           
  2514                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  2515  000B70  C08C  F028         	movff	efgtoa@g,___flge@ff1
  2516  000B74  C08D  F029         	movff	efgtoa@g+1,___flge@ff1+1
  2517  000B78  C08E  F02A         	movff	efgtoa@g+2,___flge@ff1+2
  2518  000B7C  C08F  F02B         	movff	efgtoa@g+3,___flge@ff1+3
  2519  000B80  C094  F02C         	movff	efgtoa@u,___flge@ff2
  2520  000B84  C095  F02D         	movff	efgtoa@u+1,___flge@ff2+1
  2521  000B88  C096  F02E         	movff	efgtoa@u+2,___flge@ff2+2
  2522  000B8C  C097  F02F         	movff	efgtoa@u+3,___flge@ff2+3
  2523  000B90  EC0A  F016         	call	___flge	;wreg free
  2524  000B94  A0D8               	btfss	status,0,c
  2525  000B96  EFCF  F005         	goto	u4091
  2526  000B9A  EFD1  F005         	goto	u4090
  2527  000B9E                     u4091:
  2528  000B9E  EF9A  F005         	goto	l3531
  2529  000BA2                     u4090:
  2530  000BA2                     l3537:
  2531                           
  2532                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  2533  000BA2  C03A  F007         	movff	efgtoa@c,tolower@c
  2534  000BA6  6A08               	clrf	(tolower@c+1)^0,c
  2535  000BA8  ECD8  F019         	call	_tolower	;wreg free
  2536  000BAC  5007               	movf	?_tolower^0,w,c
  2537  000BAE  0100               	movlb	0	; () banked
  2538  000BB0  6F81               	movwf	efgtoa@mode& (0+255),b
  2539  000BB2                     
  2540                           ; BSR set to: 0
  2541                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  2542  000BB2  C081  F07E         	movff	efgtoa@mode,efgtoa@nmode
  2543  000BB6                     
  2544                           ; BSR set to: 0
  2545                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  2546  000BB6  0E67               	movlw	103
  2547  000BB8  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2548  000BBA  A4D8               	btfss	status,2,c
  2549  000BBC  EFE2  F005         	goto	u4101
  2550  000BC0  EFE4  F005         	goto	u4100
  2551  000BC4                     u4101:
  2552  000BC4  EF0A  F006         	goto	l3551
  2553  000BC8                     u4100:
  2554  000BC8                     
  2555                           ; BSR set to: 0
  2556                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  2557  000BC8  51C2               	movf	_prec& (0+255),w,b
  2558  000BCA  11C3               	iorwf	(_prec+1)& (0+255),w,b
  2559  000BCC  A4D8               	btfss	status,2,c
  2560  000BCE  EFEB  F005         	goto	u4111
  2561  000BD2  EFED  F005         	goto	u4110
  2562  000BD6                     u4111:
  2563  000BD6  EFF1  F005         	goto	l3547
  2564  000BDA                     u4110:
  2565  000BDA                     
  2566                           ; BSR set to: 0
  2567                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  2568  000BDA  0E00               	movlw	0
  2569  000BDC  6FC3               	movwf	(_prec+1)& (0+255),b
  2570  000BDE  0E01               	movlw	1
  2571  000BE0  6FC2               	movwf	_prec& (0+255),b
  2572  000BE2                     l3547:
  2573                           
  2574                           ; BSR set to: 0
  2575                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  2576  000BE2  BFC3               	btfsc	(_prec+1)& (0+255),7,b
  2577  000BE4  EFFE  F005         	goto	u4120
  2578  000BE8  51C3               	movf	(_prec+1)& (0+255),w,b
  2579  000BEA  E106               	bnz	u4121
  2580  000BEC  05C2               	decf	_prec& (0+255),w,b
  2581  000BEE  B0D8               	btfsc	status,0,c
  2582  000BF0  EFFC  F005         	goto	u4121
  2583  000BF4  EFFE  F005         	goto	u4120
  2584  000BF8                     u4121:
  2585  000BF8  EF04  F006         	goto	l244
  2586  000BFC                     u4120:
  2587  000BFC                     l3549:
  2588                           
  2589                           ; BSR set to: 0
  2590  000BFC  0E00               	movlw	0
  2591  000BFE  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  2592  000C00  0E06               	movlw	6
  2593  000C02  6F7C               	movwf	efgtoa@p& (0+255),b
  2594  000C04  EF13  F006         	goto	l3557
  2595  000C08                     l244:
  2596                           
  2597                           ; BSR set to: 0
  2598  000C08  C0C2  F07C         	movff	_prec,efgtoa@p
  2599  000C0C  C0C3  F07D         	movff	_prec+1,efgtoa@p+1
  2600  000C10  EF13  F006         	goto	l3557
  2601  000C14                     l3551:
  2602                           
  2603                           ; BSR set to: 0
  2604                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  2605  000C14  BFC3               	btfsc	(_prec+1)& (0+255),7,b
  2606  000C16  EF0F  F006         	goto	u4131
  2607  000C1A  EF11  F006         	goto	u4130
  2608  000C1E                     u4131:
  2609  000C1E  EFFE  F005         	goto	l3549
  2610  000C22                     u4130:
  2611  000C22  EF04  F006         	goto	l244
  2612  000C26                     l3557:
  2613                           
  2614                           ; BSR set to: 0
  2615                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  2616  000C26  0E67               	movlw	103
  2617  000C28  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2618  000C2A  A4D8               	btfss	status,2,c
  2619  000C2C  EF1A  F006         	goto	u4141
  2620  000C30  EF1C  F006         	goto	u4140
  2621  000C34                     u4141:
  2622  000C34  EF4B  F006         	goto	l3567
  2623  000C38                     u4140:
  2624  000C38                     
  2625                           ; BSR set to: 0
  2626                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  2627  000C38  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  2628  000C3A  EF2A  F006         	goto	u4150
  2629  000C3E  0EFC               	movlw	252
  2630  000C40  5D90               	subwf	efgtoa@e& (0+255),w,b
  2631  000C42  0EFF               	movlw	255
  2632  000C44  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  2633  000C46  A0D8               	btfss	status,0,c
  2634  000C48  EF28  F006         	goto	u4151
  2635  000C4C  EF2A  F006         	goto	u4150
  2636  000C50                     u4151:
  2637  000C50  EF49  F006         	goto	l3565
  2638  000C54                     u4150:
  2639  000C54                     
  2640                           ; BSR set to: 0
  2641  000C54  0EFF               	movlw	255
  2642  000C56  6E3B               	movwf	??_efgtoa^0,c
  2643  000C58  0EFF               	movlw	255
  2644  000C5A  6E3C               	movwf	(??_efgtoa+1)^0,c
  2645  000C5C  C07C  F03D         	movff	efgtoa@p,??_efgtoa+2
  2646  000C60  C07D  F03E         	movff	efgtoa@p+1,??_efgtoa+3
  2647  000C64  503B               	movf	??_efgtoa^0,w,c
  2648  000C66  263D               	addwf	(??_efgtoa+2)^0,f,c
  2649  000C68  503C               	movf	(??_efgtoa+1)^0,w,c
  2650  000C6A  223E               	addwfc	(??_efgtoa+3)^0,f,c
  2651  000C6C  5190               	movf	efgtoa@e& (0+255),w,b
  2652  000C6E  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  2653  000C70  503E               	movf	(??_efgtoa+3)^0,w,c
  2654  000C72  0A80               	xorlw	128
  2655  000C74  6E3F               	movwf	(??_efgtoa+4)^0,c
  2656  000C76  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  2657  000C78  0A80               	xorlw	128
  2658  000C7A  583F               	subwfb	(??_efgtoa+4)^0,w,c
  2659  000C7C  A0D8               	btfss	status,0,c
  2660  000C7E  EF43  F006         	goto	u4161
  2661  000C82  EF45  F006         	goto	u4160
  2662  000C86                     u4161:
  2663  000C86  EF49  F006         	goto	l3565
  2664  000C8A                     u4160:
  2665  000C8A                     
  2666                           ; BSR set to: 0
  2667                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  2668  000C8A  0E66               	movlw	102
  2669  000C8C  6F7E               	movwf	efgtoa@nmode& (0+255),b
  2670                           
  2671                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  2672  000C8E  EF4B  F006         	goto	l3567
  2673  000C92                     l3565:
  2674                           
  2675                           ; BSR set to: 0
  2676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  2677  000C92  0E65               	movlw	101
  2678  000C94  6F7E               	movwf	efgtoa@nmode& (0+255),b
  2679  000C96                     l3567:
  2680                           
  2681                           ; BSR set to: 0
  2682                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  2683  000C96  C07C  F074         	movff	efgtoa@p,efgtoa@m
  2684  000C9A  C07D  F075         	movff	efgtoa@p+1,efgtoa@m+1
  2685  000C9E                     
  2686                           ; BSR set to: 0
  2687                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  2688  000C9E  0E67               	movlw	103
  2689  000CA0  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2690  000CA2  A4D8               	btfss	status,2,c
  2691  000CA4  EF56  F006         	goto	u4171
  2692  000CA8  EF58  F006         	goto	u4170
  2693  000CAC                     u4171:
  2694  000CAC  EF68  F006         	goto	l3575
  2695  000CB0                     u4170:
  2696  000CB0                     
  2697                           ; BSR set to: 0
  2698  000CB0  0E66               	movlw	102
  2699  000CB2  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  2700  000CB4  A4D8               	btfss	status,2,c
  2701  000CB6  EF5F  F006         	goto	u4181
  2702  000CBA  EF61  F006         	goto	u4180
  2703  000CBE                     u4181:
  2704  000CBE  EF6A  F006         	goto	l3577
  2705  000CC2                     u4180:
  2706  000CC2                     
  2707                           ; BSR set to: 0
  2708  000CC2  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2709  000CC4  EF68  F006         	goto	u4190
  2710  000CC8  EF66  F006         	goto	u4191
  2711  000CCC                     u4191:
  2712  000CCC  EF6A  F006         	goto	l3577
  2713  000CD0                     u4190:
  2714  000CD0                     l3575:
  2715                           
  2716                           ; BSR set to: 0
  2717                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  2718  000CD0  4B74               	infsnz	efgtoa@m& (0+255),f,b
  2719  000CD2  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  2720  000CD4                     l3577:
  2721                           
  2722                           ; BSR set to: 0
  2723                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  2724  000CD4  0E66               	movlw	102
  2725  000CD6  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  2726  000CD8  A4D8               	btfss	status,2,c
  2727  000CDA  EF71  F006         	goto	u4201
  2728  000CDE  EF73  F006         	goto	u4200
  2729  000CE2                     u4201:
  2730  000CE2  EF93  F006         	goto	l3587
  2731  000CE6                     u4200:
  2732  000CE6                     
  2733                           ; BSR set to: 0
  2734                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  2735  000CE6  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  2736  000CE8  EF7A  F006         	goto	u4210
  2737  000CEC  EF78  F006         	goto	u4211
  2738  000CF0                     u4211:
  2739  000CF0  EF86  F006         	goto	l3583
  2740  000CF4                     u4210:
  2741  000CF4                     
  2742                           ; BSR set to: 0
  2743                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  2744  000CF4  0E00               	movlw	0
  2745  000CF6  6F94               	movwf	efgtoa@u& (0+255),b
  2746  000CF8  0E00               	movlw	0
  2747  000CFA  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2748  000CFC  0E80               	movlw	128
  2749  000CFE  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2750  000D00  0E3F               	movlw	63
  2751  000D02  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2752                           
  2753                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  2754  000D04  0E00               	movlw	0
  2755  000D06  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2756  000D08  0E00               	movlw	0
  2757  000D0A  6F90               	movwf	efgtoa@e& (0+255),b
  2758  000D0C                     l3583:
  2759                           
  2760                           ; BSR set to: 0
  2761                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  2762  000D0C  0E67               	movlw	103
  2763  000D0E  1981               	xorwf	efgtoa@mode& (0+255),w,b
  2764  000D10  B4D8               	btfsc	status,2,c
  2765  000D12  EF8D  F006         	goto	u4221
  2766  000D16  EF8F  F006         	goto	u4220
  2767  000D1A                     u4221:
  2768  000D1A  EF93  F006         	goto	l3587
  2769  000D1E                     u4220:
  2770  000D1E                     
  2771                           ; BSR set to: 0
  2772                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  2773  000D1E  5190               	movf	efgtoa@e& (0+255),w,b
  2774  000D20  2774               	addwf	efgtoa@m& (0+255),f,b
  2775  000D22  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  2776  000D24  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  2777  000D26                     l3587:
  2778                           
  2779                           ; BSR set to: 0
  2780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  2781  000D26  0E00               	movlw	0
  2782  000D28  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  2783  000D2A  0E00               	movlw	0
  2784  000D2C  6F8A               	movwf	efgtoa@i& (0+255),b
  2785  000D2E                     
  2786                           ; BSR set to: 0
  2787                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  2788  000D2E  C08C  F082         	movff	efgtoa@g,efgtoa@h
  2789  000D32  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  2790  000D36  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  2791  000D3A  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  2792  000D3E                     
  2793                           ; BSR set to: 0
  2794                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  2795  000D3E  C094  F060         	movff	efgtoa@u,efgtoa@ou
  2796  000D42  C095  F061         	movff	efgtoa@u+1,efgtoa@ou+1
  2797  000D46  C096  F062         	movff	efgtoa@u+2,efgtoa@ou+2
  2798  000D4A  C097  F063         	movff	efgtoa@u+3,efgtoa@ou+3
  2799                           
  2800                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  2801  000D4E  EF24  F007         	goto	l3601
  2802  000D52                     l3593:
  2803                           
  2804                           ; BSR set to: 0
  2805                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  2806  000D52  C082  F001         	movff	efgtoa@h,___fldiv@b
  2807  000D56  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  2808  000D5A  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  2809  000D5E  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  2810  000D62  C094  F005         	movff	efgtoa@u,___fldiv@a
  2811  000D66  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  2812  000D6A  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  2813  000D6E  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  2814  000D72  EC8C  F010         	call	___fldiv	;wreg free
  2815  000D76  C001  F01A         	movff	?___fldiv,floorf@x
  2816  000D7A  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  2817  000D7E  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  2818  000D82  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  2819  000D86  EC59  F012         	call	_floorf	;wreg free
  2820  000D8A  C01A  F086         	movff	?_floorf,efgtoa@l
  2821  000D8E  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  2822  000D92  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  2823  000D96  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  2824                           
  2825                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  2826  000D9A  C086  F001         	movff	efgtoa@l,___fltol@f1
  2827  000D9E  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  2828  000DA2  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  2829  000DA6  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  2830  000DAA  EC87  F015         	call	___fltol	;wreg free
  2831  000DAE  C001  F078         	movff	?___fltol,efgtoa@d
  2832  000DB2  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  2833  000DB6                     
  2834                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  2835  000DB6  C082  F02A         	movff	efgtoa@h,___flsub@b
  2836  000DBA  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  2837  000DBE  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  2838  000DC2  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  2839  000DC6  C094  F013         	movff	efgtoa@u,___flmul@a
  2840  000DCA  C095  F014         	movff	efgtoa@u+1,___flmul@a+1
  2841  000DCE  C096  F015         	movff	efgtoa@u+2,___flmul@a+2
  2842  000DD2  C097  F016         	movff	efgtoa@u+3,___flmul@a+3
  2843  000DD6  C086  F00F         	movff	efgtoa@l,___flmul@b
  2844  000DDA  C087  F010         	movff	efgtoa@l+1,___flmul@b+1
  2845  000DDE  C088  F011         	movff	efgtoa@l+2,___flmul@b+2
  2846  000DE2  C089  F012         	movff	efgtoa@l+3,___flmul@b+3
  2847  000DE6  EC77  F00E         	call	___flmul	;wreg free
  2848  000DEA  C00F  F02E         	movff	?___flmul,___flsub@a
  2849  000DEE  C010  F02F         	movff	?___flmul+1,___flsub@a+1
  2850  000DF2  C011  F030         	movff	?___flmul+2,___flsub@a+2
  2851  000DF6  C012  F031         	movff	?___flmul+3,___flsub@a+3
  2852  000DFA  EC86  F01B         	call	___flsub	;wreg free
  2853  000DFE  C02A  F082         	movff	?___flsub,efgtoa@h
  2854  000E02  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  2855  000E06  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  2856  000E0A  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  2857  000E0E                     
  2858                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  2859  000E0E  C094  F001         	movff	efgtoa@u,___fldiv@b
  2860  000E12  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  2861  000E16  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  2862  000E1A  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  2863  000E1E  0E00               	movlw	0
  2864  000E20  6E05               	movwf	___fldiv@a^0,c
  2865  000E22  0E00               	movlw	0
  2866  000E24  6E06               	movwf	(___fldiv@a+1)^0,c
  2867  000E26  0E20               	movlw	32
  2868  000E28  6E07               	movwf	(___fldiv@a+2)^0,c
  2869  000E2A  0E41               	movlw	65
  2870  000E2C  6E08               	movwf	(___fldiv@a+3)^0,c
  2871  000E2E  EC8C  F010         	call	___fldiv	;wreg free
  2872  000E32  C001  F094         	movff	?___fldiv,efgtoa@u
  2873  000E36  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  2874  000E3A  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  2875  000E3E  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  2876  000E42                     
  2877                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  2878  000E42  0100               	movlb	0	; () banked
  2879  000E44  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  2880  000E46  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  2881  000E48                     l3601:
  2882                           
  2883                           ; BSR set to: 0
  2884                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  2885  000E48  5174               	movf	efgtoa@m& (0+255),w,b
  2886  000E4A  5D8A               	subwf	efgtoa@i& (0+255),w,b
  2887  000E4C  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  2888  000E4E  0A80               	xorlw	128
  2889  000E50  6E3B               	movwf	??_efgtoa^0,c
  2890  000E52  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  2891  000E54  0A80               	xorlw	128
  2892  000E56  583B               	subwfb	??_efgtoa^0,w,c
  2893  000E58  A0D8               	btfss	status,0,c
  2894  000E5A  EF31  F007         	goto	u4231
  2895  000E5E  EF33  F007         	goto	u4230
  2896  000E62                     u4231:
  2897  000E62  EFA9  F006         	goto	l3593
  2898  000E66                     u4230:
  2899  000E66                     
  2900                           ; BSR set to: 0
  2901                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  2902  000E66  C094  F00F         	movff	efgtoa@u,___flmul@b
  2903  000E6A  C095  F010         	movff	efgtoa@u+1,___flmul@b+1
  2904  000E6E  C096  F011         	movff	efgtoa@u+2,___flmul@b+2
  2905  000E72  C097  F012         	movff	efgtoa@u+3,___flmul@b+3
  2906  000E76  0E00               	movlw	0
  2907  000E78  6E13               	movwf	___flmul@a^0,c
  2908  000E7A  0E00               	movlw	0
  2909  000E7C  6E14               	movwf	(___flmul@a+1)^0,c
  2910  000E7E  0EA0               	movlw	160
  2911  000E80  6E15               	movwf	(___flmul@a+2)^0,c
  2912  000E82  0E40               	movlw	64
  2913  000E84  6E16               	movwf	(___flmul@a+3)^0,c
  2914  000E86  EC77  F00E         	call	___flmul	;wreg free
  2915  000E8A  C00F  F086         	movff	?___flmul,efgtoa@l
  2916  000E8E  C010  F087         	movff	?___flmul+1,efgtoa@l+1
  2917  000E92  C011  F088         	movff	?___flmul+2,efgtoa@l+2
  2918  000E96  C012  F089         	movff	?___flmul+3,efgtoa@l+3
  2919  000E9A                     
  2920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  2921  000E9A  C082  F028         	movff	efgtoa@h,___flge@ff1
  2922  000E9E  C083  F029         	movff	efgtoa@h+1,___flge@ff1+1
  2923  000EA2  C084  F02A         	movff	efgtoa@h+2,___flge@ff1+2
  2924  000EA6  C085  F02B         	movff	efgtoa@h+3,___flge@ff1+3
  2925  000EAA  C086  F02C         	movff	efgtoa@l,___flge@ff2
  2926  000EAE  C087  F02D         	movff	efgtoa@l+1,___flge@ff2+1
  2927  000EB2  C088  F02E         	movff	efgtoa@l+2,___flge@ff2+2
  2928  000EB6  C089  F02F         	movff	efgtoa@l+3,___flge@ff2+3
  2929  000EBA  EC0A  F016         	call	___flge	;wreg free
  2930  000EBE  B0D8               	btfsc	status,0,c
  2931  000EC0  EF64  F007         	goto	u4241
  2932  000EC4  EF66  F007         	goto	u4240
  2933  000EC8                     u4241:
  2934  000EC8  EF71  F007         	goto	l3609
  2935  000ECC                     u4240:
  2936  000ECC                     
  2937                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  2938  000ECC  0E00               	movlw	0
  2939  000ECE  0100               	movlb	0	; () banked
  2940  000ED0  6F86               	movwf	efgtoa@l& (0+255),b
  2941  000ED2  0E00               	movlw	0
  2942  000ED4  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  2943  000ED6  0E00               	movlw	0
  2944  000ED8  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  2945  000EDA  0E00               	movlw	0
  2946  000EDC  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  2947                           
  2948                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  2949  000EDE  EF9A  F007         	goto	l3615
  2950  000EE2                     l3609:
  2951                           
  2952                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  2953  000EE2  C082  F001         	movff	efgtoa@h,___fleq@ff1
  2954  000EE6  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  2955  000EEA  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  2956  000EEE  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  2957  000EF2  C086  F005         	movff	efgtoa@l,___fleq@ff2
  2958  000EF6  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  2959  000EFA  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  2960  000EFE  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  2961  000F02  EC52  F019         	call	___fleq	;wreg free
  2962  000F06  A0D8               	btfss	status,0,c
  2963  000F08  EF88  F007         	goto	u4251
  2964  000F0C  EF8A  F007         	goto	u4250
  2965  000F10                     u4251:
  2966  000F10  EF9A  F007         	goto	l3615
  2967  000F14                     u4250:
  2968  000F14  0100               	movlb	0	; () banked
  2969  000F16  B178               	btfsc	efgtoa@d& (0+255),0,b
  2970  000F18  EF90  F007         	goto	u4261
  2971  000F1C  EF92  F007         	goto	u4260
  2972  000F20                     u4261:
  2973  000F20  EF9A  F007         	goto	l3615
  2974  000F24                     u4260:
  2975  000F24                     
  2976                           ; BSR set to: 0
  2977                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  2978  000F24  0E00               	movlw	0
  2979  000F26  6F86               	movwf	efgtoa@l& (0+255),b
  2980  000F28  0E00               	movlw	0
  2981  000F2A  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  2982  000F2C  0E00               	movlw	0
  2983  000F2E  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  2984  000F30  0E00               	movlw	0
  2985  000F32  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  2986  000F34                     l3615:
  2987                           
  2988                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  2989  000F34  C08C  F01A         	movff	efgtoa@g,___fladd@b
  2990  000F38  C08D  F01B         	movff	efgtoa@g+1,___fladd@b+1
  2991  000F3C  C08E  F01C         	movff	efgtoa@g+2,___fladd@b+2
  2992  000F40  C08F  F01D         	movff	efgtoa@g+3,___fladd@b+3
  2993  000F44  C086  F01E         	movff	efgtoa@l,___fladd@a
  2994  000F48  C087  F01F         	movff	efgtoa@l+1,___fladd@a+1
  2995  000F4C  C088  F020         	movff	efgtoa@l+2,___fladd@a+2
  2996  000F50  C089  F021         	movff	efgtoa@l+3,___fladd@a+3
  2997  000F54  ECE7  F009         	call	___fladd	;wreg free
  2998  000F58  C01A  F082         	movff	?___fladd,efgtoa@h
  2999  000F5C  C01B  F083         	movff	?___fladd+1,efgtoa@h+1
  3000  000F60  C01C  F084         	movff	?___fladd+2,efgtoa@h+2
  3001  000F64  C01D  F085         	movff	?___fladd+3,efgtoa@h+3
  3002  000F68                     
  3003                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  3004  000F68  C060  F094         	movff	efgtoa@ou,efgtoa@u
  3005  000F6C  C061  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  3006  000F70  C062  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  3007  000F74  C063  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  3008  000F78                     
  3009                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  3010  000F78  0E65               	movlw	101
  3011  000F7A  0100               	movlb	0	; () banked
  3012  000F7C  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3013  000F7E  B4D8               	btfsc	status,2,c
  3014  000F80  EFC4  F007         	goto	u4271
  3015  000F84  EFC6  F007         	goto	u4270
  3016  000F88                     u4271:
  3017  000F88  EFCC  F007         	goto	l3623
  3018  000F8C                     u4270:
  3019  000F8C                     
  3020                           ; BSR set to: 0
  3021  000F8C  C090  F076         	movff	efgtoa@e,efgtoa@ne
  3022  000F90  C091  F077         	movff	efgtoa@e+1,efgtoa@ne+1
  3023  000F94  EFD0  F007         	goto	l270
  3024  000F98                     l3623:
  3025                           
  3026                           ; BSR set to: 0
  3027  000F98  0E00               	movlw	0
  3028  000F9A  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  3029  000F9C  0E00               	movlw	0
  3030  000F9E  6F76               	movwf	efgtoa@ne& (0+255),b
  3031  000FA0                     l270:
  3032                           
  3033                           ; BSR set to: 0
  3034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  3035  000FA0  0E00               	movlw	0
  3036  000FA2  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  3037  000FA4  0E00               	movlw	0
  3038  000FA6  6F72               	movwf	efgtoa@pp& (0+255),b
  3039                           
  3040                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  3041  000FA8  0E00               	movlw	0
  3042  000FAA  6F71               	movwf	(efgtoa@t+1)& (0+255),b
  3043  000FAC  0E00               	movlw	0
  3044  000FAE  6F70               	movwf	efgtoa@t& (0+255),b
  3045                           
  3046                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  3047  000FB0  0E00               	movlw	0
  3048  000FB2  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3049  000FB4  0E00               	movlw	0
  3050  000FB6  6F8A               	movwf	efgtoa@i& (0+255),b
  3051                           
  3052                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  3053  000FB8  EFCC  F008         	goto	l3673
  3054  000FBC                     l3625:
  3055                           
  3056                           ; BSR set to: 0
  3057                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  3058  000FBC  C082  F001         	movff	efgtoa@h,___fldiv@b
  3059  000FC0  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3060  000FC4  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3061  000FC8  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3062  000FCC  C094  F005         	movff	efgtoa@u,___fldiv@a
  3063  000FD0  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3064  000FD4  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3065  000FD8  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3066  000FDC  EC8C  F010         	call	___fldiv	;wreg free
  3067  000FE0  C001  F01A         	movff	?___fldiv,floorf@x
  3068  000FE4  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3069  000FE8  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3070  000FEC  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3071  000FF0  EC59  F012         	call	_floorf	;wreg free
  3072  000FF4  C01A  F086         	movff	?_floorf,efgtoa@l
  3073  000FF8  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  3074  000FFC  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  3075  001000  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  3076                           
  3077                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  3078  001004  C086  F001         	movff	efgtoa@l,___fltol@f1
  3079  001008  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3080  00100C  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3081  001010  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3082  001014  EC87  F015         	call	___fltol	;wreg free
  3083  001018  C001  F078         	movff	?___fltol,efgtoa@d
  3084  00101C  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  3085  001020                     
  3086                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3087  001020  B85E               	btfsc	_flags^0,4,c
  3088  001022  EF15  F008         	goto	u4281
  3089  001026  EF17  F008         	goto	u4280
  3090  00102A                     u4281:
  3091  00102A  EF35  F008         	goto	l3637
  3092  00102E                     u4280:
  3093  00102E  0100               	movlb	0	; () banked
  3094  001030  5178               	movf	efgtoa@d& (0+255),w,b
  3095  001032  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3096  001034  A4D8               	btfss	status,2,c
  3097  001036  EF1F  F008         	goto	u4291
  3098  00103A  EF21  F008         	goto	u4290
  3099  00103E                     u4291:
  3100  00103E  EF35  F008         	goto	l3637
  3101  001042                     u4290:
  3102  001042                     
  3103                           ; BSR set to: 0
  3104  001042  0E67               	movlw	103
  3105  001044  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3106  001046  A4D8               	btfss	status,2,c
  3107  001048  EF28  F008         	goto	u4301
  3108  00104C  EF2A  F008         	goto	u4300
  3109  001050                     u4301:
  3110  001050  EF35  F008         	goto	l3637
  3111  001054                     u4300:
  3112  001054                     
  3113                           ; BSR set to: 0
  3114  001054  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3115  001056  EF31  F008         	goto	u4310
  3116  00105A  EF2F  F008         	goto	u4311
  3117  00105E                     u4311:
  3118  00105E  EF35  F008         	goto	l3637
  3119  001062                     u4310:
  3120  001062                     
  3121                           ; BSR set to: 0
  3122                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  3123  001062  4B70               	infsnz	efgtoa@t& (0+255),f,b
  3124  001064  2B71               	incf	(efgtoa@t+1)& (0+255),f,b
  3125                           
  3126                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  3127  001066  EF80  F008         	goto	l3665
  3128  00106A                     l3637:
  3129                           
  3130                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  3131  00106A  0100               	movlb	0	; () banked
  3132  00106C  5172               	movf	efgtoa@pp& (0+255),w,b
  3133  00106E  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3134  001070  A4D8               	btfss	status,2,c
  3135  001072  EF3D  F008         	goto	u4321
  3136  001076  EF3F  F008         	goto	u4320
  3137  00107A                     u4321:
  3138  00107A  EF69  F008         	goto	l3657
  3139  00107E                     u4320:
  3140  00107E                     
  3141                           ; BSR set to: 0
  3142  00107E  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3143  001080  EF46  F008         	goto	u4330
  3144  001084  EF44  F008         	goto	u4331
  3145  001088                     u4331:
  3146  001088  EF69  F008         	goto	l3657
  3147  00108C                     u4330:
  3148  00108C                     
  3149                           ; BSR set to: 0
  3150                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  3151  00108C  0E00               	movlw	low _dbuf
  3152  00108E  2592               	addwf	efgtoa@n& (0+255),w,b
  3153  001090  6ED9               	movwf	fsr2l,c
  3154  001092  0E01               	movlw	high _dbuf
  3155  001094  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3156  001096  6EDA               	movwf	fsr2h,c
  3157  001098  0E2E               	movlw	46
  3158  00109A  6EDF               	movwf	indf2,c
  3159  00109C                     
  3160                           ; BSR set to: 0
  3161  00109C  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3162  00109E  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3163  0010A0                     
  3164                           ; BSR set to: 0
  3165                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  3166  0010A0  077F               	decf	efgtoa@w& (0+255),f,b
  3167  0010A2  A0D8               	btfss	status,0,c
  3168  0010A4  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3169  0010A6                     
  3170                           ; BSR set to: 0
  3171                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  3172  0010A6  0E00               	movlw	0
  3173  0010A8  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  3174  0010AA  0E01               	movlw	1
  3175  0010AC  6F72               	movwf	efgtoa@pp& (0+255),b
  3176  0010AE  EF69  F008         	goto	l3657
  3177  0010B2                     l3649:
  3178                           
  3179                           ; BSR set to: 0
  3180                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  3181  0010B2  0E00               	movlw	low _dbuf
  3182  0010B4  2592               	addwf	efgtoa@n& (0+255),w,b
  3183  0010B6  6ED9               	movwf	fsr2l,c
  3184  0010B8  0E01               	movlw	high _dbuf
  3185  0010BA  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3186  0010BC  6EDA               	movwf	fsr2h,c
  3187  0010BE  0E30               	movlw	48
  3188  0010C0  6EDF               	movwf	indf2,c
  3189  0010C2                     
  3190                           ; BSR set to: 0
  3191  0010C2  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3192  0010C4  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3193  0010C6                     
  3194                           ; BSR set to: 0
  3195                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  3196  0010C6  077F               	decf	efgtoa@w& (0+255),f,b
  3197  0010C8  A0D8               	btfss	status,0,c
  3198  0010CA  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3199  0010CC                     
  3200                           ; BSR set to: 0
  3201                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  3202  0010CC  0770               	decf	efgtoa@t& (0+255),f,b
  3203  0010CE  A0D8               	btfss	status,0,c
  3204  0010D0  0771               	decf	(efgtoa@t+1)& (0+255),f,b
  3205  0010D2                     l3657:
  3206                           
  3207                           ; BSR set to: 0
  3208                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  3209  0010D2  5170               	movf	efgtoa@t& (0+255),w,b
  3210  0010D4  1171               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3211  0010D6  A4D8               	btfss	status,2,c
  3212  0010D8  EF70  F008         	goto	u4341
  3213  0010DC  EF72  F008         	goto	u4340
  3214  0010E0                     u4341:
  3215  0010E0  EF59  F008         	goto	l3649
  3216  0010E4                     u4340:
  3217  0010E4                     
  3218                           ; BSR set to: 0
  3219                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  3220  0010E4  0E00               	movlw	low _dbuf
  3221  0010E6  2592               	addwf	efgtoa@n& (0+255),w,b
  3222  0010E8  6ED9               	movwf	fsr2l,c
  3223  0010EA  0E01               	movlw	high _dbuf
  3224  0010EC  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3225  0010EE  6EDA               	movwf	fsr2h,c
  3226  0010F0  5178               	movf	efgtoa@d& (0+255),w,b
  3227  0010F2  0F30               	addlw	48
  3228  0010F4  6EDF               	movwf	indf2,c
  3229  0010F6                     
  3230                           ; BSR set to: 0
  3231  0010F6  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3232  0010F8  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3233  0010FA                     
  3234                           ; BSR set to: 0
  3235                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  3236  0010FA  077F               	decf	efgtoa@w& (0+255),f,b
  3237  0010FC  A0D8               	btfss	status,0,c
  3238  0010FE  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3239  001100                     l3665:
  3240                           
  3241                           ; BSR set to: 0
  3242                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  3243  001100  C082  F02A         	movff	efgtoa@h,___flsub@b
  3244  001104  C083  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3245  001108  C084  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3246  00110C  C085  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3247  001110  C094  F013         	movff	efgtoa@u,___flmul@a
  3248  001114  C095  F014         	movff	efgtoa@u+1,___flmul@a+1
  3249  001118  C096  F015         	movff	efgtoa@u+2,___flmul@a+2
  3250  00111C  C097  F016         	movff	efgtoa@u+3,___flmul@a+3
  3251  001120  C086  F00F         	movff	efgtoa@l,___flmul@b
  3252  001124  C087  F010         	movff	efgtoa@l+1,___flmul@b+1
  3253  001128  C088  F011         	movff	efgtoa@l+2,___flmul@b+2
  3254  00112C  C089  F012         	movff	efgtoa@l+3,___flmul@b+3
  3255  001130  EC77  F00E         	call	___flmul	;wreg free
  3256  001134  C00F  F02E         	movff	?___flmul,___flsub@a
  3257  001138  C010  F02F         	movff	?___flmul+1,___flsub@a+1
  3258  00113C  C011  F030         	movff	?___flmul+2,___flsub@a+2
  3259  001140  C012  F031         	movff	?___flmul+3,___flsub@a+3
  3260  001144  EC86  F01B         	call	___flsub	;wreg free
  3261  001148  C02A  F082         	movff	?___flsub,efgtoa@h
  3262  00114C  C02B  F083         	movff	?___flsub+1,efgtoa@h+1
  3263  001150  C02C  F084         	movff	?___flsub+2,efgtoa@h+2
  3264  001154  C02D  F085         	movff	?___flsub+3,efgtoa@h+3
  3265  001158                     
  3266                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  3267  001158  C094  F001         	movff	efgtoa@u,___fldiv@b
  3268  00115C  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3269  001160  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3270  001164  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3271  001168  0E00               	movlw	0
  3272  00116A  6E05               	movwf	___fldiv@a^0,c
  3273  00116C  0E00               	movlw	0
  3274  00116E  6E06               	movwf	(___fldiv@a+1)^0,c
  3275  001170  0E20               	movlw	32
  3276  001172  6E07               	movwf	(___fldiv@a+2)^0,c
  3277  001174  0E41               	movlw	65
  3278  001176  6E08               	movwf	(___fldiv@a+3)^0,c
  3279  001178  EC8C  F010         	call	___fldiv	;wreg free
  3280  00117C  C001  F094         	movff	?___fldiv,efgtoa@u
  3281  001180  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  3282  001184  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  3283  001188  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  3284  00118C                     
  3285                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  3286  00118C  0100               	movlb	0	; () banked
  3287  00118E  0776               	decf	efgtoa@ne& (0+255),f,b
  3288  001190  A0D8               	btfss	status,0,c
  3289  001192  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  3290  001194                     
  3291                           ; BSR set to: 0
  3292                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  3293  001194  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3294  001196  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3295  001198                     l3673:
  3296                           
  3297                           ; BSR set to: 0
  3298                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  3299  001198  5174               	movf	efgtoa@m& (0+255),w,b
  3300  00119A  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3301  00119C  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3302  00119E  0A80               	xorlw	128
  3303  0011A0  6E3B               	movwf	??_efgtoa^0,c
  3304  0011A2  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  3305  0011A4  0A80               	xorlw	128
  3306  0011A6  583B               	subwfb	??_efgtoa^0,w,c
  3307  0011A8  B0D8               	btfsc	status,0,c
  3308  0011AA  EFD9  F008         	goto	u4351
  3309  0011AE  EFDB  F008         	goto	u4350
  3310  0011B2                     u4351:
  3311  0011B2  EFE9  F008         	goto	l3677
  3312  0011B6                     u4350:
  3313  0011B6                     
  3314                           ; BSR set to: 0
  3315  0011B6  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3316  0011B8  EFE7  F008         	goto	u4361
  3317  0011BC  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  3318  0011BE  E109               	bnz	u4360
  3319  0011C0  0E4B               	movlw	75
  3320  0011C2  5D92               	subwf	efgtoa@n& (0+255),w,b
  3321  0011C4  A0D8               	btfss	status,0,c
  3322  0011C6  EFE7  F008         	goto	u4361
  3323  0011CA  EFE9  F008         	goto	u4360
  3324  0011CE                     u4361:
  3325  0011CE  EFDE  F007         	goto	l3625
  3326  0011D2                     u4360:
  3327  0011D2                     l3677:
  3328                           
  3329                           ; BSR set to: 0
  3330                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  3331  0011D2  5172               	movf	efgtoa@pp& (0+255),w,b
  3332  0011D4  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3333  0011D6  A4D8               	btfss	status,2,c
  3334  0011D8  EFF0  F008         	goto	u4371
  3335  0011DC  EFF2  F008         	goto	u4370
  3336  0011E0                     u4371:
  3337  0011E0  EF03  F009         	goto	l3685
  3338  0011E4                     u4370:
  3339  0011E4                     
  3340                           ; BSR set to: 0
  3341  0011E4  A85E               	btfss	_flags^0,4,c
  3342  0011E6  EFF7  F008         	goto	u4381
  3343  0011EA  EFF9  F008         	goto	u4380
  3344  0011EE                     u4381:
  3345  0011EE  EF03  F009         	goto	l3685
  3346  0011F2                     u4380:
  3347  0011F2                     
  3348                           ; BSR set to: 0
  3349                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  3350  0011F2  0E00               	movlw	low _dbuf
  3351  0011F4  2592               	addwf	efgtoa@n& (0+255),w,b
  3352  0011F6  6ED9               	movwf	fsr2l,c
  3353  0011F8  0E01               	movlw	high _dbuf
  3354  0011FA  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3355  0011FC  6EDA               	movwf	fsr2h,c
  3356  0011FE  0E2E               	movlw	46
  3357  001200  6EDF               	movwf	indf2,c
  3358  001202                     
  3359                           ; BSR set to: 0
  3360  001202  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3361  001204  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3362  001206                     l3685:
  3363                           
  3364                           ; BSR set to: 0
  3365                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  3366  001206  0E00               	movlw	low _dbuf
  3367  001208  2592               	addwf	efgtoa@n& (0+255),w,b
  3368  00120A  6ED9               	movwf	fsr2l,c
  3369  00120C  0E01               	movlw	high _dbuf
  3370  00120E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3371  001210  6EDA               	movwf	fsr2h,c
  3372  001212  0E00               	movlw	0
  3373  001214  6EDF               	movwf	indf2,c
  3374  001216                     
  3375                           ; BSR set to: 0
  3376                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  3377  001216  0E65               	movlw	101
  3378  001218  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3379  00121A  A4D8               	btfss	status,2,c
  3380  00121C  EF12  F009         	goto	u4391
  3381  001220  EF14  F009         	goto	u4390
  3382  001224                     u4391:
  3383  001224  EFC1  F004         	goto	l3497
  3384  001228                     u4390:
  3385  001228                     
  3386                           ; BSR set to: 0
  3387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  3388  001228  0E00               	movlw	0
  3389  00122A  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3390  00122C  0E4F               	movlw	79
  3391  00122E  6F8A               	movwf	efgtoa@i& (0+255),b
  3392  001230                     
  3393                           ; BSR set to: 0
  3394                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  3395  001230  0E00               	movlw	low _dbuf
  3396  001232  258A               	addwf	efgtoa@i& (0+255),w,b
  3397  001234  6ED9               	movwf	fsr2l,c
  3398  001236  0E01               	movlw	high _dbuf
  3399  001238  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3400  00123A  6EDA               	movwf	fsr2h,c
  3401  00123C  0E00               	movlw	0
  3402  00123E  6EDF               	movwf	indf2,c
  3403  001240                     
  3404                           ; BSR set to: 0
  3405                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  3406  001240  0E00               	movlw	0
  3407  001242  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3408  001244  0E00               	movlw	0
  3409  001246  6F7A               	movwf	efgtoa@sign& (0+255),b
  3410  001248                     
  3411                           ; BSR set to: 0
  3412                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  3413  001248  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3414  00124A  EF2B  F009         	goto	u4400
  3415  00124E  EF29  F009         	goto	u4401
  3416  001252                     u4401:
  3417  001252  EF33  F009         	goto	l3701
  3418  001256                     u4400:
  3419  001256                     
  3420                           ; BSR set to: 0
  3421                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  3422  001256  0E00               	movlw	0
  3423  001258  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3424  00125A  0E01               	movlw	1
  3425  00125C  6F7A               	movwf	efgtoa@sign& (0+255),b
  3426  00125E                     
  3427                           ; BSR set to: 0
  3428                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  3429  00125E  6D90               	negf	efgtoa@e& (0+255),b
  3430  001260  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  3431  001262  B0D8               	btfsc	status,0,c
  3432  001264  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3433  001266                     l3701:
  3434                           
  3435                           ; BSR set to: 0
  3436                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  3437  001266  0E00               	movlw	0
  3438  001268  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3439  00126A  0E02               	movlw	2
  3440  00126C  6F7C               	movwf	efgtoa@p& (0+255),b
  3441                           
  3442                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  3443  00126E  EF64  F009         	goto	l3713
  3444  001272                     l3703:
  3445                           
  3446                           ; BSR set to: 0
  3447                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  3448  001272  078A               	decf	efgtoa@i& (0+255),f,b
  3449  001274  A0D8               	btfss	status,0,c
  3450  001276  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3451  001278                     
  3452                           ; BSR set to: 0
  3453                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  3454  001278  0E00               	movlw	low _dbuf
  3455  00127A  258A               	addwf	efgtoa@i& (0+255),w,b
  3456  00127C  6ED9               	movwf	fsr2l,c
  3457  00127E  0E01               	movlw	high _dbuf
  3458  001280  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3459  001282  6EDA               	movwf	fsr2h,c
  3460  001284  C090  F001         	movff	efgtoa@e,___awmod@dividend
  3461  001288  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  3462  00128C  0E00               	movlw	0
  3463  00128E  6E04               	movwf	(___awmod@divisor+1)^0,c
  3464  001290  0E0A               	movlw	10
  3465  001292  6E03               	movwf	___awmod@divisor^0,c
  3466  001294  ECFA  F018         	call	___awmod	;wreg free
  3467  001298  5001               	movf	?___awmod^0,w,c
  3468  00129A  0F30               	addlw	48
  3469  00129C  6EDF               	movwf	indf2,c
  3470  00129E                     
  3471                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  3472  00129E  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  3473  0012A2  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  3474  0012A6  0E00               	movlw	0
  3475  0012A8  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3476  0012AA  0E0A               	movlw	10
  3477  0012AC  6E03               	movwf	___awdiv@divisor^0,c
  3478  0012AE  ECDB  F017         	call	___awdiv	;wreg free
  3479  0012B2  C001  F090         	movff	?___awdiv,efgtoa@e
  3480  0012B6  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  3481  0012BA                     
  3482                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  3483  0012BA  0100               	movlb	0	; () banked
  3484  0012BC  077C               	decf	efgtoa@p& (0+255),f,b
  3485  0012BE  A0D8               	btfss	status,0,c
  3486  0012C0  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  3487  0012C2                     
  3488                           ; BSR set to: 0
  3489                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  3490  0012C2  077F               	decf	efgtoa@w& (0+255),f,b
  3491  0012C4  A0D8               	btfss	status,0,c
  3492  0012C6  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3493  0012C8                     l3713:
  3494                           
  3495                           ; BSR set to: 0
  3496                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  3497  0012C8  5190               	movf	efgtoa@e& (0+255),w,b
  3498  0012CA  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3499  0012CC  A4D8               	btfss	status,2,c
  3500  0012CE  EF6B  F009         	goto	u4411
  3501  0012D2  EF6D  F009         	goto	u4410
  3502  0012D6                     u4411:
  3503  0012D6  EF39  F009         	goto	l3703
  3504  0012DA                     u4410:
  3505  0012DA                     
  3506                           ; BSR set to: 0
  3507  0012DA  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3508  0012DC  EF7A  F009         	goto	u4420
  3509  0012E0  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  3510  0012E2  E106               	bnz	u4421
  3511  0012E4  057C               	decf	efgtoa@p& (0+255),w,b
  3512  0012E6  B0D8               	btfsc	status,0,c
  3513  0012E8  EF78  F009         	goto	u4421
  3514  0012EC  EF7A  F009         	goto	u4420
  3515  0012F0                     u4421:
  3516  0012F0  EF39  F009         	goto	l3703
  3517  0012F4                     u4420:
  3518  0012F4                     
  3519                           ; BSR set to: 0
  3520                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  3521  0012F4  078A               	decf	efgtoa@i& (0+255),f,b
  3522  0012F6  A0D8               	btfss	status,0,c
  3523  0012F8  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3524  0012FA                     
  3525                           ; BSR set to: 0
  3526                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  3527  0012FA  517A               	movf	efgtoa@sign& (0+255),w,b
  3528  0012FC  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3529  0012FE  A4D8               	btfss	status,2,c
  3530  001300  EF84  F009         	goto	u4431
  3531  001304  EF86  F009         	goto	u4430
  3532  001308                     u4431:
  3533  001308  EF8C  F009         	goto	l3723
  3534  00130C                     u4430:
  3535  00130C                     
  3536                           ; BSR set to: 0
  3537  00130C  0E00               	movlw	0
  3538  00130E  6F6B               	movwf	(_efgtoa$332+1)& (0+255),b
  3539  001310  0E2B               	movlw	43
  3540  001312  6F6A               	movwf	_efgtoa$332& (0+255),b
  3541  001314  EF90  F009         	goto	l3725
  3542  001318                     l3723:
  3543                           
  3544                           ; BSR set to: 0
  3545  001318  0E00               	movlw	0
  3546  00131A  6F6B               	movwf	(_efgtoa$332+1)& (0+255),b
  3547  00131C  0E2D               	movlw	45
  3548  00131E  6F6A               	movwf	_efgtoa$332& (0+255),b
  3549  001320                     l3725:
  3550                           
  3551                           ; BSR set to: 0
  3552  001320  0E00               	movlw	low _dbuf
  3553  001322  258A               	addwf	efgtoa@i& (0+255),w,b
  3554  001324  6ED9               	movwf	fsr2l,c
  3555  001326  0E01               	movlw	high _dbuf
  3556  001328  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3557  00132A  6EDA               	movwf	fsr2h,c
  3558  00132C  C06A  FFDF         	movff	_efgtoa$332,indf2
  3559  001330                     
  3560                           ; BSR set to: 0
  3561                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  3562  001330  077F               	decf	efgtoa@w& (0+255),f,b
  3563  001332  A0D8               	btfss	status,0,c
  3564  001334  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3565  001336                     
  3566                           ; BSR set to: 0
  3567                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  3568  001336  078A               	decf	efgtoa@i& (0+255),f,b
  3569  001338  A0D8               	btfss	status,0,c
  3570  00133A  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  3571  00133C                     
  3572                           ; BSR set to: 0
  3573  00133C  0EBF               	movlw	191
  3574  00133E  6E3B               	movwf	??_efgtoa^0,c
  3575  001340  0EFF               	movlw	255
  3576  001342  6E3C               	movwf	(??_efgtoa+1)^0,c
  3577  001344  503A               	movf	efgtoa@c^0,w,c
  3578  001346  6E3D               	movwf	(??_efgtoa+2)^0,c
  3579  001348  6A3E               	clrf	(??_efgtoa+3)^0,c
  3580  00134A  503B               	movf	??_efgtoa^0,w,c
  3581  00134C  263D               	addwf	(??_efgtoa+2)^0,f,c
  3582  00134E  503C               	movf	(??_efgtoa+1)^0,w,c
  3583  001350  223E               	addwfc	(??_efgtoa+3)^0,f,c
  3584  001352  503E               	movf	(??_efgtoa+3)^0,w,c
  3585  001354  E10A               	bnz	u4440
  3586  001356  0E1A               	movlw	26
  3587  001358  5C3D               	subwf	(??_efgtoa+2)^0,w,c
  3588  00135A  A0D8               	btfss	status,0,c
  3589  00135C  EFB2  F009         	goto	u4441
  3590  001360  EFB5  F009         	goto	u4440
  3591  001364                     u4441:
  3592  001364  0E01               	movlw	1
  3593  001366  EFB6  F009         	goto	u4450
  3594  00136A                     u4440:
  3595  00136A  0E00               	movlw	0
  3596  00136C                     u4450:
  3597  00136C  6F6E               	movwf	_efgtoa$334& (0+255),b
  3598  00136E  6B6F               	clrf	(_efgtoa$334+1)& (0+255),b
  3599  001370                     
  3600                           ; BSR set to: 0
  3601  001370  516E               	movf	_efgtoa$334& (0+255),w,b
  3602  001372  116F               	iorwf	(_efgtoa$334+1)& (0+255),w,b
  3603  001374  A4D8               	btfss	status,2,c
  3604  001376  EFBF  F009         	goto	u4461
  3605  00137A  EFC1  F009         	goto	u4460
  3606  00137E                     u4461:
  3607  00137E  EFC7  F009         	goto	l3739
  3608  001382                     u4460:
  3609  001382                     
  3610                           ; BSR set to: 0
  3611  001382  0E00               	movlw	0
  3612  001384  6F6D               	movwf	(_efgtoa$333+1)& (0+255),b
  3613  001386  0E65               	movlw	101
  3614  001388  6F6C               	movwf	_efgtoa$333& (0+255),b
  3615  00138A  EFCB  F009         	goto	l3741
  3616  00138E                     l3739:
  3617                           
  3618                           ; BSR set to: 0
  3619  00138E  0E00               	movlw	0
  3620  001390  6F6D               	movwf	(_efgtoa$333+1)& (0+255),b
  3621  001392  0E45               	movlw	69
  3622  001394  6F6C               	movwf	_efgtoa$333& (0+255),b
  3623  001396                     l3741:
  3624                           
  3625                           ; BSR set to: 0
  3626  001396  0E00               	movlw	low _dbuf
  3627  001398  258A               	addwf	efgtoa@i& (0+255),w,b
  3628  00139A  6ED9               	movwf	fsr2l,c
  3629  00139C  0E01               	movlw	high _dbuf
  3630  00139E  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3631  0013A0  6EDA               	movwf	fsr2h,c
  3632  0013A2  C06C  FFDF         	movff	_efgtoa$333,indf2
  3633  0013A6                     
  3634                           ; BSR set to: 0
  3635                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  3636  0013A6  077F               	decf	efgtoa@w& (0+255),f,b
  3637  0013A8  A0D8               	btfss	status,0,c
  3638  0013AA  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3639  0013AC                     
  3640                           ; BSR set to: 0
  3641                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  3642  0013AC  0E00               	movlw	low _dbuf
  3643  0013AE  2592               	addwf	efgtoa@n& (0+255),w,b
  3644  0013B0  6E01               	movwf	strcpy@dest^0,c
  3645  0013B2  0E01               	movlw	high _dbuf
  3646  0013B4  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3647  0013B6  6E02               	movwf	(strcpy@dest+1)^0,c
  3648  0013B8  0E00               	movlw	low _dbuf
  3649  0013BA  258A               	addwf	efgtoa@i& (0+255),w,b
  3650  0013BC  6E03               	movwf	strcpy@src^0,c
  3651  0013BE  0E01               	movlw	high _dbuf
  3652  0013C0  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3653  0013C2  6E04               	movwf	(strcpy@src+1)^0,c
  3654  0013C4  EC38  F01A         	call	_strcpy	;wreg free
  3655  0013C8  EFC1  F004         	goto	l3497
  3656  0013CC                     l226:
  3657  0013CC  0012               	return		;funcret
  3658  0013CE                     __end_of_efgtoa:
  3659                           	opt callstack 0
  3660                           
  3661 ;; *************** function _tolower *****************
  3662 ;; Defined at:
  3663 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;  c               2    6[COMRAM] int 
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;		None
  3668 ;; Return value:  Size  Location     Type
  3669 ;;                  2    6[COMRAM] int 
  3670 ;; Registers used:
  3671 ;;		wreg, status,2, status,0
  3672 ;; Tracked objects:
  3673 ;;		On entry : 0/0
  3674 ;;		On exit  : 0/0
  3675 ;;		Unchanged: 0/0
  3676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3677 ;;      Params:         2       0       0       0       0       0       0       0       0
  3678 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3679 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3680 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3681 ;;Total ram usage:        8 bytes
  3682 ;; Hardware stack levels used:    1
  3683 ;; Hardware stack levels required when called:    1
  3684 ;; This function calls:
  3685 ;;		_isupper
  3686 ;; This function is called by:
  3687 ;;		_efgtoa
  3688 ;;		_vfpfcnvrt
  3689 ;; This function uses a non-reentrant model
  3690 ;;
  3691                           
  3692                           	psect	text6
  3693  0033B0                     __ptext6:
  3694                           	opt callstack 0
  3695  0033B0                     _tolower:
  3696                           	opt callstack 26
  3697  0033B0  0EBF               	movlw	191
  3698  0033B2  6E09               	movwf	??_tolower^0,c
  3699  0033B4  0EFF               	movlw	255
  3700  0033B6  6E0A               	movwf	(??_tolower+1)^0,c
  3701  0033B8  C007  F00B         	movff	tolower@c,??_tolower+2
  3702  0033BC  C008  F00C         	movff	tolower@c+1,??_tolower+3
  3703  0033C0  5009               	movf	??_tolower^0,w,c
  3704  0033C2  260B               	addwf	(??_tolower+2)^0,f,c
  3705  0033C4  500A               	movf	(??_tolower+1)^0,w,c
  3706  0033C6  220C               	addwfc	(??_tolower+3)^0,f,c
  3707  0033C8  500C               	movf	(??_tolower+3)^0,w,c
  3708  0033CA  E10A               	bnz	u3060
  3709  0033CC  0E1A               	movlw	26
  3710  0033CE  5C0B               	subwf	(??_tolower+2)^0,w,c
  3711  0033D0  A0D8               	btfss	status,0,c
  3712  0033D2  EFED  F019         	goto	u3061
  3713  0033D6  EFF0  F019         	goto	u3060
  3714  0033DA                     u3061:
  3715  0033DA  0E01               	movlw	1
  3716  0033DC  EFF1  F019         	goto	u3070
  3717  0033E0                     u3060:
  3718  0033E0  0E00               	movlw	0
  3719  0033E2                     u3070:
  3720  0033E2  6E0D               	movwf	_tolower$939^0,c
  3721  0033E4  6A0E               	clrf	(_tolower$939+1)^0,c
  3722  0033E6  500D               	movf	_tolower$939^0,w,c
  3723  0033E8  100E               	iorwf	(_tolower$939+1)^0,w,c
  3724  0033EA  B4D8               	btfsc	status,2,c
  3725  0033EC  EFFA  F019         	goto	u3081
  3726  0033F0  EFFC  F019         	goto	u3080
  3727  0033F4                     u3081:
  3728  0033F4  EF03  F01A         	goto	l1135
  3729  0033F8                     u3080:
  3730  0033F8  0E20               	movlw	32
  3731  0033FA  1007               	iorwf	tolower@c^0,w,c
  3732  0033FC  6E07               	movwf	?_tolower^0,c
  3733  0033FE  5008               	movf	(tolower@c+1)^0,w,c
  3734  003400  6E08               	movwf	(?_tolower+1)^0,c
  3735  003402  EF07  F01A         	goto	l1140
  3736  003406                     l1135:
  3737  003406  C007  F007         	movff	tolower@c,?_tolower
  3738  00340A  C008  F008         	movff	tolower@c+1,?_tolower+1
  3739  00340E                     l1140:
  3740  00340E  0012               	return		;funcret
  3741  003410                     __end_of_tolower:
  3742                           	opt callstack 0
  3743                           
  3744 ;; *************** function _isupper *****************
  3745 ;; Defined at:
  3746 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;  c               2    0[COMRAM] int 
  3749 ;; Auto vars:     Size  Location     Type
  3750 ;;		None
  3751 ;; Return value:  Size  Location     Type
  3752 ;;                  2    0[COMRAM] int 
  3753 ;; Registers used:
  3754 ;;		wreg, status,2, status,0
  3755 ;; Tracked objects:
  3756 ;;		On entry : 0/0
  3757 ;;		On exit  : 0/0
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3760 ;;      Params:         2       0       0       0       0       0       0       0       0
  3761 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3762 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3763 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3764 ;;Total ram usage:        6 bytes
  3765 ;; Hardware stack levels used:    1
  3766 ;; This function calls:
  3767 ;;		Nothing
  3768 ;; This function is called by:
  3769 ;;		_efgtoa
  3770 ;;		_vfpfcnvrt
  3771 ;;		_tolower
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           
  3775                           	psect	text7
  3776  0037D0                     __ptext7:
  3777                           	opt callstack 0
  3778  0037D0                     _isupper:
  3779                           	opt callstack 26
  3780  0037D0  0EBF               	movlw	191
  3781  0037D2  6E03               	movwf	??_isupper^0,c
  3782  0037D4  0EFF               	movlw	255
  3783  0037D6  6E04               	movwf	(??_isupper+1)^0,c
  3784  0037D8  C001  F005         	movff	isupper@c,??_isupper+2
  3785  0037DC  C002  F006         	movff	isupper@c+1,??_isupper+3
  3786  0037E0  5003               	movf	??_isupper^0,w,c
  3787  0037E2  2605               	addwf	(??_isupper+2)^0,f,c
  3788  0037E4  5004               	movf	(??_isupper+1)^0,w,c
  3789  0037E6  2206               	addwfc	(??_isupper+3)^0,f,c
  3790  0037E8  5006               	movf	(??_isupper+3)^0,w,c
  3791  0037EA  E10A               	bnz	u2500
  3792  0037EC  0E1A               	movlw	26
  3793  0037EE  5C05               	subwf	(??_isupper+2)^0,w,c
  3794  0037F0  A0D8               	btfss	status,0,c
  3795  0037F2  EFFD  F01B         	goto	u2501
  3796  0037F6  EF00  F01C         	goto	u2500
  3797  0037FA                     u2501:
  3798  0037FA  0E01               	movlw	1
  3799  0037FC  EF01  F01C         	goto	u2510
  3800  003800                     u2500:
  3801  003800  0E00               	movlw	0
  3802  003802                     u2510:
  3803  003802  6E01               	movwf	?_isupper^0,c
  3804  003804  6A02               	clrf	(?_isupper+1)^0,c
  3805  003806  0012               	return		;funcret
  3806  003808                     __end_of_isupper:
  3807                           	opt callstack 0
  3808                           
  3809 ;; *************** function _strcpy *****************
  3810 ;; Defined at:
  3811 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3814 ;;		 -> dbuf(80), 
  3815 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3816 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  3817 ;;		 -> dbuf(80), 
  3818 ;; Auto vars:     Size  Location     Type
  3819 ;;  d               2    8[COMRAM] PTR unsigned char 
  3820 ;;		 -> dbuf(80), 
  3821 ;;  s               2    6[COMRAM] PTR const unsigned char 
  3822 ;;		 -> STR_7(4), STR_6(4), STR_3(4), STR_2(4), 
  3823 ;;		 -> dbuf(80), 
  3824 ;; Return value:  Size  Location     Type
  3825 ;;                  2    0[COMRAM] PTR unsigned char 
  3826 ;; Registers used:
  3827 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3828 ;; Tracked objects:
  3829 ;;		On entry : 0/0
  3830 ;;		On exit  : 0/0
  3831 ;;		Unchanged: 0/0
  3832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3833 ;;      Params:         4       0       0       0       0       0       0       0       0
  3834 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3835 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3836 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3837 ;;Total ram usage:       10 bytes
  3838 ;; Hardware stack levels used:    1
  3839 ;; This function calls:
  3840 ;;		Nothing
  3841 ;; This function is called by:
  3842 ;;		_efgtoa
  3843 ;; This function uses a non-reentrant model
  3844 ;;
  3845                           
  3846                           	psect	text8
  3847  003470                     __ptext8:
  3848                           	opt callstack 0
  3849  003470                     _strcpy:
  3850                           	opt callstack 26
  3851  003470  C003  F007         	movff	strcpy@src,strcpy@s
  3852  003474  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  3853  003478  C001  F009         	movff	strcpy@dest,strcpy@d
  3854  00347C  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  3855  003480                     l2917:
  3856  003480  5007               	movf	strcpy@s^0,w,c
  3857  003482  6E05               	movwf	??_strcpy^0,c
  3858  003484  5008               	movf	(strcpy@s+1)^0,w,c
  3859  003486  6E06               	movwf	(??_strcpy+1)^0,c
  3860  003488  4A07               	infsnz	strcpy@s^0,f,c
  3861  00348A  2A08               	incf	(strcpy@s+1)^0,f,c
  3862  00348C  C005  FFF6         	movff	??_strcpy,tblptrl
  3863  003490  C006  FFF7         	movff	??_strcpy+1,tblptrh
  3864  003494  6AF8               	clrf	tblptru,c
  3865  003496  C009  FFD9         	movff	strcpy@d,fsr2l
  3866  00349A  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  3867  00349E  4A09               	infsnz	strcpy@d^0,f,c
  3868  0034A0  2A0A               	incf	(strcpy@d+1)^0,f,c
  3869  0034A2  0E07               	movlw	(high __ramtop+-1)
  3870  0034A4  64F7               	cpfsgt	tblptrh,c
  3871  0034A6  D003               	bra	u3047
  3872  0034A8  0008               	tblrd		*
  3873  0034AA  50F5               	movf	tablat,w,c
  3874  0034AC  D005               	bra	u3040
  3875  0034AE                     u3047:
  3876  0034AE  CFF6 FFE1          	movff	tblptrl,fsr1l
  3877  0034B2  CFF7 FFE2          	movff	tblptrh,fsr1h
  3878  0034B6  50E7               	movf	indf1,w,c
  3879  0034B8                     u3040:
  3880  0034B8  6EDF               	movwf	indf2,c
  3881  0034BA  50DF               	movf	indf2,w,c
  3882  0034BC  A4D8               	btfss	status,2,c
  3883  0034BE  EF63  F01A         	goto	u3051
  3884  0034C2  EF65  F01A         	goto	u3050
  3885  0034C6                     u3051:
  3886  0034C6  EF40  F01A         	goto	l2917
  3887  0034CA                     u3050:
  3888  0034CA  0012               	return		;funcret
  3889  0034CC                     __end_of_strcpy:
  3890                           	opt callstack 0
  3891                           
  3892 ;; *************** function _pad *****************
  3893 ;; Defined at:
  3894 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3895 ;; Parameters:    Size  Location     Type
  3896 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3897 ;;		 -> sprintf@f(6), 
  3898 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3899 ;;		 -> dbuf(80), 
  3900 ;;  p               2   20[COMRAM] int 
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;  w               2   25[COMRAM] int 
  3903 ;;  i               2   23[COMRAM] int 
  3904 ;; Return value:  Size  Location     Type
  3905 ;;                  2   16[COMRAM] int 
  3906 ;; Registers used:
  3907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3908 ;; Tracked objects:
  3909 ;;		On entry : 0/0
  3910 ;;		On exit  : 0/0
  3911 ;;		Unchanged: 0/0
  3912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3913 ;;      Params:         6       0       0       0       0       0       0       0       0
  3914 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3915 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3916 ;;      Totals:        11       0       0       0       0       0       0       0       0
  3917 ;;Total ram usage:       11 bytes
  3918 ;; Hardware stack levels used:    1
  3919 ;; Hardware stack levels required when called:    3
  3920 ;; This function calls:
  3921 ;;		_fputc
  3922 ;;		_fputs
  3923 ;;		_strlen
  3924 ;; This function is called by:
  3925 ;;		_efgtoa
  3926 ;; This function uses a non-reentrant model
  3927 ;;
  3928                           
  3929                           	psect	text9
  3930  00307A                     __ptext9:
  3931                           	opt callstack 0
  3932  00307A                     _pad:
  3933                           	opt callstack 23
  3934  00307A                     
  3935                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  3936  00307A  A05E               	btfss	_flags^0,0,c
  3937  00307C  EF42  F018         	goto	u2931
  3938  003080  EF44  F018         	goto	u2930
  3939  003084                     u2931:
  3940  003084  EF4E  F018         	goto	l2875
  3941  003088                     u2930:
  3942  003088                     
  3943                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  3944  003088  C013  F00A         	movff	pad@buf,fputs@s
  3945  00308C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3946  003090  C011  F00C         	movff	pad@fp,fputs@fp
  3947  003094  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3948  003098  ECA9  F01B         	call	_fputs	;wreg free
  3949  00309C                     l2875:
  3950                           
  3951                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  3952  00309C  BE16               	btfsc	(pad@p+1)^0,7,c
  3953  00309E  EF53  F018         	goto	u2941
  3954  0030A2  EF55  F018         	goto	u2940
  3955  0030A6                     u2941:
  3956  0030A6  EF5B  F018         	goto	l2879
  3957  0030AA                     u2940:
  3958  0030AA  C015  F01A         	movff	pad@p,pad@w
  3959  0030AE  C016  F01B         	movff	pad@p+1,pad@w+1
  3960  0030B2  EF5F  F018         	goto	l203
  3961  0030B6                     l2879:
  3962  0030B6  0E00               	movlw	0
  3963  0030B8  6E1B               	movwf	(pad@w+1)^0,c
  3964  0030BA  0E00               	movlw	0
  3965  0030BC  6E1A               	movwf	pad@w^0,c
  3966  0030BE                     l203:
  3967                           
  3968                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  3969  0030BE  0E00               	movlw	0
  3970  0030C0  6E19               	movwf	(pad@i+1)^0,c
  3971  0030C2  0E00               	movlw	0
  3972  0030C4  6E18               	movwf	pad@i^0,c
  3973                           
  3974                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  3975  0030C6  EF71  F018         	goto	l2885
  3976  0030CA                     l2881:
  3977                           
  3978                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  3979  0030CA  0E00               	movlw	0
  3980  0030CC  6E02               	movwf	(fputc@c+1)^0,c
  3981  0030CE  0E20               	movlw	32
  3982  0030D0  6E01               	movwf	fputc@c^0,c
  3983  0030D2  C011  F003         	movff	pad@fp,fputc@fp
  3984  0030D6  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3985  0030DA  EC76  F017         	call	_fputc	;wreg free
  3986  0030DE                     
  3987                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  3988  0030DE  4A18               	infsnz	pad@i^0,f,c
  3989  0030E0  2A19               	incf	(pad@i+1)^0,f,c
  3990  0030E2                     l2885:
  3991                           
  3992                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  3993  0030E2  501A               	movf	pad@w^0,w,c
  3994  0030E4  5C18               	subwf	pad@i^0,w,c
  3995  0030E6  5019               	movf	(pad@i+1)^0,w,c
  3996  0030E8  0A80               	xorlw	128
  3997  0030EA  6E17               	movwf	??_pad^0,c
  3998  0030EC  501B               	movf	(pad@w+1)^0,w,c
  3999  0030EE  0A80               	xorlw	128
  4000  0030F0  5817               	subwfb	??_pad^0,w,c
  4001  0030F2  A0D8               	btfss	status,0,c
  4002  0030F4  EF7E  F018         	goto	u2951
  4003  0030F8  EF80  F018         	goto	u2950
  4004  0030FC                     u2951:
  4005  0030FC  EF65  F018         	goto	l2881
  4006  003100                     u2950:
  4007  003100                     
  4008                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  4009  003100  B05E               	btfsc	_flags^0,0,c
  4010  003102  EF85  F018         	goto	u2961
  4011  003106  EF87  F018         	goto	u2960
  4012  00310A                     u2961:
  4013  00310A  EF91  F018         	goto	l2889
  4014  00310E                     u2960:
  4015  00310E                     
  4016                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  4017  00310E  C013  F00A         	movff	pad@buf,fputs@s
  4018  003112  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4019  003116  C011  F00C         	movff	pad@fp,fputs@fp
  4020  00311A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4021  00311E  ECA9  F01B         	call	_fputs	;wreg free
  4022  003122                     l2889:
  4023                           
  4024                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  4025  003122  C013  F001         	movff	pad@buf,strlen@s
  4026  003126  C014  F002         	movff	pad@buf+1,strlen@s+1
  4027  00312A  EC3C  F01C         	call	_strlen	;wreg free
  4028  00312E  501A               	movf	pad@w^0,w,c
  4029  003130  2401               	addwf	?_strlen^0,w,c
  4030  003132  6E11               	movwf	?_pad^0,c
  4031  003134  501B               	movf	(pad@w+1)^0,w,c
  4032  003136  2002               	addwfc	(?_strlen+1)^0,w,c
  4033  003138  6E12               	movwf	(?_pad+1)^0,c
  4034  00313A  0012               	return		;funcret
  4035  00313C                     __end_of_pad:
  4036                           	opt callstack 0
  4037                           
  4038 ;; *************** function _strlen *****************
  4039 ;; Defined at:
  4040 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  4041 ;; Parameters:    Size  Location     Type
  4042 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4043 ;;		 -> dbuf(80), text(15), 
  4044 ;; Auto vars:     Size  Location     Type
  4045 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4046 ;;		 -> dbuf(80), text(15), 
  4047 ;; Return value:  Size  Location     Type
  4048 ;;                  2    0[COMRAM] unsigned int 
  4049 ;; Registers used:
  4050 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4051 ;; Tracked objects:
  4052 ;;		On entry : 0/0
  4053 ;;		On exit  : 0/0
  4054 ;;		Unchanged: 0/0
  4055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4056 ;;      Params:         2       0       0       0       0       0       0       0       0
  4057 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4058 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4059 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4060 ;;Total ram usage:        4 bytes
  4061 ;; Hardware stack levels used:    1
  4062 ;; This function calls:
  4063 ;;		Nothing
  4064 ;; This function is called by:
  4065 ;;		_main
  4066 ;;		_pad
  4067 ;; This function uses a non-reentrant model
  4068 ;;
  4069                           
  4070                           	psect	text10
  4071  003878                     __ptext10:
  4072                           	opt callstack 0
  4073  003878                     _strlen:
  4074                           	opt callstack 30
  4075  003878  C001  F003         	movff	strlen@s,strlen@a
  4076  00387C  C002  F004         	movff	strlen@s+1,strlen@a+1
  4077  003880  EF44  F01C         	goto	l2645
  4078  003884                     l2643:
  4079  003884  4A01               	infsnz	strlen@s^0,f,c
  4080  003886  2A02               	incf	(strlen@s+1)^0,f,c
  4081  003888                     l2645:
  4082  003888  C001  FFD9         	movff	strlen@s,fsr2l
  4083  00388C  C002  FFDA         	movff	strlen@s+1,fsr2h
  4084  003890  50DF               	movf	indf2,w,c
  4085  003892  A4D8               	btfss	status,2,c
  4086  003894  EF4E  F01C         	goto	u2481
  4087  003898  EF50  F01C         	goto	u2480
  4088  00389C                     u2481:
  4089  00389C  EF42  F01C         	goto	l2643
  4090  0038A0                     u2480:
  4091  0038A0  5003               	movf	strlen@a^0,w,c
  4092  0038A2  5C01               	subwf	strlen@s^0,w,c
  4093  0038A4  6E01               	movwf	?_strlen^0,c
  4094  0038A6  5004               	movf	(strlen@a+1)^0,w,c
  4095  0038A8  5802               	subwfb	(strlen@s+1)^0,w,c
  4096  0038AA  6E02               	movwf	(?_strlen+1)^0,c
  4097  0038AC  0012               	return		;funcret
  4098  0038AE                     __end_of_strlen:
  4099                           	opt callstack 0
  4100                           
  4101 ;; *************** function _fputs *****************
  4102 ;; Defined at:
  4103 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  4104 ;; Parameters:    Size  Location     Type
  4105 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4106 ;;		 -> dbuf(80), 
  4107 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4108 ;;		 -> sprintf@f(6), 
  4109 ;; Auto vars:     Size  Location     Type
  4110 ;;  i               2   14[COMRAM] int 
  4111 ;;  c               1   13[COMRAM] unsigned char 
  4112 ;; Return value:  Size  Location     Type
  4113 ;;                  2    9[COMRAM] int 
  4114 ;; Registers used:
  4115 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4116 ;; Tracked objects:
  4117 ;;		On entry : 0/0
  4118 ;;		On exit  : 0/0
  4119 ;;		Unchanged: 0/0
  4120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4121 ;;      Params:         4       0       0       0       0       0       0       0       0
  4122 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4123 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4124 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4125 ;;Total ram usage:        7 bytes
  4126 ;; Hardware stack levels used:    1
  4127 ;; Hardware stack levels required when called:    2
  4128 ;; This function calls:
  4129 ;;		_fputc
  4130 ;; This function is called by:
  4131 ;;		_pad
  4132 ;; This function uses a non-reentrant model
  4133 ;;
  4134                           
  4135                           	psect	text11
  4136  003752                     __ptext11:
  4137                           	opt callstack 0
  4138  003752                     _fputs:
  4139                           	opt callstack 23
  4140  003752  0E00               	movlw	0
  4141  003754  6E10               	movwf	(fputs@i+1)^0,c
  4142  003756  0E00               	movlw	0
  4143  003758  6E0F               	movwf	fputs@i^0,c
  4144  00375A  EFBA  F01B         	goto	l2657
  4145  00375E                     l2653:
  4146  00375E  C00E  F001         	movff	fputs@c,fputc@c
  4147  003762  6A02               	clrf	(fputc@c+1)^0,c
  4148  003764  C00C  F003         	movff	fputs@fp,fputc@fp
  4149  003768  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4150  00376C  EC76  F017         	call	_fputc	;wreg free
  4151  003770  4A0F               	infsnz	fputs@i^0,f,c
  4152  003772  2A10               	incf	(fputs@i+1)^0,f,c
  4153  003774                     l2657:
  4154  003774  500F               	movf	fputs@i^0,w,c
  4155  003776  240A               	addwf	fputs@s^0,w,c
  4156  003778  6ED9               	movwf	fsr2l,c
  4157  00377A  5010               	movf	(fputs@i+1)^0,w,c
  4158  00377C  200B               	addwfc	(fputs@s+1)^0,w,c
  4159  00377E  6EDA               	movwf	fsr2h,c
  4160  003780  50DF               	movf	indf2,w,c
  4161  003782  6E0E               	movwf	fputs@c^0,c
  4162  003784  500E               	movf	fputs@c^0,w,c
  4163  003786  A4D8               	btfss	status,2,c
  4164  003788  EFC8  F01B         	goto	u2491
  4165  00378C  EFCA  F01B         	goto	u2490
  4166  003790                     u2491:
  4167  003790  EFAF  F01B         	goto	l2653
  4168  003794                     u2490:
  4169  003794  0012               	return		;funcret
  4170  003796                     __end_of_fputs:
  4171                           	opt callstack 0
  4172                           
  4173 ;; *************** function _fputc *****************
  4174 ;; Defined at:
  4175 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  4176 ;; Parameters:    Size  Location     Type
  4177 ;;  c               2    0[COMRAM] int 
  4178 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4179 ;;		 -> sprintf@f(6), 
  4180 ;; Auto vars:     Size  Location     Type
  4181 ;;		None
  4182 ;; Return value:  Size  Location     Type
  4183 ;;                  2    0[COMRAM] int 
  4184 ;; Registers used:
  4185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4186 ;; Tracked objects:
  4187 ;;		On entry : 0/0
  4188 ;;		On exit  : 0/0
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4191 ;;      Params:         4       0       0       0       0       0       0       0       0
  4192 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4193 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4194 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4195 ;;Total ram usage:        9 bytes
  4196 ;; Hardware stack levels used:    1
  4197 ;; Hardware stack levels required when called:    1
  4198 ;; This function calls:
  4199 ;;		_putch
  4200 ;; This function is called by:
  4201 ;;		_pad
  4202 ;;		_vfpfcnvrt
  4203 ;;		_fputs
  4204 ;; This function uses a non-reentrant model
  4205 ;;
  4206                           
  4207                           	psect	text12
  4208  002EEC                     __ptext12:
  4209                           	opt callstack 0
  4210  002EEC                     _fputc:
  4211                           	opt callstack 26
  4212  002EEC  5003               	movf	fputc@fp^0,w,c
  4213  002EEE  1004               	iorwf	(fputc@fp+1)^0,w,c
  4214  002EF0  B4D8               	btfsc	status,2,c
  4215  002EF2  EF7D  F017         	goto	u2441
  4216  002EF6  EF7F  F017         	goto	u2440
  4217  002EFA                     u2441:
  4218  002EFA  EF88  F017         	goto	l2631
  4219  002EFE                     u2440:
  4220  002EFE  5003               	movf	fputc@fp^0,w,c
  4221  002F00  1004               	iorwf	(fputc@fp+1)^0,w,c
  4222  002F02  A4D8               	btfss	status,2,c
  4223  002F04  EF86  F017         	goto	u2451
  4224  002F08  EF88  F017         	goto	u2450
  4225  002F0C                     u2451:
  4226  002F0C  EF8D  F017         	goto	l2633
  4227  002F10                     u2450:
  4228  002F10                     l2631:
  4229  002F10  5001               	movf	fputc@c^0,w,c
  4230  002F12  ECE1  F01C         	call	_putch
  4231  002F16  EFDA  F017         	goto	l1091
  4232  002F1A                     l2633:
  4233  002F1A  EE20 F004          	lfsr	2,4
  4234  002F1E  5003               	movf	fputc@fp^0,w,c
  4235  002F20  26D9               	addwf	fsr2l,f,c
  4236  002F22  5004               	movf	(fputc@fp+1)^0,w,c
  4237  002F24  22DA               	addwfc	fsr2h,f,c
  4238  002F26  50DE               	movf	postinc2,w,c
  4239  002F28  10DE               	iorwf	postinc2,w,c
  4240  002F2A  B4D8               	btfsc	status,2,c
  4241  002F2C  EF9A  F017         	goto	u2461
  4242  002F30  EF9C  F017         	goto	u2460
  4243  002F34                     u2461:
  4244  002F34  EFB7  F017         	goto	l2637
  4245  002F38                     u2460:
  4246  002F38  EE20 F004          	lfsr	2,4
  4247  002F3C  5003               	movf	fputc@fp^0,w,c
  4248  002F3E  26D9               	addwf	fsr2l,f,c
  4249  002F40  5004               	movf	(fputc@fp+1)^0,w,c
  4250  002F42  22DA               	addwfc	fsr2h,f,c
  4251  002F44  EE10 F002          	lfsr	1,2
  4252  002F48  5003               	movf	fputc@fp^0,w,c
  4253  002F4A  26E1               	addwf	fsr1l,f,c
  4254  002F4C  5004               	movf	(fputc@fp+1)^0,w,c
  4255  002F4E  22E2               	addwfc	fsr1h,f,c
  4256  002F50  50DE               	movf	postinc2,w,c
  4257  002F52  5CE6               	subwf	postinc1,w,c
  4258  002F54  50E6               	movf	postinc1,w,c
  4259  002F56  0A80               	xorlw	128
  4260  002F58  6E09               	movwf	(??_fputc+4)^0,c
  4261  002F5A  50DE               	movf	postinc2,w,c
  4262  002F5C  0A80               	xorlw	128
  4263  002F5E  5809               	subwfb	(??_fputc+4)^0,w,c
  4264  002F60  B0D8               	btfsc	status,0,c
  4265  002F62  EFB5  F017         	goto	u2471
  4266  002F66  EFB7  F017         	goto	u2470
  4267  002F6A                     u2471:
  4268  002F6A  EFDA  F017         	goto	l1091
  4269  002F6E                     u2470:
  4270  002F6E                     l2637:
  4271  002F6E  EE20 F002          	lfsr	2,2
  4272  002F72  5003               	movf	fputc@fp^0,w,c
  4273  002F74  26D9               	addwf	fsr2l,f,c
  4274  002F76  5004               	movf	(fputc@fp+1)^0,w,c
  4275  002F78  22DA               	addwfc	fsr2h,f,c
  4276  002F7A  CFDE F005          	movff	postinc2,??_fputc
  4277  002F7E  CFDD F006          	movff	postdec2,??_fputc+1
  4278  002F82  C003  FFD9         	movff	fputc@fp,fsr2l
  4279  002F86  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4280  002F8A  CFDE F007          	movff	postinc2,??_fputc+2
  4281  002F8E  CFDD F008          	movff	postdec2,??_fputc+3
  4282  002F92  5005               	movf	??_fputc^0,w,c
  4283  002F94  2407               	addwf	(??_fputc+2)^0,w,c
  4284  002F96  6ED9               	movwf	fsr2l,c
  4285  002F98  5006               	movf	(??_fputc+1)^0,w,c
  4286  002F9A  2008               	addwfc	(??_fputc+3)^0,w,c
  4287  002F9C  6EDA               	movwf	fsr2h,c
  4288  002F9E  C001  FFDF         	movff	fputc@c,indf2
  4289  002FA2  EE20 F002          	lfsr	2,2
  4290  002FA6  5003               	movf	fputc@fp^0,w,c
  4291  002FA8  26D9               	addwf	fsr2l,f,c
  4292  002FAA  5004               	movf	(fputc@fp+1)^0,w,c
  4293  002FAC  22DA               	addwfc	fsr2h,f,c
  4294  002FAE  2ADE               	incf	postinc2,f,c
  4295  002FB0  0E00               	movlw	0
  4296  002FB2  22DD               	addwfc	postdec2,f,c
  4297  002FB4                     l1091:
  4298  002FB4  0012               	return		;funcret
  4299  002FB6                     __end_of_fputc:
  4300                           	opt callstack 0
  4301                           
  4302 ;; *************** function _putch *****************
  4303 ;; Defined at:
  4304 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  4305 ;; Parameters:    Size  Location     Type
  4306 ;;  c               1    wreg     unsigned char 
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;  c               1    0[COMRAM] unsigned char 
  4309 ;; Return value:  Size  Location     Type
  4310 ;;                  1    wreg      void 
  4311 ;; Registers used:
  4312 ;;		wreg
  4313 ;; Tracked objects:
  4314 ;;		On entry : 0/0
  4315 ;;		On exit  : 0/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4318 ;;      Params:         0       0       0       0       0       0       0       0       0
  4319 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4320 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4321 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4322 ;;Total ram usage:        0 bytes
  4323 ;; Hardware stack levels used:    1
  4324 ;; This function calls:
  4325 ;;		Nothing
  4326 ;; This function is called by:
  4327 ;;		_fputc
  4328 ;; This function uses a non-reentrant model
  4329 ;;
  4330                           
  4331                           	psect	text13
  4332  0039C2                     __ptext13:
  4333                           	opt callstack 0
  4334  0039C2                     _putch:
  4335                           	opt callstack 26
  4336  0039C2  0012               	return		;funcret
  4337  0039C4                     __end_of_putch:
  4338                           	opt callstack 0
  4339                           
  4340 ;; *************** function _floorf *****************
  4341 ;; Defined at:
  4342 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  4343 ;; Parameters:    Size  Location     Type
  4344 ;;  x               4   25[COMRAM] float 
  4345 ;; Auto vars:     Size  Location     Type
  4346 ;;  u               4   41[COMRAM] struct .
  4347 ;;  m               4   35[COMRAM] unsigned long 
  4348 ;;  e               2   39[COMRAM] int 
  4349 ;; Return value:  Size  Location     Type
  4350 ;;                  4   25[COMRAM] float 
  4351 ;; Registers used:
  4352 ;;		wreg, status,2, status,0
  4353 ;; Tracked objects:
  4354 ;;		On entry : 0/0
  4355 ;;		On exit  : 0/0
  4356 ;;		Unchanged: 0/0
  4357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4358 ;;      Params:         4       0       0       0       0       0       0       0       0
  4359 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4360 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4361 ;;      Totals:        20       0       0       0       0       0       0       0       0
  4362 ;;Total ram usage:       20 bytes
  4363 ;; Hardware stack levels used:    1
  4364 ;; This function calls:
  4365 ;;		Nothing
  4366 ;; This function is called by:
  4367 ;;		_efgtoa
  4368 ;; This function uses a non-reentrant model
  4369 ;;
  4370                           
  4371                           	psect	text14
  4372  0024B2                     __ptext14:
  4373                           	opt callstack 0
  4374  0024B2                     _floorf:
  4375                           	opt callstack 26
  4376  0024B2  C0AA  F02A         	movff	floorf@F524,floorf@u
  4377  0024B6  C0AB  F02B         	movff	floorf@F524+1,floorf@u+1
  4378  0024BA  C0AC  F02C         	movff	floorf@F524+2,floorf@u+2
  4379  0024BE  C0AD  F02D         	movff	floorf@F524+3,floorf@u+3
  4380  0024C2  C01A  F02A         	movff	floorf@x,floorf@u
  4381  0024C6  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  4382  0024CA  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  4383  0024CE  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  4384  0024D2  0E81               	movlw	129
  4385  0024D4  6E1E               	movwf	??_floorf^0,c
  4386  0024D6  0EFF               	movlw	255
  4387  0024D8  6E1F               	movwf	(??_floorf+1)^0,c
  4388  0024DA  C02A  F020         	movff	floorf@u,??_floorf+2
  4389  0024DE  C02B  F021         	movff	floorf@u+1,??_floorf+3
  4390  0024E2  C02C  F022         	movff	floorf@u+2,??_floorf+4
  4391  0024E6  C02D  F023         	movff	floorf@u+3,??_floorf+5
  4392  0024EA  0E18               	movlw	24
  4393  0024EC  EF7D  F012         	goto	u3090
  4394  0024F0                     u3095:
  4395  0024F0  90D8               	bcf	status,0,c
  4396  0024F2  3223               	rrcf	(??_floorf+5)^0,f,c
  4397  0024F4  3222               	rrcf	(??_floorf+4)^0,f,c
  4398  0024F6  3221               	rrcf	(??_floorf+3)^0,f,c
  4399  0024F8  3220               	rrcf	(??_floorf+2)^0,f,c
  4400  0024FA                     u3090:
  4401  0024FA  2EE8               	decfsz	wreg,f,c
  4402  0024FC  EF78  F012         	goto	u3095
  4403  002500  5020               	movf	(??_floorf+2)^0,w,c
  4404  002502  241E               	addwf	??_floorf^0,w,c
  4405  002504  6E28               	movwf	floorf@e^0,c
  4406  002506  0E00               	movlw	0
  4407  002508  201F               	addwfc	(??_floorf+1)^0,w,c
  4408  00250A  6E29               	movwf	(floorf@e+1)^0,c
  4409  00250C  BE29               	btfsc	(floorf@e+1)^0,7,c
  4410  00250E  EF92  F012         	goto	u3101
  4411  002512  5029               	movf	(floorf@e+1)^0,w,c
  4412  002514  E109               	bnz	u3100
  4413  002516  0E17               	movlw	23
  4414  002518  5C28               	subwf	floorf@e^0,w,c
  4415  00251A  A0D8               	btfss	status,0,c
  4416  00251C  EF92  F012         	goto	u3101
  4417  002520  EF94  F012         	goto	u3100
  4418  002524                     u3101:
  4419  002524  EF9E  F012         	goto	l2935
  4420  002528                     u3100:
  4421  002528                     l2933:
  4422  002528  C01A  F01A         	movff	floorf@x,?_floorf
  4423  00252C  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  4424  002530  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  4425  002534  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  4426  002538  EF61  F013         	goto	l1052
  4427  00253C                     l2935:
  4428  00253C  BE29               	btfsc	(floorf@e+1)^0,7,c
  4429  00253E  EFA3  F012         	goto	u3111
  4430  002542  EFA5  F012         	goto	u3110
  4431  002546                     u3111:
  4432  002546  EF15  F013         	goto	l2945
  4433  00254A                     u3110:
  4434  00254A  C028  F01E         	movff	floorf@e,??_floorf
  4435  00254E  0EFF               	movlw	255
  4436  002550  6E1F               	movwf	(??_floorf+1)^0,c
  4437  002552  0EFF               	movlw	255
  4438  002554  6E20               	movwf	(??_floorf+2)^0,c
  4439  002556  0E7F               	movlw	127
  4440  002558  6E21               	movwf	(??_floorf+3)^0,c
  4441  00255A  0E00               	movlw	0
  4442  00255C  6E22               	movwf	(??_floorf+4)^0,c
  4443  00255E                     u3125:
  4444  00255E  661E               	tstfsz	??_floorf^0,c
  4445  002560  EFB4  F012         	goto	u3126
  4446  002564  EFBC  F012         	goto	u3127
  4447  002568                     u3126:
  4448  002568  3422               	rlcf	(??_floorf+4)^0,w,c
  4449  00256A  3222               	rrcf	(??_floorf+4)^0,f,c
  4450  00256C  3221               	rrcf	(??_floorf+3)^0,f,c
  4451  00256E  3220               	rrcf	(??_floorf+2)^0,f,c
  4452  002570  321F               	rrcf	(??_floorf+1)^0,f,c
  4453  002572  2E1E               	decfsz	??_floorf^0,f,c
  4454  002574  EFAF  F012         	goto	u3125
  4455  002578                     u3127:
  4456  002578  C01F  F024         	movff	??_floorf+1,floorf@m
  4457  00257C  C020  F025         	movff	??_floorf+2,floorf@m+1
  4458  002580  C021  F026         	movff	??_floorf+3,floorf@m+2
  4459  002584  C022  F027         	movff	??_floorf+4,floorf@m+3
  4460  002588  5024               	movf	floorf@m^0,w,c
  4461  00258A  142A               	andwf	floorf@u^0,w,c
  4462  00258C  6E1E               	movwf	??_floorf^0,c
  4463  00258E  5025               	movf	(floorf@m+1)^0,w,c
  4464  002590  142B               	andwf	(floorf@u+1)^0,w,c
  4465  002592  6E1F               	movwf	(??_floorf+1)^0,c
  4466  002594  5026               	movf	(floorf@m+2)^0,w,c
  4467  002596  142C               	andwf	(floorf@u+2)^0,w,c
  4468  002598  6E20               	movwf	(??_floorf+2)^0,c
  4469  00259A  5027               	movf	(floorf@m+3)^0,w,c
  4470  00259C  142D               	andwf	(floorf@u+3)^0,w,c
  4471  00259E  6E21               	movwf	(??_floorf+3)^0,c
  4472  0025A0  501E               	movf	??_floorf^0,w,c
  4473  0025A2  101F               	iorwf	(??_floorf+1)^0,w,c
  4474  0025A4  1020               	iorwf	(??_floorf+2)^0,w,c
  4475  0025A6  1021               	iorwf	(??_floorf+3)^0,w,c
  4476  0025A8  A4D8               	btfss	status,2,c
  4477  0025AA  EFD9  F012         	goto	u3131
  4478  0025AE  EFDB  F012         	goto	u3130
  4479  0025B2                     u3131:
  4480  0025B2  EFDD  F012         	goto	l2941
  4481  0025B6                     u3130:
  4482  0025B6  EF94  F012         	goto	l2933
  4483  0025BA                     l2941:
  4484  0025BA  C02A  F01E         	movff	floorf@u,??_floorf
  4485  0025BE  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4486  0025C2  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4487  0025C6  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4488  0025CA  0E20               	movlw	32
  4489  0025CC  EFED  F012         	goto	u3140
  4490  0025D0                     u3145:
  4491  0025D0  90D8               	bcf	status,0,c
  4492  0025D2  3221               	rrcf	(??_floorf+3)^0,f,c
  4493  0025D4  3220               	rrcf	(??_floorf+2)^0,f,c
  4494  0025D6  321F               	rrcf	(??_floorf+1)^0,f,c
  4495  0025D8  321E               	rrcf	??_floorf^0,f,c
  4496  0025DA                     u3140:
  4497  0025DA  2EE8               	decfsz	wreg,f,c
  4498  0025DC  EFE8  F012         	goto	u3145
  4499  0025E0  501E               	movf	??_floorf^0,w,c
  4500  0025E2  101F               	iorwf	(??_floorf+1)^0,w,c
  4501  0025E4  1020               	iorwf	(??_floorf+2)^0,w,c
  4502  0025E6  1021               	iorwf	(??_floorf+3)^0,w,c
  4503  0025E8  B4D8               	btfsc	status,2,c
  4504  0025EA  EFF9  F012         	goto	u3151
  4505  0025EE  EFFB  F012         	goto	u3150
  4506  0025F2                     u3151:
  4507  0025F2  EF03  F013         	goto	l1055
  4508  0025F6                     u3150:
  4509  0025F6  5024               	movf	floorf@m^0,w,c
  4510  0025F8  262A               	addwf	floorf@u^0,f,c
  4511  0025FA  5025               	movf	(floorf@m+1)^0,w,c
  4512  0025FC  222B               	addwfc	(floorf@u+1)^0,f,c
  4513  0025FE  5026               	movf	(floorf@m+2)^0,w,c
  4514  002600  222C               	addwfc	(floorf@u+2)^0,f,c
  4515  002602  5027               	movf	(floorf@m+3)^0,w,c
  4516  002604  222D               	addwfc	(floorf@u+3)^0,f,c
  4517  002606                     l1055:
  4518  002606  1C24               	comf	floorf@m^0,w,c
  4519  002608  6E1E               	movwf	??_floorf^0,c
  4520  00260A  1C25               	comf	(floorf@m+1)^0,w,c
  4521  00260C  6E1F               	movwf	(??_floorf+1)^0,c
  4522  00260E  1C26               	comf	(floorf@m+2)^0,w,c
  4523  002610  6E20               	movwf	(??_floorf+2)^0,c
  4524  002612  1C27               	comf	(floorf@m+3)^0,w,c
  4525  002614  6E21               	movwf	(??_floorf+3)^0,c
  4526  002616  501E               	movf	??_floorf^0,w,c
  4527  002618  162A               	andwf	floorf@u^0,f,c
  4528  00261A  501F               	movf	(??_floorf+1)^0,w,c
  4529  00261C  162B               	andwf	(floorf@u+1)^0,f,c
  4530  00261E  5020               	movf	(??_floorf+2)^0,w,c
  4531  002620  162C               	andwf	(floorf@u+2)^0,f,c
  4532  002622  5021               	movf	(??_floorf+3)^0,w,c
  4533  002624  162D               	andwf	(floorf@u+3)^0,f,c
  4534  002626  EF59  F013         	goto	l2953
  4535  00262A                     l2945:
  4536  00262A  C02A  F01E         	movff	floorf@u,??_floorf
  4537  00262E  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  4538  002632  C02C  F020         	movff	floorf@u+2,??_floorf+2
  4539  002636  C02D  F021         	movff	floorf@u+3,??_floorf+3
  4540  00263A  0E20               	movlw	32
  4541  00263C  EF25  F013         	goto	u3160
  4542  002640                     u3165:
  4543  002640  90D8               	bcf	status,0,c
  4544  002642  3221               	rrcf	(??_floorf+3)^0,f,c
  4545  002644  3220               	rrcf	(??_floorf+2)^0,f,c
  4546  002646  321F               	rrcf	(??_floorf+1)^0,f,c
  4547  002648  321E               	rrcf	??_floorf^0,f,c
  4548  00264A                     u3160:
  4549  00264A  2EE8               	decfsz	wreg,f,c
  4550  00264C  EF20  F013         	goto	u3165
  4551  002650  501E               	movf	??_floorf^0,w,c
  4552  002652  101F               	iorwf	(??_floorf+1)^0,w,c
  4553  002654  1020               	iorwf	(??_floorf+2)^0,w,c
  4554  002656  1021               	iorwf	(??_floorf+3)^0,w,c
  4555  002658  A4D8               	btfss	status,2,c
  4556  00265A  EF31  F013         	goto	u3171
  4557  00265E  EF33  F013         	goto	u3170
  4558  002662                     u3171:
  4559  002662  EF3D  F013         	goto	l2949
  4560  002666                     u3170:
  4561  002666  0E00               	movlw	0
  4562  002668  6E2A               	movwf	floorf@u^0,c
  4563  00266A  0E00               	movlw	0
  4564  00266C  6E2B               	movwf	(floorf@u+1)^0,c
  4565  00266E  0E00               	movlw	0
  4566  002670  6E2C               	movwf	(floorf@u+2)^0,c
  4567  002672  0E00               	movlw	0
  4568  002674  6E2D               	movwf	(floorf@u+3)^0,c
  4569  002676  EF59  F013         	goto	l2953
  4570  00267A                     l2949:
  4571  00267A  90D8               	bcf	status,0,c
  4572  00267C  342A               	rlcf	floorf@u^0,w,c
  4573  00267E  6E1E               	movwf	??_floorf^0,c
  4574  002680  342B               	rlcf	(floorf@u+1)^0,w,c
  4575  002682  6E1F               	movwf	(??_floorf+1)^0,c
  4576  002684  342C               	rlcf	(floorf@u+2)^0,w,c
  4577  002686  6E20               	movwf	(??_floorf+2)^0,c
  4578  002688  342D               	rlcf	(floorf@u+3)^0,w,c
  4579  00268A  6E21               	movwf	(??_floorf+3)^0,c
  4580  00268C  501E               	movf	??_floorf^0,w,c
  4581  00268E  101F               	iorwf	(??_floorf+1)^0,w,c
  4582  002690  1020               	iorwf	(??_floorf+2)^0,w,c
  4583  002692  1021               	iorwf	(??_floorf+3)^0,w,c
  4584  002694  B4D8               	btfsc	status,2,c
  4585  002696  EF4F  F013         	goto	u3181
  4586  00269A  EF51  F013         	goto	u3180
  4587  00269E                     u3181:
  4588  00269E  EF59  F013         	goto	l2953
  4589  0026A2                     u3180:
  4590  0026A2  0E00               	movlw	0
  4591  0026A4  6E2A               	movwf	floorf@u^0,c
  4592  0026A6  0E00               	movlw	0
  4593  0026A8  6E2B               	movwf	(floorf@u+1)^0,c
  4594  0026AA  0E80               	movlw	128
  4595  0026AC  6E2C               	movwf	(floorf@u+2)^0,c
  4596  0026AE  0EBF               	movlw	191
  4597  0026B0  6E2D               	movwf	(floorf@u+3)^0,c
  4598  0026B2                     l2953:
  4599  0026B2  C02A  F01A         	movff	floorf@u,?_floorf
  4600  0026B6  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  4601  0026BA  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  4602  0026BE  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  4603  0026C2                     l1052:
  4604  0026C2  0012               	return		;funcret
  4605  0026C4                     __end_of_floorf:
  4606                           	opt callstack 0
  4607                           
  4608 ;; *************** function ___fpclassifyf *****************
  4609 ;; Defined at:
  4610 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  4611 ;; Parameters:    Size  Location     Type
  4612 ;;  x               4    0[COMRAM] float 
  4613 ;; Auto vars:     Size  Location     Type
  4614 ;;  u               4   10[COMRAM] struct .
  4615 ;;  e               2    8[COMRAM] int 
  4616 ;; Return value:  Size  Location     Type
  4617 ;;                  2    0[COMRAM] int 
  4618 ;; Registers used:
  4619 ;;		wreg, status,2, status,0
  4620 ;; Tracked objects:
  4621 ;;		On entry : 0/0
  4622 ;;		On exit  : 0/0
  4623 ;;		Unchanged: 0/0
  4624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4625 ;;      Params:         4       0       0       0       0       0       0       0       0
  4626 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4627 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4628 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4629 ;;Total ram usage:       14 bytes
  4630 ;; Hardware stack levels used:    1
  4631 ;; This function calls:
  4632 ;;		Nothing
  4633 ;; This function is called by:
  4634 ;;		_efgtoa
  4635 ;; This function uses a non-reentrant model
  4636 ;;
  4637                           
  4638                           	psect	text15
  4639  002D18                     __ptext15:
  4640                           	opt callstack 0
  4641  002D18                     ___fpclassifyf:
  4642                           	opt callstack 26
  4643  002D18  C0AE  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  4644  002D1C  C0AF  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  4645  002D20  C0B0  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  4646  002D24  C0B1  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  4647  002D28  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  4648  002D2C  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  4649  002D30  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  4650  002D34  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  4651  002D38  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4652  002D3C  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4653  002D40  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4654  002D44  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4655  002D48  0E18               	movlw	24
  4656  002D4A  EFAC  F016         	goto	u2970
  4657  002D4E                     u2975:
  4658  002D4E  90D8               	bcf	status,0,c
  4659  002D50  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  4660  002D52  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  4661  002D54  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  4662  002D56  3205               	rrcf	??___fpclassifyf^0,f,c
  4663  002D58                     u2970:
  4664  002D58  2EE8               	decfsz	wreg,f,c
  4665  002D5A  EFA7  F016         	goto	u2975
  4666  002D5E  5005               	movf	??___fpclassifyf^0,w,c
  4667  002D60  6E09               	movwf	___fpclassifyf@e^0,c
  4668  002D62  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  4669  002D64  5009               	movf	___fpclassifyf@e^0,w,c
  4670  002D66  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4671  002D68  A4D8               	btfss	status,2,c
  4672  002D6A  EFB9  F016         	goto	u2981
  4673  002D6E  EFBB  F016         	goto	u2980
  4674  002D72                     u2981:
  4675  002D72  EFDB  F016         	goto	l2905
  4676  002D76                     u2980:
  4677  002D76  90D8               	bcf	status,0,c
  4678  002D78  340B               	rlcf	___fpclassifyf@u^0,w,c
  4679  002D7A  6E05               	movwf	??___fpclassifyf^0,c
  4680  002D7C  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  4681  002D7E  6E06               	movwf	(??___fpclassifyf+1)^0,c
  4682  002D80  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  4683  002D82  6E07               	movwf	(??___fpclassifyf+2)^0,c
  4684  002D84  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  4685  002D86  6E08               	movwf	(??___fpclassifyf+3)^0,c
  4686  002D88  5005               	movf	??___fpclassifyf^0,w,c
  4687  002D8A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4688  002D8C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4689  002D8E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4690  002D90  A4D8               	btfss	status,2,c
  4691  002D92  EFCD  F016         	goto	u2991
  4692  002D96  EFCF  F016         	goto	u2990
  4693  002D9A                     u2991:
  4694  002D9A  EFD5  F016         	goto	l2901
  4695  002D9E                     u2990:
  4696  002D9E  0E00               	movlw	0
  4697  002DA0  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4698  002DA2  0E02               	movlw	2
  4699  002DA4  6E01               	movwf	?___fpclassifyf^0,c
  4700  002DA6  EF0A  F017         	goto	l1014
  4701  002DAA                     l2901:
  4702  002DAA  0E00               	movlw	0
  4703  002DAC  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4704  002DAE  0E03               	movlw	3
  4705  002DB0  6E01               	movwf	?___fpclassifyf^0,c
  4706  002DB2  EF0A  F017         	goto	l1014
  4707  002DB6                     l2905:
  4708  002DB6  2809               	incf	___fpclassifyf@e^0,w,c
  4709  002DB8  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  4710  002DBA  A4D8               	btfss	status,2,c
  4711  002DBC  EFE2  F016         	goto	u3001
  4712  002DC0  EFE4  F016         	goto	u3000
  4713  002DC4                     u3001:
  4714  002DC4  EF06  F017         	goto	l2911
  4715  002DC8                     u3000:
  4716  002DC8  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  4717  002DCC  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  4718  002DD0  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  4719  002DD4  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  4720  002DD8  0E09               	movlw	9
  4721  002DDA                     u3015:
  4722  002DDA  90D8               	bcf	status,0,c
  4723  002DDC  3605               	rlcf	??___fpclassifyf^0,f,c
  4724  002DDE  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  4725  002DE0  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  4726  002DE2  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  4727  002DE4  2EE8               	decfsz	wreg,f,c
  4728  002DE6  EFED  F016         	goto	u3015
  4729  002DEA  5005               	movf	??___fpclassifyf^0,w,c
  4730  002DEC  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  4731  002DEE  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  4732  002DF0  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  4733  002DF2  B4D8               	btfsc	status,2,c
  4734  002DF4  EFFE  F016         	goto	u3021
  4735  002DF8  EF01  F017         	goto	u3020
  4736  002DFC                     u3021:
  4737  002DFC  0E01               	movlw	1
  4738  002DFE  EF02  F017         	goto	u3030
  4739  002E02                     u3020:
  4740  002E02  0E00               	movlw	0
  4741  002E04                     u3030:
  4742  002E04  6E01               	movwf	?___fpclassifyf^0,c
  4743  002E06  6A02               	clrf	(?___fpclassifyf+1)^0,c
  4744  002E08  EF0A  F017         	goto	l1014
  4745  002E0C                     l2911:
  4746  002E0C  0E00               	movlw	0
  4747  002E0E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  4748  002E10  0E04               	movlw	4
  4749  002E12  6E01               	movwf	?___fpclassifyf^0,c
  4750  002E14                     l1014:
  4751  002E14  0012               	return		;funcret
  4752  002E16                     __end_of___fpclassifyf:
  4753                           	opt callstack 0
  4754                           
  4755 ;; *************** function ___fltol *****************
  4756 ;; Defined at:
  4757 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  4758 ;; Parameters:    Size  Location     Type
  4759 ;;  f1              4    0[COMRAM] int 
  4760 ;; Auto vars:     Size  Location     Type
  4761 ;;  exp1            1    9[COMRAM] unsigned char 
  4762 ;;  sign1           1    8[COMRAM] unsigned char 
  4763 ;; Return value:  Size  Location     Type
  4764 ;;                  4    0[COMRAM] long 
  4765 ;; Registers used:
  4766 ;;		wreg, status,2, status,0
  4767 ;; Tracked objects:
  4768 ;;		On entry : 0/0
  4769 ;;		On exit  : 0/0
  4770 ;;		Unchanged: 0/0
  4771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4772 ;;      Params:         4       0       0       0       0       0       0       0       0
  4773 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4774 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4775 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4776 ;;Total ram usage:       10 bytes
  4777 ;; Hardware stack levels used:    1
  4778 ;; This function calls:
  4779 ;;		Nothing
  4780 ;; This function is called by:
  4781 ;;		_efgtoa
  4782 ;; This function uses a non-reentrant model
  4783 ;;
  4784                           
  4785                           	psect	text16
  4786  002B0E                     __ptext16:
  4787                           	opt callstack 0
  4788  002B0E                     ___fltol:
  4789                           	opt callstack 26
  4790  002B0E  3403               	rlcf	(___fltol@f1+2)^0,w,c
  4791  002B10  3404               	rlcf	(___fltol@f1+3)^0,w,c
  4792  002B12  6E0A               	movwf	___fltol@exp1^0,c
  4793  002B14  500A               	movf	___fltol@exp1^0,w,c
  4794  002B16  A4D8               	btfss	status,2,c
  4795  002B18  EF90  F015         	goto	u3841
  4796  002B1C  EF92  F015         	goto	u3840
  4797  002B20                     u3841:
  4798  002B20  EF9C  F015         	goto	l3373
  4799  002B24                     u3840:
  4800  002B24                     l3369:
  4801  002B24  0E00               	movlw	0
  4802  002B26  6E01               	movwf	?___fltol^0,c
  4803  002B28  0E00               	movlw	0
  4804  002B2A  6E02               	movwf	(?___fltol+1)^0,c
  4805  002B2C  0E00               	movlw	0
  4806  002B2E  6E03               	movwf	(?___fltol+2)^0,c
  4807  002B30  0E00               	movlw	0
  4808  002B32  6E04               	movwf	(?___fltol+3)^0,c
  4809  002B34  EF09  F016         	goto	l630
  4810  002B38                     l3373:
  4811  002B38  C001  F005         	movff	___fltol@f1,??___fltol
  4812  002B3C  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  4813  002B40  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  4814  002B44  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  4815  002B48  0E20               	movlw	32
  4816  002B4A  EFAC  F015         	goto	u3850
  4817  002B4E                     u3855:
  4818  002B4E  90D8               	bcf	status,0,c
  4819  002B50  3208               	rrcf	(??___fltol+3)^0,f,c
  4820  002B52  3207               	rrcf	(??___fltol+2)^0,f,c
  4821  002B54  3206               	rrcf	(??___fltol+1)^0,f,c
  4822  002B56  3205               	rrcf	??___fltol^0,f,c
  4823  002B58                     u3850:
  4824  002B58  2EE8               	decfsz	wreg,f,c
  4825  002B5A  EFA7  F015         	goto	u3855
  4826  002B5E  5005               	movf	??___fltol^0,w,c
  4827  002B60  6E09               	movwf	___fltol@sign1^0,c
  4828  002B62  8E03               	bsf	(___fltol@f1+2)^0,7,c
  4829  002B64  0EFF               	movlw	255
  4830  002B66  1601               	andwf	___fltol@f1^0,f,c
  4831  002B68  0EFF               	movlw	255
  4832  002B6A  1602               	andwf	(___fltol@f1+1)^0,f,c
  4833  002B6C  0EFF               	movlw	255
  4834  002B6E  1603               	andwf	(___fltol@f1+2)^0,f,c
  4835  002B70  0E00               	movlw	0
  4836  002B72  1604               	andwf	(___fltol@f1+3)^0,f,c
  4837  002B74  0E96               	movlw	150
  4838  002B76  5E0A               	subwf	___fltol@exp1^0,f,c
  4839  002B78  BE0A               	btfsc	___fltol@exp1^0,7,c
  4840  002B7A  EFC3  F015         	goto	u3860
  4841  002B7E  EFC1  F015         	goto	u3861
  4842  002B82                     u3861:
  4843  002B82  EFD9  F015         	goto	l3393
  4844  002B86                     u3860:
  4845  002B86  500A               	movf	___fltol@exp1^0,w,c
  4846  002B88  0A80               	xorlw	128
  4847  002B8A  0F97               	addlw	151
  4848  002B8C  B0D8               	btfsc	status,0,c
  4849  002B8E  EFCB  F015         	goto	u3871
  4850  002B92  EFCD  F015         	goto	u3870
  4851  002B96                     u3871:
  4852  002B96  EFCF  F015         	goto	l3389
  4853  002B9A                     u3870:
  4854  002B9A  EF92  F015         	goto	l3369
  4855  002B9E                     l3389:
  4856  002B9E  90D8               	bcf	status,0,c
  4857  002BA0  3204               	rrcf	(___fltol@f1+3)^0,f,c
  4858  002BA2  3203               	rrcf	(___fltol@f1+2)^0,f,c
  4859  002BA4  3202               	rrcf	(___fltol@f1+1)^0,f,c
  4860  002BA6  3201               	rrcf	___fltol@f1^0,f,c
  4861  002BA8  3E0A               	incfsz	___fltol@exp1^0,f,c
  4862  002BAA  EFCF  F015         	goto	l3389
  4863  002BAE  EFF1  F015         	goto	l3403
  4864  002BB2                     l3393:
  4865  002BB2  0E1F               	movlw	31
  4866  002BB4  640A               	cpfsgt	___fltol@exp1^0,c
  4867  002BB6  EFDF  F015         	goto	u3881
  4868  002BBA  EFE1  F015         	goto	u3880
  4869  002BBE                     u3881:
  4870  002BBE  EFE9  F015         	goto	l3401
  4871  002BC2                     u3880:
  4872  002BC2  EF92  F015         	goto	l3369
  4873  002BC6                     l3399:
  4874  002BC6  90D8               	bcf	status,0,c
  4875  002BC8  3601               	rlcf	___fltol@f1^0,f,c
  4876  002BCA  3602               	rlcf	(___fltol@f1+1)^0,f,c
  4877  002BCC  3603               	rlcf	(___fltol@f1+2)^0,f,c
  4878  002BCE  3604               	rlcf	(___fltol@f1+3)^0,f,c
  4879  002BD0  060A               	decf	___fltol@exp1^0,f,c
  4880  002BD2                     l3401:
  4881  002BD2  500A               	movf	___fltol@exp1^0,w,c
  4882  002BD4  A4D8               	btfss	status,2,c
  4883  002BD6  EFEF  F015         	goto	u3891
  4884  002BDA  EFF1  F015         	goto	u3890
  4885  002BDE                     u3891:
  4886  002BDE  EFE3  F015         	goto	l3399
  4887  002BE2                     u3890:
  4888  002BE2                     l3403:
  4889  002BE2  5009               	movf	___fltol@sign1^0,w,c
  4890  002BE4  B4D8               	btfsc	status,2,c
  4891  002BE6  EFF7  F015         	goto	u3901
  4892  002BEA  EFF9  F015         	goto	u3900
  4893  002BEE                     u3901:
  4894  002BEE  EF01  F016         	goto	l3407
  4895  002BF2                     u3900:
  4896  002BF2  1E04               	comf	(___fltol@f1+3)^0,f,c
  4897  002BF4  1E03               	comf	(___fltol@f1+2)^0,f,c
  4898  002BF6  1E02               	comf	(___fltol@f1+1)^0,f,c
  4899  002BF8  6C01               	negf	___fltol@f1^0,c
  4900  002BFA  0E00               	movlw	0
  4901  002BFC  2202               	addwfc	(___fltol@f1+1)^0,f,c
  4902  002BFE  2203               	addwfc	(___fltol@f1+2)^0,f,c
  4903  002C00  2204               	addwfc	(___fltol@f1+3)^0,f,c
  4904  002C02                     l3407:
  4905  002C02  C001  F001         	movff	___fltol@f1,?___fltol
  4906  002C06  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  4907  002C0A  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  4908  002C0E  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  4909  002C12                     l630:
  4910  002C12  0012               	return		;funcret
  4911  002C14                     __end_of___fltol:
  4912                           	opt callstack 0
  4913                           
  4914 ;; *************** function ___flsub *****************
  4915 ;; Defined at:
  4916 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  4917 ;; Parameters:    Size  Location     Type
  4918 ;;  b               4   41[COMRAM] long 
  4919 ;;  a               4   45[COMRAM] long 
  4920 ;; Auto vars:     Size  Location     Type
  4921 ;;		None
  4922 ;; Return value:  Size  Location     Type
  4923 ;;                  4   41[COMRAM] long 
  4924 ;; Registers used:
  4925 ;;		wreg, status,2, status,0, cstack
  4926 ;; Tracked objects:
  4927 ;;		On entry : 0/0
  4928 ;;		On exit  : 0/0
  4929 ;;		Unchanged: 0/0
  4930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4931 ;;      Params:         8       0       0       0       0       0       0       0       0
  4932 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4933 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4934 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4935 ;;Total ram usage:        8 bytes
  4936 ;; Hardware stack levels used:    1
  4937 ;; Hardware stack levels required when called:    1
  4938 ;; This function calls:
  4939 ;;		___fladd
  4940 ;; This function is called by:
  4941 ;;		_efgtoa
  4942 ;; This function uses a non-reentrant model
  4943 ;;
  4944                           
  4945                           	psect	text17
  4946  00370C                     __ptext17:
  4947                           	opt callstack 0
  4948  00370C                     ___flsub:
  4949                           	opt callstack 25
  4950  00370C  0E00               	movlw	0
  4951  00370E  1A2E               	xorwf	___flsub@a^0,f,c
  4952  003710  0E00               	movlw	0
  4953  003712  1A2F               	xorwf	(___flsub@a+1)^0,f,c
  4954  003714  0E00               	movlw	0
  4955  003716  1A30               	xorwf	(___flsub@a+2)^0,f,c
  4956  003718  0E80               	movlw	128
  4957  00371A  1A31               	xorwf	(___flsub@a+3)^0,f,c
  4958  00371C  C02A  F01A         	movff	___flsub@b,___fladd@b
  4959  003720  C02B  F01B         	movff	___flsub@b+1,___fladd@b+1
  4960  003724  C02C  F01C         	movff	___flsub@b+2,___fladd@b+2
  4961  003728  C02D  F01D         	movff	___flsub@b+3,___fladd@b+3
  4962  00372C  C02E  F01E         	movff	___flsub@a,___fladd@a
  4963  003730  C02F  F01F         	movff	___flsub@a+1,___fladd@a+1
  4964  003734  C030  F020         	movff	___flsub@a+2,___fladd@a+2
  4965  003738  C031  F021         	movff	___flsub@a+3,___fladd@a+3
  4966  00373C  ECE7  F009         	call	___fladd	;wreg free
  4967  003740  C01A  F02A         	movff	?___fladd,?___flsub
  4968  003744  C01B  F02B         	movff	?___fladd+1,?___flsub+1
  4969  003748  C01C  F02C         	movff	?___fladd+2,?___flsub+2
  4970  00374C  C01D  F02D         	movff	?___fladd+3,?___flsub+3
  4971  003750  0012               	return		;funcret
  4972  003752                     __end_of___flsub:
  4973                           	opt callstack 0
  4974                           
  4975 ;; *************** function ___fladd *****************
  4976 ;; Defined at:
  4977 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  4978 ;; Parameters:    Size  Location     Type
  4979 ;;  b               4   25[COMRAM] long 
  4980 ;;  a               4   29[COMRAM] long 
  4981 ;; Auto vars:     Size  Location     Type
  4982 ;;  grs             1   40[COMRAM] unsigned char 
  4983 ;;  bexp            1   39[COMRAM] unsigned char 
  4984 ;;  aexp            1   38[COMRAM] unsigned char 
  4985 ;;  signs           1   37[COMRAM] unsigned char 
  4986 ;; Return value:  Size  Location     Type
  4987 ;;                  4   25[COMRAM] unsigned char 
  4988 ;; Registers used:
  4989 ;;		wreg, status,2, status,0
  4990 ;; Tracked objects:
  4991 ;;		On entry : 0/0
  4992 ;;		On exit  : 0/0
  4993 ;;		Unchanged: 0/0
  4994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4995 ;;      Params:         8       0       0       0       0       0       0       0       0
  4996 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4997 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4998 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4999 ;;Total ram usage:       16 bytes
  5000 ;; Hardware stack levels used:    1
  5001 ;; This function calls:
  5002 ;;		Nothing
  5003 ;; This function is called by:
  5004 ;;		_main
  5005 ;;		_efgtoa
  5006 ;;		___flsub
  5007 ;; This function uses a non-reentrant model
  5008 ;;
  5009                           
  5010                           	psect	text18
  5011  0013CE                     __ptext18:
  5012                           	opt callstack 0
  5013  0013CE                     ___fladd:
  5014                           	opt callstack 25
  5015  0013CE  501D               	movf	(___fladd@b+3)^0,w,c
  5016  0013D0  0B80               	andlw	128
  5017  0013D2  6E26               	movwf	___fladd@signs^0,c
  5018  0013D4  501D               	movf	(___fladd@b+3)^0,w,c
  5019  0013D6  241D               	addwf	(___fladd@b+3)^0,w,c
  5020  0013D8  6E28               	movwf	___fladd@bexp^0,c
  5021  0013DA  AE1C               	btfss	(___fladd@b+2)^0,7,c
  5022  0013DC  EFF2  F009         	goto	u2521
  5023  0013E0  EFF4  F009         	goto	u2520
  5024  0013E4                     u2521:
  5025  0013E4  EFF5  F009         	goto	l2669
  5026  0013E8                     u2520:
  5027  0013E8  8028               	bsf	___fladd@bexp^0,0,c
  5028  0013EA                     l2669:
  5029  0013EA  5028               	movf	___fladd@bexp^0,w,c
  5030  0013EC  B4D8               	btfsc	status,2,c
  5031  0013EE  EFFB  F009         	goto	u2531
  5032  0013F2  EFFD  F009         	goto	u2530
  5033  0013F6                     u2531:
  5034  0013F6  EF12  F00A         	goto	l2679
  5035  0013FA                     u2530:
  5036  0013FA  2828               	incf	___fladd@bexp^0,w,c
  5037  0013FC  A4D8               	btfss	status,2,c
  5038  0013FE  EF03  F00A         	goto	u2541
  5039  001402  EF05  F00A         	goto	u2540
  5040  001406                     u2541:
  5041  001406  EF0D  F00A         	goto	l2675
  5042  00140A                     u2540:
  5043  00140A  0E00               	movlw	0
  5044  00140C  6E1A               	movwf	___fladd@b^0,c
  5045  00140E  0E00               	movlw	0
  5046  001410  6E1B               	movwf	(___fladd@b+1)^0,c
  5047  001412  0E00               	movlw	0
  5048  001414  6E1C               	movwf	(___fladd@b+2)^0,c
  5049  001416  0E00               	movlw	0
  5050  001418  6E1D               	movwf	(___fladd@b+3)^0,c
  5051  00141A                     l2675:
  5052  00141A  8E1C               	bsf	(___fladd@b+2)^0,7,c
  5053  00141C  0E00               	movlw	0
  5054  00141E  6E1D               	movwf	(___fladd@b+3)^0,c
  5055  001420  EF1A  F00A         	goto	l2681
  5056  001424                     l2679:
  5057  001424  0E00               	movlw	0
  5058  001426  6E1A               	movwf	___fladd@b^0,c
  5059  001428  0E00               	movlw	0
  5060  00142A  6E1B               	movwf	(___fladd@b+1)^0,c
  5061  00142C  0E00               	movlw	0
  5062  00142E  6E1C               	movwf	(___fladd@b+2)^0,c
  5063  001430  0E00               	movlw	0
  5064  001432  6E1D               	movwf	(___fladd@b+3)^0,c
  5065  001434                     l2681:
  5066  001434  5021               	movf	(___fladd@a+3)^0,w,c
  5067  001436  0B80               	andlw	128
  5068  001438  6E27               	movwf	___fladd@aexp^0,c
  5069  00143A  5026               	movf	___fladd@signs^0,w,c
  5070  00143C  1827               	xorwf	___fladd@aexp^0,w,c
  5071  00143E  B4D8               	btfsc	status,2,c
  5072  001440  EF24  F00A         	goto	u2551
  5073  001444  EF26  F00A         	goto	u2550
  5074  001448                     u2551:
  5075  001448  EF27  F00A         	goto	l2687
  5076  00144C                     u2550:
  5077  00144C  8C26               	bsf	___fladd@signs^0,6,c
  5078  00144E                     l2687:
  5079  00144E  5021               	movf	(___fladd@a+3)^0,w,c
  5080  001450  2421               	addwf	(___fladd@a+3)^0,w,c
  5081  001452  6E27               	movwf	___fladd@aexp^0,c
  5082  001454  AE20               	btfss	(___fladd@a+2)^0,7,c
  5083  001456  EF2F  F00A         	goto	u2561
  5084  00145A  EF31  F00A         	goto	u2560
  5085  00145E                     u2561:
  5086  00145E  EF32  F00A         	goto	l2693
  5087  001462                     u2560:
  5088  001462  8027               	bsf	___fladd@aexp^0,0,c
  5089  001464                     l2693:
  5090  001464  5027               	movf	___fladd@aexp^0,w,c
  5091  001466  B4D8               	btfsc	status,2,c
  5092  001468  EF38  F00A         	goto	u2571
  5093  00146C  EF3A  F00A         	goto	u2570
  5094  001470                     u2571:
  5095  001470  EF4F  F00A         	goto	l2703
  5096  001474                     u2570:
  5097  001474  2827               	incf	___fladd@aexp^0,w,c
  5098  001476  A4D8               	btfss	status,2,c
  5099  001478  EF40  F00A         	goto	u2581
  5100  00147C  EF42  F00A         	goto	u2580
  5101  001480                     u2581:
  5102  001480  EF4A  F00A         	goto	l2699
  5103  001484                     u2580:
  5104  001484  0E00               	movlw	0
  5105  001486  6E1E               	movwf	___fladd@a^0,c
  5106  001488  0E00               	movlw	0
  5107  00148A  6E1F               	movwf	(___fladd@a+1)^0,c
  5108  00148C  0E00               	movlw	0
  5109  00148E  6E20               	movwf	(___fladd@a+2)^0,c
  5110  001490  0E00               	movlw	0
  5111  001492  6E21               	movwf	(___fladd@a+3)^0,c
  5112  001494                     l2699:
  5113  001494  8E20               	bsf	(___fladd@a+2)^0,7,c
  5114  001496  0E00               	movlw	0
  5115  001498  6E21               	movwf	(___fladd@a+3)^0,c
  5116  00149A  EF57  F00A         	goto	l2705
  5117  00149E                     l2703:
  5118  00149E  0E00               	movlw	0
  5119  0014A0  6E1E               	movwf	___fladd@a^0,c
  5120  0014A2  0E00               	movlw	0
  5121  0014A4  6E1F               	movwf	(___fladd@a+1)^0,c
  5122  0014A6  0E00               	movlw	0
  5123  0014A8  6E20               	movwf	(___fladd@a+2)^0,c
  5124  0014AA  0E00               	movlw	0
  5125  0014AC  6E21               	movwf	(___fladd@a+3)^0,c
  5126  0014AE                     l2705:
  5127  0014AE  5028               	movf	___fladd@bexp^0,w,c
  5128  0014B0  5C27               	subwf	___fladd@aexp^0,w,c
  5129  0014B2  B0D8               	btfsc	status,0,c
  5130  0014B4  EF5E  F00A         	goto	u2591
  5131  0014B8  EF60  F00A         	goto	u2590
  5132  0014BC                     u2591:
  5133  0014BC  EF87  F00A         	goto	l2741
  5134  0014C0                     u2590:
  5135  0014C0  AC26               	btfss	___fladd@signs^0,6,c
  5136  0014C2  EF65  F00A         	goto	u2601
  5137  0014C6  EF67  F00A         	goto	u2600
  5138  0014CA                     u2601:
  5139  0014CA  EF69  F00A         	goto	l2711
  5140  0014CE                     u2600:
  5141  0014CE  0E80               	movlw	128
  5142  0014D0  1A26               	xorwf	___fladd@signs^0,f,c
  5143  0014D2                     l2711:
  5144  0014D2  C028  F029         	movff	___fladd@bexp,___fladd@grs
  5145  0014D6  C027  F028         	movff	___fladd@aexp,___fladd@bexp
  5146  0014DA  C029  F027         	movff	___fladd@grs,___fladd@aexp
  5147  0014DE  C01A  F029         	movff	___fladd@b,___fladd@grs
  5148  0014E2  C01E  F01A         	movff	___fladd@a,___fladd@b
  5149  0014E6  C029  F01E         	movff	___fladd@grs,___fladd@a
  5150  0014EA  C01B  F029         	movff	___fladd@b+1,___fladd@grs
  5151  0014EE  C01F  F01B         	movff	___fladd@a+1,___fladd@b+1
  5152  0014F2  C029  F01F         	movff	___fladd@grs,___fladd@a+1
  5153  0014F6  C01C  F029         	movff	___fladd@b+2,___fladd@grs
  5154  0014FA  C020  F01C         	movff	___fladd@a+2,___fladd@b+2
  5155  0014FE  C029  F020         	movff	___fladd@grs,___fladd@a+2
  5156  001502  C01D  F029         	movff	___fladd@b+3,___fladd@grs
  5157  001506  C021  F01D         	movff	___fladd@a+3,___fladd@b+3
  5158  00150A  C029  F021         	movff	___fladd@grs,___fladd@a+3
  5159  00150E                     l2741:
  5160  00150E  0E00               	movlw	0
  5161  001510  6E29               	movwf	___fladd@grs^0,c
  5162  001512  5028               	movf	___fladd@bexp^0,w,c
  5163  001514  C027  F022         	movff	___fladd@aexp,??___fladd
  5164  001518  6A23               	clrf	(??___fladd+1)^0,c
  5165  00151A  5E22               	subwf	??___fladd^0,f,c
  5166  00151C  0E00               	movlw	0
  5167  00151E  5A23               	subwfb	(??___fladd+1)^0,f,c
  5168  001520  BE23               	btfsc	(??___fladd+1)^0,7,c
  5169  001522  EF9C  F00A         	goto	u2611
  5170  001526  5023               	movf	(??___fladd+1)^0,w,c
  5171  001528  E109               	bnz	u2610
  5172  00152A  0E1A               	movlw	26
  5173  00152C  5C22               	subwf	??___fladd^0,w,c
  5174  00152E  A0D8               	btfss	status,0,c
  5175  001530  EF9C  F00A         	goto	u2611
  5176  001534  EF9E  F00A         	goto	u2610
  5177  001538                     u2611:
  5178  001538  EFD5  F00A         	goto	l862
  5179  00153C                     u2610:
  5180  00153C  501A               	movf	___fladd@b^0,w,c
  5181  00153E  101B               	iorwf	(___fladd@b+1)^0,w,c
  5182  001540  101C               	iorwf	(___fladd@b+2)^0,w,c
  5183  001542  101D               	iorwf	(___fladd@b+3)^0,w,c
  5184  001544  A4D8               	btfss	status,2,c
  5185  001546  EFA7  F00A         	goto	u2621
  5186  00154A  EFAA  F00A         	goto	u2620
  5187  00154E                     u2621:
  5188  00154E  0E01               	movlw	1
  5189  001550  EFAB  F00A         	goto	u2630
  5190  001554                     u2620:
  5191  001554  0E00               	movlw	0
  5192  001556                     u2630:
  5193  001556  6E29               	movwf	___fladd@grs^0,c
  5194  001558  0E00               	movlw	0
  5195  00155A  6E1A               	movwf	___fladd@b^0,c
  5196  00155C  0E00               	movlw	0
  5197  00155E  6E1B               	movwf	(___fladd@b+1)^0,c
  5198  001560  0E00               	movlw	0
  5199  001562  6E1C               	movwf	(___fladd@b+2)^0,c
  5200  001564  0E00               	movlw	0
  5201  001566  6E1D               	movwf	(___fladd@b+3)^0,c
  5202  001568  C027  F028         	movff	___fladd@aexp,___fladd@bexp
  5203  00156C  EFDE  F00A         	goto	l861
  5204  001570                     l863:
  5205  001570  A029               	btfss	___fladd@grs^0,0,c
  5206  001572  EFBD  F00A         	goto	u2641
  5207  001576  EFBF  F00A         	goto	u2640
  5208  00157A                     u2641:
  5209  00157A  EFC5  F00A         	goto	l2753
  5210  00157E                     u2640:
  5211  00157E  90D8               	bcf	status,0,c
  5212  001580  3029               	rrcf	___fladd@grs^0,w,c
  5213  001582  0901               	iorlw	1
  5214  001584  6E29               	movwf	___fladd@grs^0,c
  5215  001586  EFC7  F00A         	goto	l2755
  5216  00158A                     l2753:
  5217  00158A  90D8               	bcf	status,0,c
  5218  00158C  3229               	rrcf	___fladd@grs^0,f,c
  5219  00158E                     l2755:
  5220  00158E  A01A               	btfss	___fladd@b^0,0,c
  5221  001590  EFCC  F00A         	goto	u2651
  5222  001594  EFCE  F00A         	goto	u2650
  5223  001598                     u2651:
  5224  001598  EFCF  F00A         	goto	l2759
  5225  00159C                     u2650:
  5226  00159C  8E29               	bsf	___fladd@grs^0,7,c
  5227  00159E                     l2759:
  5228  00159E  341D               	rlcf	(___fladd@b+3)^0,w,c
  5229  0015A0  321D               	rrcf	(___fladd@b+3)^0,f,c
  5230  0015A2  321C               	rrcf	(___fladd@b+2)^0,f,c
  5231  0015A4  321B               	rrcf	(___fladd@b+1)^0,f,c
  5232  0015A6  321A               	rrcf	___fladd@b^0,f,c
  5233  0015A8  2A28               	incf	___fladd@bexp^0,f,c
  5234  0015AA                     l862:
  5235  0015AA  5027               	movf	___fladd@aexp^0,w,c
  5236  0015AC  5C28               	subwf	___fladd@bexp^0,w,c
  5237  0015AE  A0D8               	btfss	status,0,c
  5238  0015B0  EFDC  F00A         	goto	u2661
  5239  0015B4  EFDE  F00A         	goto	u2660
  5240  0015B8                     u2661:
  5241  0015B8  EFB8  F00A         	goto	l863
  5242  0015BC                     u2660:
  5243  0015BC                     l861:
  5244  0015BC  BC26               	btfsc	___fladd@signs^0,6,c
  5245  0015BE  EFE3  F00A         	goto	u2671
  5246  0015C2  EFE5  F00A         	goto	u2670
  5247  0015C6                     u2671:
  5248  0015C6  EF25  F00B         	goto	l2787
  5249  0015CA                     u2670:
  5250  0015CA  5028               	movf	___fladd@bexp^0,w,c
  5251  0015CC  A4D8               	btfss	status,2,c
  5252  0015CE  EFEB  F00A         	goto	u2681
  5253  0015D2  EFED  F00A         	goto	u2680
  5254  0015D6                     u2681:
  5255  0015D6  EFF7  F00A         	goto	l2769
  5256  0015DA                     u2680:
  5257  0015DA  0E00               	movlw	0
  5258  0015DC  6E1A               	movwf	?___fladd^0,c
  5259  0015DE  0E00               	movlw	0
  5260  0015E0  6E1B               	movwf	(?___fladd+1)^0,c
  5261  0015E2  0E00               	movlw	0
  5262  0015E4  6E1C               	movwf	(?___fladd+2)^0,c
  5263  0015E6  0E00               	movlw	0
  5264  0015E8  6E1D               	movwf	(?___fladd+3)^0,c
  5265  0015EA  EF46  F00C         	goto	l870
  5266  0015EE                     l2769:
  5267  0015EE  501E               	movf	___fladd@a^0,w,c
  5268  0015F0  261A               	addwf	___fladd@b^0,f,c
  5269  0015F2  501F               	movf	(___fladd@a+1)^0,w,c
  5270  0015F4  221B               	addwfc	(___fladd@b+1)^0,f,c
  5271  0015F6  5020               	movf	(___fladd@a+2)^0,w,c
  5272  0015F8  221C               	addwfc	(___fladd@b+2)^0,f,c
  5273  0015FA  5021               	movf	(___fladd@a+3)^0,w,c
  5274  0015FC  221D               	addwfc	(___fladd@b+3)^0,f,c
  5275  0015FE  A01D               	btfss	(___fladd@b+3)^0,0,c
  5276  001600  EF04  F00B         	goto	u2691
  5277  001604  EF06  F00B         	goto	u2690
  5278  001608                     u2691:
  5279  001608  EFB2  F00B         	goto	l2823
  5280  00160C                     u2690:
  5281  00160C  A029               	btfss	___fladd@grs^0,0,c
  5282  00160E  EF0B  F00B         	goto	u2701
  5283  001612  EF0D  F00B         	goto	u2700
  5284  001616                     u2701:
  5285  001616  EF13  F00B         	goto	l2777
  5286  00161A                     u2700:
  5287  00161A  90D8               	bcf	status,0,c
  5288  00161C  3029               	rrcf	___fladd@grs^0,w,c
  5289  00161E  0901               	iorlw	1
  5290  001620  6E29               	movwf	___fladd@grs^0,c
  5291  001622  EF15  F00B         	goto	l2779
  5292  001626                     l2777:
  5293  001626  90D8               	bcf	status,0,c
  5294  001628  3229               	rrcf	___fladd@grs^0,f,c
  5295  00162A                     l2779:
  5296  00162A  A01A               	btfss	___fladd@b^0,0,c
  5297  00162C  EF1A  F00B         	goto	u2711
  5298  001630  EF1C  F00B         	goto	u2710
  5299  001634                     u2711:
  5300  001634  EF1D  F00B         	goto	l2783
  5301  001638                     u2710:
  5302  001638  8E29               	bsf	___fladd@grs^0,7,c
  5303  00163A                     l2783:
  5304  00163A  341D               	rlcf	(___fladd@b+3)^0,w,c
  5305  00163C  321D               	rrcf	(___fladd@b+3)^0,f,c
  5306  00163E  321C               	rrcf	(___fladd@b+2)^0,f,c
  5307  001640  321B               	rrcf	(___fladd@b+1)^0,f,c
  5308  001642  321A               	rrcf	___fladd@b^0,f,c
  5309  001644  2A28               	incf	___fladd@bexp^0,f,c
  5310  001646  EFB2  F00B         	goto	l2823
  5311  00164A                     l2787:
  5312  00164A  501E               	movf	___fladd@a^0,w,c
  5313  00164C  5C1A               	subwf	___fladd@b^0,w,c
  5314  00164E  501F               	movf	(___fladd@a+1)^0,w,c
  5315  001650  581B               	subwfb	(___fladd@b+1)^0,w,c
  5316  001652  5020               	movf	(___fladd@a+2)^0,w,c
  5317  001654  581C               	subwfb	(___fladd@b+2)^0,w,c
  5318  001656  501D               	movf	(___fladd@b+3)^0,w,c
  5319  001658  0A80               	xorlw	128
  5320  00165A  6E22               	movwf	??___fladd^0,c
  5321  00165C  5021               	movf	(___fladd@a+3)^0,w,c
  5322  00165E  0A80               	xorlw	128
  5323  001660  5822               	subwfb	??___fladd^0,w,c
  5324  001662  B0D8               	btfsc	status,0,c
  5325  001664  EF36  F00B         	goto	u2721
  5326  001668  EF38  F00B         	goto	u2720
  5327  00166C                     u2721:
  5328  00166C  EF63  F00B         	goto	l2797
  5329  001670                     u2720:
  5330  001670  501A               	movf	___fladd@b^0,w,c
  5331  001672  5C1E               	subwf	___fladd@a^0,w,c
  5332  001674  6E22               	movwf	??___fladd^0,c
  5333  001676  501B               	movf	(___fladd@b+1)^0,w,c
  5334  001678  581F               	subwfb	(___fladd@a+1)^0,w,c
  5335  00167A  6E23               	movwf	(??___fladd+1)^0,c
  5336  00167C  501C               	movf	(___fladd@b+2)^0,w,c
  5337  00167E  5820               	subwfb	(___fladd@a+2)^0,w,c
  5338  001680  6E24               	movwf	(??___fladd+2)^0,c
  5339  001682  501D               	movf	(___fladd@b+3)^0,w,c
  5340  001684  5821               	subwfb	(___fladd@a+3)^0,w,c
  5341  001686  6E25               	movwf	(??___fladd+3)^0,c
  5342  001688  0EFF               	movlw	255
  5343  00168A  2422               	addwf	??___fladd^0,w,c
  5344  00168C  6E1A               	movwf	___fladd@b^0,c
  5345  00168E  0EFF               	movlw	255
  5346  001690  2023               	addwfc	(??___fladd+1)^0,w,c
  5347  001692  6E1B               	movwf	(___fladd@b+1)^0,c
  5348  001694  0EFF               	movlw	255
  5349  001696  2024               	addwfc	(??___fladd+2)^0,w,c
  5350  001698  6E1C               	movwf	(___fladd@b+2)^0,c
  5351  00169A  0EFF               	movlw	255
  5352  00169C  2025               	addwfc	(??___fladd+3)^0,w,c
  5353  00169E  6E1D               	movwf	(___fladd@b+3)^0,c
  5354  0016A0  0E80               	movlw	128
  5355  0016A2  1A26               	xorwf	___fladd@signs^0,f,c
  5356  0016A4  6C29               	negf	___fladd@grs^0,c
  5357  0016A6  5029               	movf	___fladd@grs^0,w,c
  5358  0016A8  A4D8               	btfss	status,2,c
  5359  0016AA  EF59  F00B         	goto	u2731
  5360  0016AE  EF5B  F00B         	goto	u2730
  5361  0016B2                     u2731:
  5362  0016B2  EF6B  F00B         	goto	l878
  5363  0016B6                     u2730:
  5364  0016B6  0E01               	movlw	1
  5365  0016B8  261A               	addwf	___fladd@b^0,f,c
  5366  0016BA  0E00               	movlw	0
  5367  0016BC  221B               	addwfc	(___fladd@b+1)^0,f,c
  5368  0016BE  221C               	addwfc	(___fladd@b+2)^0,f,c
  5369  0016C0  221D               	addwfc	(___fladd@b+3)^0,f,c
  5370  0016C2  EF6B  F00B         	goto	l878
  5371  0016C6                     l2797:
  5372  0016C6  501E               	movf	___fladd@a^0,w,c
  5373  0016C8  5E1A               	subwf	___fladd@b^0,f,c
  5374  0016CA  501F               	movf	(___fladd@a+1)^0,w,c
  5375  0016CC  5A1B               	subwfb	(___fladd@b+1)^0,f,c
  5376  0016CE  5020               	movf	(___fladd@a+2)^0,w,c
  5377  0016D0  5A1C               	subwfb	(___fladd@b+2)^0,f,c
  5378  0016D2  5021               	movf	(___fladd@a+3)^0,w,c
  5379  0016D4  5A1D               	subwfb	(___fladd@b+3)^0,f,c
  5380  0016D6                     l878:
  5381  0016D6  501A               	movf	___fladd@b^0,w,c
  5382  0016D8  101B               	iorwf	(___fladd@b+1)^0,w,c
  5383  0016DA  101C               	iorwf	(___fladd@b+2)^0,w,c
  5384  0016DC  101D               	iorwf	(___fladd@b+3)^0,w,c
  5385  0016DE  A4D8               	btfss	status,2,c
  5386  0016E0  EF74  F00B         	goto	u2741
  5387  0016E4  EF76  F00B         	goto	u2740
  5388  0016E8                     u2741:
  5389  0016E8  EFAB  F00B         	goto	l2821
  5390  0016EC                     u2740:
  5391  0016EC  5029               	movf	___fladd@grs^0,w,c
  5392  0016EE  A4D8               	btfss	status,2,c
  5393  0016F0  EF7C  F00B         	goto	u2751
  5394  0016F4  EF7E  F00B         	goto	u2750
  5395  0016F8                     u2751:
  5396  0016F8  EFAB  F00B         	goto	l2821
  5397  0016FC                     u2750:
  5398  0016FC  0E00               	movlw	0
  5399  0016FE  6E1A               	movwf	?___fladd^0,c
  5400  001700  0E00               	movlw	0
  5401  001702  6E1B               	movwf	(?___fladd+1)^0,c
  5402  001704  0E00               	movlw	0
  5403  001706  6E1C               	movwf	(?___fladd+2)^0,c
  5404  001708  0E00               	movlw	0
  5405  00170A  6E1D               	movwf	(?___fladd+3)^0,c
  5406  00170C  EF46  F00C         	goto	l870
  5407  001710                     l2805:
  5408  001710  90D8               	bcf	status,0,c
  5409  001712  361A               	rlcf	___fladd@b^0,f,c
  5410  001714  361B               	rlcf	(___fladd@b+1)^0,f,c
  5411  001716  361C               	rlcf	(___fladd@b+2)^0,f,c
  5412  001718  361D               	rlcf	(___fladd@b+3)^0,f,c
  5413  00171A  AE29               	btfss	___fladd@grs^0,7,c
  5414  00171C  EF92  F00B         	goto	u2761
  5415  001720  EF94  F00B         	goto	u2760
  5416  001724                     u2761:
  5417  001724  EF95  F00B         	goto	l2811
  5418  001728                     u2760:
  5419  001728  801A               	bsf	___fladd@b^0,0,c
  5420  00172A                     l2811:
  5421  00172A  A029               	btfss	___fladd@grs^0,0,c
  5422  00172C  EF9A  F00B         	goto	u2771
  5423  001730  EF9C  F00B         	goto	u2770
  5424  001734                     u2771:
  5425  001734  EFA0  F00B         	goto	l2815
  5426  001738                     u2770:
  5427  001738  80D8               	bsf	status,0,c
  5428  00173A  3629               	rlcf	___fladd@grs^0,f,c
  5429  00173C  EFA2  F00B         	goto	l2817
  5430  001740                     l2815:
  5431  001740  90D8               	bcf	status,0,c
  5432  001742  3629               	rlcf	___fladd@grs^0,f,c
  5433  001744                     l2817:
  5434  001744  5028               	movf	___fladd@bexp^0,w,c
  5435  001746  B4D8               	btfsc	status,2,c
  5436  001748  EFA8  F00B         	goto	u2781
  5437  00174C  EFAA  F00B         	goto	u2780
  5438  001750                     u2781:
  5439  001750  EFAB  F00B         	goto	l2821
  5440  001754                     u2780:
  5441  001754  0628               	decf	___fladd@bexp^0,f,c
  5442  001756                     l2821:
  5443  001756  AE1C               	btfss	(___fladd@b+2)^0,7,c
  5444  001758  EFB0  F00B         	goto	u2791
  5445  00175C  EFB2  F00B         	goto	u2790
  5446  001760                     u2791:
  5447  001760  EF88  F00B         	goto	l2805
  5448  001764                     u2790:
  5449  001764                     l2823:
  5450  001764  0E00               	movlw	0
  5451  001766  6E27               	movwf	___fladd@aexp^0,c
  5452  001768  AE29               	btfss	___fladd@grs^0,7,c
  5453  00176A  EFB9  F00B         	goto	u2801
  5454  00176E  EFBB  F00B         	goto	u2800
  5455  001772                     u2801:
  5456  001772  EFD3  F00B         	goto	l887
  5457  001776                     u2800:
  5458  001776  C029  F022         	movff	___fladd@grs,??___fladd
  5459  00177A  0E7F               	movlw	127
  5460  00177C  1622               	andwf	??___fladd^0,f,c
  5461  00177E  B4D8               	btfsc	status,2,c
  5462  001780  EFC4  F00B         	goto	u2811
  5463  001784  EFC6  F00B         	goto	u2810
  5464  001788                     u2811:
  5465  001788  EFCA  F00B         	goto	l888
  5466  00178C                     u2810:
  5467  00178C                     l2829:
  5468  00178C  0E01               	movlw	1
  5469  00178E  6E27               	movwf	___fladd@aexp^0,c
  5470  001790  EFD3  F00B         	goto	l887
  5471  001794                     l888:
  5472  001794  A01A               	btfss	___fladd@b^0,0,c
  5473  001796  EFCF  F00B         	goto	u2821
  5474  00179A  EFD1  F00B         	goto	u2820
  5475  00179E                     u2821:
  5476  00179E  EFD3  F00B         	goto	l887
  5477  0017A2                     u2820:
  5478  0017A2  EFC6  F00B         	goto	l2829
  5479  0017A6                     l887:
  5480  0017A6  5027               	movf	___fladd@aexp^0,w,c
  5481  0017A8  B4D8               	btfsc	status,2,c
  5482  0017AA  EFD9  F00B         	goto	u2831
  5483  0017AE  EFDB  F00B         	goto	u2830
  5484  0017B2                     u2831:
  5485  0017B2  EF06  F00C         	goto	l2841
  5486  0017B6                     u2830:
  5487  0017B6  0E01               	movlw	1
  5488  0017B8  261A               	addwf	___fladd@b^0,f,c
  5489  0017BA  0E00               	movlw	0
  5490  0017BC  221B               	addwfc	(___fladd@b+1)^0,f,c
  5491  0017BE  221C               	addwfc	(___fladd@b+2)^0,f,c
  5492  0017C0  221D               	addwfc	(___fladd@b+3)^0,f,c
  5493  0017C2  A01D               	btfss	(___fladd@b+3)^0,0,c
  5494  0017C4  EFE6  F00B         	goto	u2841
  5495  0017C8  EFE8  F00B         	goto	u2840
  5496  0017CC                     u2841:
  5497  0017CC  EF06  F00C         	goto	l2841
  5498  0017D0                     u2840:
  5499  0017D0  C01A  F022         	movff	___fladd@b,??___fladd
  5500  0017D4  C01B  F023         	movff	___fladd@b+1,??___fladd+1
  5501  0017D8  C01C  F024         	movff	___fladd@b+2,??___fladd+2
  5502  0017DC  C01D  F025         	movff	___fladd@b+3,??___fladd+3
  5503  0017E0  3425               	rlcf	(??___fladd+3)^0,w,c
  5504  0017E2  3225               	rrcf	(??___fladd+3)^0,f,c
  5505  0017E4  3224               	rrcf	(??___fladd+2)^0,f,c
  5506  0017E6  3223               	rrcf	(??___fladd+1)^0,f,c
  5507  0017E8  3222               	rrcf	??___fladd^0,f,c
  5508  0017EA  C022  F01A         	movff	??___fladd,___fladd@b
  5509  0017EE  C023  F01B         	movff	??___fladd+1,___fladd@b+1
  5510  0017F2  C024  F01C         	movff	??___fladd+2,___fladd@b+2
  5511  0017F6  C025  F01D         	movff	??___fladd+3,___fladd@b+3
  5512  0017FA  2828               	incf	___fladd@bexp^0,w,c
  5513  0017FC  B4D8               	btfsc	status,2,c
  5514  0017FE  EF03  F00C         	goto	u2851
  5515  001802  EF05  F00C         	goto	u2850
  5516  001806                     u2851:
  5517  001806  EF06  F00C         	goto	l2841
  5518  00180A                     u2850:
  5519  00180A  2A28               	incf	___fladd@bexp^0,f,c
  5520  00180C                     l2841:
  5521  00180C  2828               	incf	___fladd@bexp^0,w,c
  5522  00180E  B4D8               	btfsc	status,2,c
  5523  001810  EF0C  F00C         	goto	u2861
  5524  001814  EF0E  F00C         	goto	u2860
  5525  001818                     u2861:
  5526  001818  EF16  F00C         	goto	l2845
  5527  00181C                     u2860:
  5528  00181C  5028               	movf	___fladd@bexp^0,w,c
  5529  00181E  A4D8               	btfss	status,2,c
  5530  001820  EF14  F00C         	goto	u2871
  5531  001824  EF16  F00C         	goto	u2870
  5532  001828                     u2871:
  5533  001828  EF28  F00C         	goto	l2849
  5534  00182C                     u2870:
  5535  00182C                     l2845:
  5536  00182C  0E00               	movlw	0
  5537  00182E  6E1A               	movwf	___fladd@b^0,c
  5538  001830  0E00               	movlw	0
  5539  001832  6E1B               	movwf	(___fladd@b+1)^0,c
  5540  001834  0E00               	movlw	0
  5541  001836  6E1C               	movwf	(___fladd@b+2)^0,c
  5542  001838  0E00               	movlw	0
  5543  00183A  6E1D               	movwf	(___fladd@b+3)^0,c
  5544  00183C  5028               	movf	___fladd@bexp^0,w,c
  5545  00183E  A4D8               	btfss	status,2,c
  5546  001840  EF24  F00C         	goto	u2881
  5547  001844  EF26  F00C         	goto	u2880
  5548  001848                     u2881:
  5549  001848  EF28  F00C         	goto	l2849
  5550  00184C                     u2880:
  5551  00184C  0E00               	movlw	0
  5552  00184E  6E26               	movwf	___fladd@signs^0,c
  5553  001850                     l2849:
  5554  001850  A028               	btfss	___fladd@bexp^0,0,c
  5555  001852  EF2D  F00C         	goto	u2891
  5556  001856  EF2F  F00C         	goto	u2890
  5557  00185A                     u2891:
  5558  00185A  EF32  F00C         	goto	l2853
  5559  00185E                     u2890:
  5560  00185E  8E1C               	bsf	(___fladd@b+2)^0,7,c
  5561  001860  EF33  F00C         	goto	l2855
  5562  001864                     l2853:
  5563  001864  9E1C               	bcf	(___fladd@b+2)^0,7,c
  5564  001866                     l2855:
  5565  001866  90D8               	bcf	status,0,c
  5566  001868  3028               	rrcf	___fladd@bexp^0,w,c
  5567  00186A  6E1D               	movwf	(___fladd@b+3)^0,c
  5568  00186C  AE26               	btfss	___fladd@signs^0,7,c
  5569  00186E  EF3B  F00C         	goto	u2901
  5570  001872  EF3D  F00C         	goto	u2900
  5571  001876                     u2901:
  5572  001876  EF3E  F00C         	goto	l2861
  5573  00187A                     u2900:
  5574  00187A  8E1D               	bsf	(___fladd@b+3)^0,7,c
  5575  00187C                     l2861:
  5576  00187C  C01A  F01A         	movff	___fladd@b,?___fladd
  5577  001880  C01B  F01B         	movff	___fladd@b+1,?___fladd+1
  5578  001884  C01C  F01C         	movff	___fladd@b+2,?___fladd+2
  5579  001888  C01D  F01D         	movff	___fladd@b+3,?___fladd+3
  5580  00188C                     l870:
  5581  00188C  0012               	return		;funcret
  5582  00188E                     __end_of___fladd:
  5583                           	opt callstack 0
  5584                           
  5585 ;; *************** function ___flneg *****************
  5586 ;; Defined at:
  5587 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
  5588 ;; Parameters:    Size  Location     Type
  5589 ;;  f1              4    0[COMRAM] unsigned char 
  5590 ;; Auto vars:     Size  Location     Type
  5591 ;;		None
  5592 ;; Return value:  Size  Location     Type
  5593 ;;                  4    0[COMRAM] unsigned char 
  5594 ;; Registers used:
  5595 ;;		wreg, status,2, status,0
  5596 ;; Tracked objects:
  5597 ;;		On entry : 0/0
  5598 ;;		On exit  : 0/0
  5599 ;;		Unchanged: 0/0
  5600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5601 ;;      Params:         4       0       0       0       0       0       0       0       0
  5602 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5603 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5604 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5605 ;;Total ram usage:        4 bytes
  5606 ;; Hardware stack levels used:    1
  5607 ;; This function calls:
  5608 ;;		Nothing
  5609 ;; This function is called by:
  5610 ;;		_efgtoa
  5611 ;; This function uses a non-reentrant model
  5612 ;;
  5613                           
  5614                           	psect	text19
  5615  003808                     __ptext19:
  5616                           	opt callstack 0
  5617  003808                     ___flneg:
  5618                           	opt callstack 26
  5619  003808  5001               	movf	___flneg@f1^0,w,c
  5620  00380A  1002               	iorwf	(___flneg@f1+1)^0,w,c
  5621  00380C  1003               	iorwf	(___flneg@f1+2)^0,w,c
  5622  00380E  1004               	iorwf	(___flneg@f1+3)^0,w,c
  5623  003810  B4D8               	btfsc	status,2,c
  5624  003812  EF0D  F01C         	goto	u3831
  5625  003816  EF0F  F01C         	goto	u3830
  5626  00381A                     u3831:
  5627  00381A  EF17  F01C         	goto	l3363
  5628  00381E                     u3830:
  5629  00381E  0E00               	movlw	0
  5630  003820  1A01               	xorwf	___flneg@f1^0,f,c
  5631  003822  0E00               	movlw	0
  5632  003824  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  5633  003826  0E00               	movlw	0
  5634  003828  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  5635  00382A  0E80               	movlw	128
  5636  00382C  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  5637  00382E                     l3363:
  5638  00382E  C001  F001         	movff	___flneg@f1,?___flneg
  5639  003832  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  5640  003836  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  5641  00383A  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  5642  00383E  0012               	return		;funcret
  5643  003840                     __end_of___flneg:
  5644                           	opt callstack 0
  5645                           
  5646 ;; *************** function ___flge *****************
  5647 ;; Defined at:
  5648 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
  5649 ;; Parameters:    Size  Location     Type
  5650 ;;  ff1             4   39[COMRAM] unsigned char 
  5651 ;;  ff2             4   43[COMRAM] unsigned char 
  5652 ;; Auto vars:     Size  Location     Type
  5653 ;;		None
  5654 ;; Return value:  Size  Location     Type
  5655 ;;		None               void
  5656 ;; Registers used:
  5657 ;;		wreg, status,2, status,0
  5658 ;; Tracked objects:
  5659 ;;		On entry : 0/0
  5660 ;;		On exit  : 0/0
  5661 ;;		Unchanged: 0/0
  5662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5663 ;;      Params:         8       0       0       0       0       0       0       0       0
  5664 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5665 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5666 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5667 ;;Total ram usage:       12 bytes
  5668 ;; Hardware stack levels used:    1
  5669 ;; This function calls:
  5670 ;;		Nothing
  5671 ;; This function is called by:
  5672 ;;		_efgtoa
  5673 ;; This function uses a non-reentrant model
  5674 ;;
  5675                           
  5676                           	psect	text20
  5677  002C14                     __ptext20:
  5678                           	opt callstack 0
  5679  002C14                     ___flge:
  5680                           	opt callstack 26
  5681  002C14  0E00               	movlw	0
  5682  002C16  1428               	andwf	___flge@ff1^0,w,c
  5683  002C18  6E30               	movwf	??___flge^0,c
  5684  002C1A  0E00               	movlw	0
  5685  002C1C  1429               	andwf	(___flge@ff1+1)^0,w,c
  5686  002C1E  6E31               	movwf	(??___flge+1)^0,c
  5687  002C20  0E80               	movlw	128
  5688  002C22  142A               	andwf	(___flge@ff1+2)^0,w,c
  5689  002C24  6E32               	movwf	(??___flge+2)^0,c
  5690  002C26  0E7F               	movlw	127
  5691  002C28  142B               	andwf	(___flge@ff1+3)^0,w,c
  5692  002C2A  6E33               	movwf	(??___flge+3)^0,c
  5693  002C2C  5030               	movf	??___flge^0,w,c
  5694  002C2E  1031               	iorwf	(??___flge+1)^0,w,c
  5695  002C30  1032               	iorwf	(??___flge+2)^0,w,c
  5696  002C32  1033               	iorwf	(??___flge+3)^0,w,c
  5697  002C34  A4D8               	btfss	status,2,c
  5698  002C36  EF1F  F016         	goto	u3781
  5699  002C3A  EF21  F016         	goto	u3780
  5700  002C3E                     u3781:
  5701  002C3E  EF29  F016         	goto	l3341
  5702  002C42                     u3780:
  5703  002C42  0E00               	movlw	0
  5704  002C44  6E28               	movwf	___flge@ff1^0,c
  5705  002C46  0E00               	movlw	0
  5706  002C48  6E29               	movwf	(___flge@ff1+1)^0,c
  5707  002C4A  0E00               	movlw	0
  5708  002C4C  6E2A               	movwf	(___flge@ff1+2)^0,c
  5709  002C4E  0E00               	movlw	0
  5710  002C50  6E2B               	movwf	(___flge@ff1+3)^0,c
  5711  002C52                     l3341:
  5712  002C52  0E00               	movlw	0
  5713  002C54  142C               	andwf	___flge@ff2^0,w,c
  5714  002C56  6E30               	movwf	??___flge^0,c
  5715  002C58  0E00               	movlw	0
  5716  002C5A  142D               	andwf	(___flge@ff2+1)^0,w,c
  5717  002C5C  6E31               	movwf	(??___flge+1)^0,c
  5718  002C5E  0E80               	movlw	128
  5719  002C60  142E               	andwf	(___flge@ff2+2)^0,w,c
  5720  002C62  6E32               	movwf	(??___flge+2)^0,c
  5721  002C64  0E7F               	movlw	127
  5722  002C66  142F               	andwf	(___flge@ff2+3)^0,w,c
  5723  002C68  6E33               	movwf	(??___flge+3)^0,c
  5724  002C6A  5030               	movf	??___flge^0,w,c
  5725  002C6C  1031               	iorwf	(??___flge+1)^0,w,c
  5726  002C6E  1032               	iorwf	(??___flge+2)^0,w,c
  5727  002C70  1033               	iorwf	(??___flge+3)^0,w,c
  5728  002C72  A4D8               	btfss	status,2,c
  5729  002C74  EF3E  F016         	goto	u3791
  5730  002C78  EF40  F016         	goto	u3790
  5731  002C7C                     u3791:
  5732  002C7C  EF48  F016         	goto	l3345
  5733  002C80                     u3790:
  5734  002C80  0E00               	movlw	0
  5735  002C82  6E2C               	movwf	___flge@ff2^0,c
  5736  002C84  0E00               	movlw	0
  5737  002C86  6E2D               	movwf	(___flge@ff2+1)^0,c
  5738  002C88  0E00               	movlw	0
  5739  002C8A  6E2E               	movwf	(___flge@ff2+2)^0,c
  5740  002C8C  0E00               	movlw	0
  5741  002C8E  6E2F               	movwf	(___flge@ff2+3)^0,c
  5742  002C90                     l3345:
  5743  002C90  AE2B               	btfss	(___flge@ff1+3)^0,7,c
  5744  002C92  EF4D  F016         	goto	u3801
  5745  002C96  EF4F  F016         	goto	u3800
  5746  002C9A                     u3801:
  5747  002C9A  EF58  F016         	goto	l3349
  5748  002C9E                     u3800:
  5749  002C9E  6C28               	negf	___flge@ff1^0,c
  5750  002CA0  1E29               	comf	(___flge@ff1+1)^0,f,c
  5751  002CA2  B0D8               	btfsc	status,0,c
  5752  002CA4  2A29               	incf	(___flge@ff1+1)^0,f,c
  5753  002CA6  1E2A               	comf	(___flge@ff1+2)^0,f,c
  5754  002CA8  B0D8               	btfsc	status,0,c
  5755  002CAA  2A2A               	incf	(___flge@ff1+2)^0,f,c
  5756  002CAC  0E80               	movlw	128
  5757  002CAE  562B               	subfwb	(___flge@ff1+3)^0,f,c
  5758  002CB0                     l3349:
  5759  002CB0  AE2F               	btfss	(___flge@ff2+3)^0,7,c
  5760  002CB2  EF5D  F016         	goto	u3811
  5761  002CB6  EF5F  F016         	goto	u3810
  5762  002CBA                     u3811:
  5763  002CBA  EF68  F016         	goto	l598
  5764  002CBE                     u3810:
  5765  002CBE  6C2C               	negf	___flge@ff2^0,c
  5766  002CC0  1E2D               	comf	(___flge@ff2+1)^0,f,c
  5767  002CC2  B0D8               	btfsc	status,0,c
  5768  002CC4  2A2D               	incf	(___flge@ff2+1)^0,f,c
  5769  002CC6  1E2E               	comf	(___flge@ff2+2)^0,f,c
  5770  002CC8  B0D8               	btfsc	status,0,c
  5771  002CCA  2A2E               	incf	(___flge@ff2+2)^0,f,c
  5772  002CCC  0E80               	movlw	128
  5773  002CCE  562F               	subfwb	(___flge@ff2+3)^0,f,c
  5774  002CD0                     l598:
  5775  002CD0  0E00               	movlw	0
  5776  002CD2  1A28               	xorwf	___flge@ff1^0,f,c
  5777  002CD4  0E00               	movlw	0
  5778  002CD6  1A29               	xorwf	(___flge@ff1+1)^0,f,c
  5779  002CD8  0E00               	movlw	0
  5780  002CDA  1A2A               	xorwf	(___flge@ff1+2)^0,f,c
  5781  002CDC  0E80               	movlw	128
  5782  002CDE  1A2B               	xorwf	(___flge@ff1+3)^0,f,c
  5783  002CE0  0E00               	movlw	0
  5784  002CE2  1A2C               	xorwf	___flge@ff2^0,f,c
  5785  002CE4  0E00               	movlw	0
  5786  002CE6  1A2D               	xorwf	(___flge@ff2+1)^0,f,c
  5787  002CE8  0E00               	movlw	0
  5788  002CEA  1A2E               	xorwf	(___flge@ff2+2)^0,f,c
  5789  002CEC  0E80               	movlw	128
  5790  002CEE  1A2F               	xorwf	(___flge@ff2+3)^0,f,c
  5791  002CF0  502C               	movf	___flge@ff2^0,w,c
  5792  002CF2  5C28               	subwf	___flge@ff1^0,w,c
  5793  002CF4  502D               	movf	(___flge@ff2+1)^0,w,c
  5794  002CF6  5829               	subwfb	(___flge@ff1+1)^0,w,c
  5795  002CF8  502E               	movf	(___flge@ff2+2)^0,w,c
  5796  002CFA  582A               	subwfb	(___flge@ff1+2)^0,w,c
  5797  002CFC  502F               	movf	(___flge@ff2+3)^0,w,c
  5798  002CFE  582B               	subwfb	(___flge@ff1+3)^0,w,c
  5799  002D00  B0D8               	btfsc	status,0,c
  5800  002D02  EF85  F016         	goto	u3821
  5801  002D06  EF87  F016         	goto	u3820
  5802  002D0A                     u3821:
  5803  002D0A  EF8A  F016         	goto	l3355
  5804  002D0E                     u3820:
  5805  002D0E  90D8               	bcf	status,0,c
  5806  002D10  EF8B  F016         	goto	l603
  5807  002D14                     l3355:
  5808  002D14  80D8               	bsf	status,0,c
  5809  002D16                     l603:
  5810  002D16  0012               	return		;funcret
  5811  002D18                     __end_of___flge:
  5812                           	opt callstack 0
  5813                           
  5814 ;; *************** function ___fleq *****************
  5815 ;; Defined at:
  5816 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  5817 ;; Parameters:    Size  Location     Type
  5818 ;;  ff1             4    0[COMRAM] unsigned char 
  5819 ;;  ff2             4    4[COMRAM] unsigned char 
  5820 ;; Auto vars:     Size  Location     Type
  5821 ;;		None
  5822 ;; Return value:  Size  Location     Type
  5823 ;;		None               void
  5824 ;; Registers used:
  5825 ;;		wreg, status,2, status,0
  5826 ;; Tracked objects:
  5827 ;;		On entry : 0/0
  5828 ;;		On exit  : 0/0
  5829 ;;		Unchanged: 0/0
  5830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5831 ;;      Params:         8       0       0       0       0       0       0       0       0
  5832 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5833 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5834 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5835 ;;Total ram usage:       12 bytes
  5836 ;; Hardware stack levels used:    1
  5837 ;; This function calls:
  5838 ;;		Nothing
  5839 ;; This function is called by:
  5840 ;;		_efgtoa
  5841 ;; This function uses a non-reentrant model
  5842 ;;
  5843                           
  5844                           	psect	text21
  5845  0032A4                     __ptext21:
  5846                           	opt callstack 0
  5847  0032A4                     ___fleq:
  5848                           	opt callstack 26
  5849  0032A4  0E00               	movlw	0
  5850  0032A6  1401               	andwf	___fleq@ff1^0,w,c
  5851  0032A8  6E09               	movwf	??___fleq^0,c
  5852  0032AA  0E00               	movlw	0
  5853  0032AC  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5854  0032AE  6E0A               	movwf	(??___fleq+1)^0,c
  5855  0032B0  0E80               	movlw	128
  5856  0032B2  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5857  0032B4  6E0B               	movwf	(??___fleq+2)^0,c
  5858  0032B6  0E7F               	movlw	127
  5859  0032B8  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5860  0032BA  6E0C               	movwf	(??___fleq+3)^0,c
  5861  0032BC  5009               	movf	??___fleq^0,w,c
  5862  0032BE  100A               	iorwf	(??___fleq+1)^0,w,c
  5863  0032C0  100B               	iorwf	(??___fleq+2)^0,w,c
  5864  0032C2  100C               	iorwf	(??___fleq+3)^0,w,c
  5865  0032C4  A4D8               	btfss	status,2,c
  5866  0032C6  EF67  F019         	goto	u3751
  5867  0032CA  EF69  F019         	goto	u3750
  5868  0032CE                     u3751:
  5869  0032CE  EF71  F019         	goto	l3325
  5870  0032D2                     u3750:
  5871  0032D2  0E00               	movlw	0
  5872  0032D4  6E01               	movwf	___fleq@ff1^0,c
  5873  0032D6  0E00               	movlw	0
  5874  0032D8  6E02               	movwf	(___fleq@ff1+1)^0,c
  5875  0032DA  0E00               	movlw	0
  5876  0032DC  6E03               	movwf	(___fleq@ff1+2)^0,c
  5877  0032DE  0E00               	movlw	0
  5878  0032E0  6E04               	movwf	(___fleq@ff1+3)^0,c
  5879  0032E2                     l3325:
  5880  0032E2  0E00               	movlw	0
  5881  0032E4  1405               	andwf	___fleq@ff2^0,w,c
  5882  0032E6  6E09               	movwf	??___fleq^0,c
  5883  0032E8  0E00               	movlw	0
  5884  0032EA  1406               	andwf	(___fleq@ff2+1)^0,w,c
  5885  0032EC  6E0A               	movwf	(??___fleq+1)^0,c
  5886  0032EE  0E80               	movlw	128
  5887  0032F0  1407               	andwf	(___fleq@ff2+2)^0,w,c
  5888  0032F2  6E0B               	movwf	(??___fleq+2)^0,c
  5889  0032F4  0E7F               	movlw	127
  5890  0032F6  1408               	andwf	(___fleq@ff2+3)^0,w,c
  5891  0032F8  6E0C               	movwf	(??___fleq+3)^0,c
  5892  0032FA  5009               	movf	??___fleq^0,w,c
  5893  0032FC  100A               	iorwf	(??___fleq+1)^0,w,c
  5894  0032FE  100B               	iorwf	(??___fleq+2)^0,w,c
  5895  003300  100C               	iorwf	(??___fleq+3)^0,w,c
  5896  003302  A4D8               	btfss	status,2,c
  5897  003304  EF86  F019         	goto	u3761
  5898  003308  EF88  F019         	goto	u3760
  5899  00330C                     u3761:
  5900  00330C  EF90  F019         	goto	l3329
  5901  003310                     u3760:
  5902  003310  0E00               	movlw	0
  5903  003312  6E05               	movwf	___fleq@ff2^0,c
  5904  003314  0E00               	movlw	0
  5905  003316  6E06               	movwf	(___fleq@ff2+1)^0,c
  5906  003318  0E00               	movlw	0
  5907  00331A  6E07               	movwf	(___fleq@ff2+2)^0,c
  5908  00331C  0E00               	movlw	0
  5909  00331E  6E08               	movwf	(___fleq@ff2+3)^0,c
  5910  003320                     l3329:
  5911  003320  5005               	movf	___fleq@ff2^0,w,c
  5912  003322  1801               	xorwf	___fleq@ff1^0,w,c
  5913  003324  E10F               	bnz	u3770
  5914  003326  5006               	movf	(___fleq@ff2+1)^0,w,c
  5915  003328  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  5916  00332A  E10C               	bnz	u3770
  5917  00332C  5007               	movf	(___fleq@ff2+2)^0,w,c
  5918  00332E  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  5919  003330  E109               	bnz	u3770
  5920  003332  5008               	movf	(___fleq@ff2+3)^0,w,c
  5921  003334  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  5922  003336  B4D8               	btfsc	status,2,c
  5923  003338  EFA0  F019         	goto	u3771
  5924  00333C  EFA2  F019         	goto	u3770
  5925  003340                     u3771:
  5926  003340  EFA5  F019         	goto	l3333
  5927  003344                     u3770:
  5928  003344  90D8               	bcf	status,0,c
  5929  003346  EFA6  F019         	goto	l592
  5930  00334A                     l3333:
  5931  00334A  80D8               	bsf	status,0,c
  5932  00334C                     l592:
  5933  00334C  0012               	return		;funcret
  5934  00334E                     __end_of___fleq:
  5935                           	opt callstack 0
  5936                           
  5937 ;; *************** function ___fldiv *****************
  5938 ;; Defined at:
  5939 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  5940 ;; Parameters:    Size  Location     Type
  5941 ;;  b               4    0[COMRAM] unsigned char 
  5942 ;;  a               4    4[COMRAM] unsigned char 
  5943 ;; Auto vars:     Size  Location     Type
  5944 ;;  grs             4   19[COMRAM] unsigned long 
  5945 ;;  rem             4   12[COMRAM] unsigned long 
  5946 ;;  new_exp         2   17[COMRAM] short 
  5947 ;;  aexp            1   24[COMRAM] unsigned char 
  5948 ;;  bexp            1   23[COMRAM] unsigned char 
  5949 ;;  sign            1   16[COMRAM] unsigned char 
  5950 ;; Return value:  Size  Location     Type
  5951 ;;                  4    0[COMRAM] unsigned char 
  5952 ;; Registers used:
  5953 ;;		wreg, status,2, status,0
  5954 ;; Tracked objects:
  5955 ;;		On entry : 0/0
  5956 ;;		On exit  : 0/0
  5957 ;;		Unchanged: 0/0
  5958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5959 ;;      Params:         8       0       0       0       0       0       0       0       0
  5960 ;;      Locals:        13       0       0       0       0       0       0       0       0
  5961 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5962 ;;      Totals:        25       0       0       0       0       0       0       0       0
  5963 ;;Total ram usage:       25 bytes
  5964 ;; Hardware stack levels used:    1
  5965 ;; This function calls:
  5966 ;;		Nothing
  5967 ;; This function is called by:
  5968 ;;		_main
  5969 ;;		_efgtoa
  5970 ;; This function uses a non-reentrant model
  5971 ;;
  5972                           
  5973                           	psect	text22
  5974  002118                     __ptext22:
  5975                           	opt callstack 0
  5976  002118                     ___fldiv:
  5977                           	opt callstack 26
  5978  002118  5004               	movf	(___fldiv@b+3)^0,w,c
  5979  00211A  0B80               	andlw	128
  5980  00211C  6E11               	movwf	___fldiv@sign^0,c
  5981  00211E  5004               	movf	(___fldiv@b+3)^0,w,c
  5982  002120  2404               	addwf	(___fldiv@b+3)^0,w,c
  5983  002122  6E18               	movwf	___fldiv@bexp^0,c
  5984  002124  AE03               	btfss	(___fldiv@b+2)^0,7,c
  5985  002126  EF97  F010         	goto	u3211
  5986  00212A  EF99  F010         	goto	u3210
  5987  00212E                     u3211:
  5988  00212E  EF9A  F010         	goto	l2973
  5989  002132                     u3210:
  5990  002132  8018               	bsf	___fldiv@bexp^0,0,c
  5991  002134                     l2973:
  5992  002134  5018               	movf	___fldiv@bexp^0,w,c
  5993  002136  B4D8               	btfsc	status,2,c
  5994  002138  EFA0  F010         	goto	u3221
  5995  00213C  EFA2  F010         	goto	u3220
  5996  002140                     u3221:
  5997  002140  EFB7  F010         	goto	l2983
  5998  002144                     u3220:
  5999  002144  2818               	incf	___fldiv@bexp^0,w,c
  6000  002146  A4D8               	btfss	status,2,c
  6001  002148  EFA8  F010         	goto	u3231
  6002  00214C  EFAA  F010         	goto	u3230
  6003  002150                     u3231:
  6004  002150  EFB2  F010         	goto	l2979
  6005  002154                     u3230:
  6006  002154  0E00               	movlw	0
  6007  002156  6E01               	movwf	___fldiv@b^0,c
  6008  002158  0E00               	movlw	0
  6009  00215A  6E02               	movwf	(___fldiv@b+1)^0,c
  6010  00215C  0E00               	movlw	0
  6011  00215E  6E03               	movwf	(___fldiv@b+2)^0,c
  6012  002160  0E00               	movlw	0
  6013  002162  6E04               	movwf	(___fldiv@b+3)^0,c
  6014  002164                     l2979:
  6015  002164  8E03               	bsf	(___fldiv@b+2)^0,7,c
  6016  002166  0E00               	movlw	0
  6017  002168  6E04               	movwf	(___fldiv@b+3)^0,c
  6018  00216A  EFBF  F010         	goto	l2985
  6019  00216E                     l2983:
  6020  00216E  0E00               	movlw	0
  6021  002170  6E01               	movwf	___fldiv@b^0,c
  6022  002172  0E00               	movlw	0
  6023  002174  6E02               	movwf	(___fldiv@b+1)^0,c
  6024  002176  0E00               	movlw	0
  6025  002178  6E03               	movwf	(___fldiv@b+2)^0,c
  6026  00217A  0E00               	movlw	0
  6027  00217C  6E04               	movwf	(___fldiv@b+3)^0,c
  6028  00217E                     l2985:
  6029  00217E  5008               	movf	(___fldiv@a+3)^0,w,c
  6030  002180  0B80               	andlw	128
  6031  002182  1A11               	xorwf	___fldiv@sign^0,f,c
  6032  002184  5008               	movf	(___fldiv@a+3)^0,w,c
  6033  002186  2408               	addwf	(___fldiv@a+3)^0,w,c
  6034  002188  6E19               	movwf	___fldiv@aexp^0,c
  6035  00218A  AE07               	btfss	(___fldiv@a+2)^0,7,c
  6036  00218C  EFCA  F010         	goto	u3241
  6037  002190  EFCC  F010         	goto	u3240
  6038  002194                     u3241:
  6039  002194  EFCD  F010         	goto	l2993
  6040  002198                     u3240:
  6041  002198  8019               	bsf	___fldiv@aexp^0,0,c
  6042  00219A                     l2993:
  6043  00219A  5019               	movf	___fldiv@aexp^0,w,c
  6044  00219C  B4D8               	btfsc	status,2,c
  6045  00219E  EFD3  F010         	goto	u3251
  6046  0021A2  EFD5  F010         	goto	u3250
  6047  0021A6                     u3251:
  6048  0021A6  EFEA  F010         	goto	l3003
  6049  0021AA                     u3250:
  6050  0021AA  2819               	incf	___fldiv@aexp^0,w,c
  6051  0021AC  A4D8               	btfss	status,2,c
  6052  0021AE  EFDB  F010         	goto	u3261
  6053  0021B2  EFDD  F010         	goto	u3260
  6054  0021B6                     u3261:
  6055  0021B6  EFE5  F010         	goto	l2999
  6056  0021BA                     u3260:
  6057  0021BA  0E00               	movlw	0
  6058  0021BC  6E05               	movwf	___fldiv@a^0,c
  6059  0021BE  0E00               	movlw	0
  6060  0021C0  6E06               	movwf	(___fldiv@a+1)^0,c
  6061  0021C2  0E00               	movlw	0
  6062  0021C4  6E07               	movwf	(___fldiv@a+2)^0,c
  6063  0021C6  0E00               	movlw	0
  6064  0021C8  6E08               	movwf	(___fldiv@a+3)^0,c
  6065  0021CA                     l2999:
  6066  0021CA  8E07               	bsf	(___fldiv@a+2)^0,7,c
  6067  0021CC  0E00               	movlw	0
  6068  0021CE  6E08               	movwf	(___fldiv@a+3)^0,c
  6069  0021D0  EFF2  F010         	goto	l3005
  6070  0021D4                     l3003:
  6071  0021D4  0E00               	movlw	0
  6072  0021D6  6E05               	movwf	___fldiv@a^0,c
  6073  0021D8  0E00               	movlw	0
  6074  0021DA  6E06               	movwf	(___fldiv@a+1)^0,c
  6075  0021DC  0E00               	movlw	0
  6076  0021DE  6E07               	movwf	(___fldiv@a+2)^0,c
  6077  0021E0  0E00               	movlw	0
  6078  0021E2  6E08               	movwf	(___fldiv@a+3)^0,c
  6079  0021E4                     l3005:
  6080  0021E4  5005               	movf	___fldiv@a^0,w,c
  6081  0021E6  1006               	iorwf	(___fldiv@a+1)^0,w,c
  6082  0021E8  1007               	iorwf	(___fldiv@a+2)^0,w,c
  6083  0021EA  1008               	iorwf	(___fldiv@a+3)^0,w,c
  6084  0021EC  A4D8               	btfss	status,2,c
  6085  0021EE  EFFB  F010         	goto	u3271
  6086  0021F2  EFFD  F010         	goto	u3270
  6087  0021F6                     u3271:
  6088  0021F6  EF15  F011         	goto	l3017
  6089  0021FA                     u3270:
  6090  0021FA  0E00               	movlw	0
  6091  0021FC  6E01               	movwf	___fldiv@b^0,c
  6092  0021FE  0E00               	movlw	0
  6093  002200  6E02               	movwf	(___fldiv@b+1)^0,c
  6094  002202  0E00               	movlw	0
  6095  002204  6E03               	movwf	(___fldiv@b+2)^0,c
  6096  002206  0E00               	movlw	0
  6097  002208  6E04               	movwf	(___fldiv@b+3)^0,c
  6098  00220A  0E80               	movlw	128
  6099  00220C  1203               	iorwf	(___fldiv@b+2)^0,f,c
  6100  00220E  0E7F               	movlw	127
  6101  002210  1204               	iorwf	(___fldiv@b+3)^0,f,c
  6102  002212                     l3011:
  6103  002212  5011               	movf	___fldiv@sign^0,w,c
  6104  002214  1204               	iorwf	(___fldiv@b+3)^0,f,c
  6105  002216  C001  F001         	movff	___fldiv@b,?___fldiv
  6106  00221A  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  6107  00221E  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  6108  002222  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  6109  002226  EF58  F012         	goto	l915
  6110  00222A                     l3017:
  6111  00222A  5018               	movf	___fldiv@bexp^0,w,c
  6112  00222C  A4D8               	btfss	status,2,c
  6113  00222E  EF1B  F011         	goto	u3281
  6114  002232  EF1D  F011         	goto	u3280
  6115  002236                     u3281:
  6116  002236  EF27  F011         	goto	l3025
  6117  00223A                     u3280:
  6118  00223A  0E00               	movlw	0
  6119  00223C  6E01               	movwf	?___fldiv^0,c
  6120  00223E  0E00               	movlw	0
  6121  002240  6E02               	movwf	(?___fldiv+1)^0,c
  6122  002242  0E00               	movlw	0
  6123  002244  6E03               	movwf	(?___fldiv+2)^0,c
  6124  002246  0E00               	movlw	0
  6125  002248  6E04               	movwf	(?___fldiv+3)^0,c
  6126  00224A  EF58  F012         	goto	l915
  6127  00224E                     l3025:
  6128  00224E  5019               	movf	___fldiv@aexp^0,w,c
  6129  002250  C018  F009         	movff	___fldiv@bexp,??___fldiv
  6130  002254  6A0A               	clrf	(??___fldiv+1)^0,c
  6131  002256  5E09               	subwf	??___fldiv^0,f,c
  6132  002258  0E00               	movlw	0
  6133  00225A  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  6134  00225C  0E7F               	movlw	127
  6135  00225E  2409               	addwf	??___fldiv^0,w,c
  6136  002260  6E12               	movwf	___fldiv@new_exp^0,c
  6137  002262  0E00               	movlw	0
  6138  002264  200A               	addwfc	(??___fldiv+1)^0,w,c
  6139  002266  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6140  002268  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  6141  00226C  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  6142  002270  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  6143  002274  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  6144  002278  0E00               	movlw	0
  6145  00227A  6E01               	movwf	___fldiv@b^0,c
  6146  00227C  0E00               	movlw	0
  6147  00227E  6E02               	movwf	(___fldiv@b+1)^0,c
  6148  002280  0E00               	movlw	0
  6149  002282  6E03               	movwf	(___fldiv@b+2)^0,c
  6150  002284  0E00               	movlw	0
  6151  002286  6E04               	movwf	(___fldiv@b+3)^0,c
  6152  002288  0E00               	movlw	0
  6153  00228A  6E14               	movwf	___fldiv@grs^0,c
  6154  00228C  0E00               	movlw	0
  6155  00228E  6E15               	movwf	(___fldiv@grs+1)^0,c
  6156  002290  0E00               	movlw	0
  6157  002292  6E16               	movwf	(___fldiv@grs+2)^0,c
  6158  002294  0E00               	movlw	0
  6159  002296  6E17               	movwf	(___fldiv@grs+3)^0,c
  6160  002298  0E00               	movlw	0
  6161  00229A  6E19               	movwf	___fldiv@aexp^0,c
  6162  00229C  EF88  F011         	goto	l917
  6163  0022A0                     l3035:
  6164  0022A0  5019               	movf	___fldiv@aexp^0,w,c
  6165  0022A2  B4D8               	btfsc	status,2,c
  6166  0022A4  EF56  F011         	goto	u3291
  6167  0022A8  EF58  F011         	goto	u3290
  6168  0022AC                     u3291:
  6169  0022AC  EF6F  F011         	goto	l3043
  6170  0022B0                     u3290:
  6171  0022B0  90D8               	bcf	status,0,c
  6172  0022B2  360D               	rlcf	___fldiv@rem^0,f,c
  6173  0022B4  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  6174  0022B6  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  6175  0022B8  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  6176  0022BA  90D8               	bcf	status,0,c
  6177  0022BC  3601               	rlcf	___fldiv@b^0,f,c
  6178  0022BE  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6179  0022C0  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6180  0022C2  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6181  0022C4  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6182  0022C6  EF67  F011         	goto	u3301
  6183  0022CA  EF69  F011         	goto	u3300
  6184  0022CE                     u3301:
  6185  0022CE  EF6A  F011         	goto	l920
  6186  0022D2                     u3300:
  6187  0022D2  8001               	bsf	___fldiv@b^0,0,c
  6188  0022D4                     l920:
  6189  0022D4  90D8               	bcf	status,0,c
  6190  0022D6  3614               	rlcf	___fldiv@grs^0,f,c
  6191  0022D8  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6192  0022DA  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6193  0022DC  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  6194  0022DE                     l3043:
  6195  0022DE  5005               	movf	___fldiv@a^0,w,c
  6196  0022E0  5C0D               	subwf	___fldiv@rem^0,w,c
  6197  0022E2  5006               	movf	(___fldiv@a+1)^0,w,c
  6198  0022E4  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  6199  0022E6  5007               	movf	(___fldiv@a+2)^0,w,c
  6200  0022E8  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  6201  0022EA  5008               	movf	(___fldiv@a+3)^0,w,c
  6202  0022EC  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  6203  0022EE  A0D8               	btfss	status,0,c
  6204  0022F0  EF7C  F011         	goto	u3311
  6205  0022F4  EF7E  F011         	goto	u3310
  6206  0022F8                     u3311:
  6207  0022F8  EF87  F011         	goto	l3049
  6208  0022FC                     u3310:
  6209  0022FC  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  6210  0022FE  5005               	movf	___fldiv@a^0,w,c
  6211  002300  5E0D               	subwf	___fldiv@rem^0,f,c
  6212  002302  5006               	movf	(___fldiv@a+1)^0,w,c
  6213  002304  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  6214  002306  5007               	movf	(___fldiv@a+2)^0,w,c
  6215  002308  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  6216  00230A  5008               	movf	(___fldiv@a+3)^0,w,c
  6217  00230C  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  6218  00230E                     l3049:
  6219  00230E  2A19               	incf	___fldiv@aexp^0,f,c
  6220  002310                     l917:
  6221  002310  0E19               	movlw	25
  6222  002312  6419               	cpfsgt	___fldiv@aexp^0,c
  6223  002314  EF8E  F011         	goto	u3321
  6224  002318  EF90  F011         	goto	u3320
  6225  00231C                     u3321:
  6226  00231C  EF50  F011         	goto	l3035
  6227  002320                     u3320:
  6228  002320  500D               	movf	___fldiv@rem^0,w,c
  6229  002322  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  6230  002324  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  6231  002326  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  6232  002328  B4D8               	btfsc	status,2,c
  6233  00232A  EF99  F011         	goto	u3331
  6234  00232E  EF9B  F011         	goto	u3330
  6235  002332                     u3331:
  6236  002332  EFB3  F011         	goto	l3061
  6237  002336                     u3330:
  6238  002336  8014               	bsf	___fldiv@grs^0,0,c
  6239  002338  EFB3  F011         	goto	l3061
  6240  00233C                     l3055:
  6241  00233C  90D8               	bcf	status,0,c
  6242  00233E  3601               	rlcf	___fldiv@b^0,f,c
  6243  002340  3602               	rlcf	(___fldiv@b+1)^0,f,c
  6244  002342  3603               	rlcf	(___fldiv@b+2)^0,f,c
  6245  002344  3604               	rlcf	(___fldiv@b+3)^0,f,c
  6246  002346  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6247  002348  EFA8  F011         	goto	u3341
  6248  00234C  EFAA  F011         	goto	u3340
  6249  002350                     u3341:
  6250  002350  EFAB  F011         	goto	l926
  6251  002354                     u3340:
  6252  002354  8001               	bsf	___fldiv@b^0,0,c
  6253  002356                     l926:
  6254  002356  90D8               	bcf	status,0,c
  6255  002358  3614               	rlcf	___fldiv@grs^0,f,c
  6256  00235A  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  6257  00235C  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  6258  00235E  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  6259  002360  0612               	decf	___fldiv@new_exp^0,f,c
  6260  002362  A0D8               	btfss	status,0,c
  6261  002364  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  6262  002366                     l3061:
  6263  002366  AE03               	btfss	(___fldiv@b+2)^0,7,c
  6264  002368  EFB8  F011         	goto	u3351
  6265  00236C  EFBA  F011         	goto	u3350
  6266  002370                     u3351:
  6267  002370  EF9E  F011         	goto	l3055
  6268  002374                     u3350:
  6269  002374  0E00               	movlw	0
  6270  002376  6E19               	movwf	___fldiv@aexp^0,c
  6271  002378  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  6272  00237A  EFC1  F011         	goto	u3361
  6273  00237E  EFC3  F011         	goto	u3360
  6274  002382                     u3361:
  6275  002382  EFE7  F011         	goto	l928
  6276  002386                     u3360:
  6277  002386  0EFF               	movlw	255
  6278  002388  1414               	andwf	___fldiv@grs^0,w,c
  6279  00238A  6E09               	movwf	??___fldiv^0,c
  6280  00238C  0EFF               	movlw	255
  6281  00238E  1415               	andwf	(___fldiv@grs+1)^0,w,c
  6282  002390  6E0A               	movwf	(??___fldiv+1)^0,c
  6283  002392  0EFF               	movlw	255
  6284  002394  1416               	andwf	(___fldiv@grs+2)^0,w,c
  6285  002396  6E0B               	movwf	(??___fldiv+2)^0,c
  6286  002398  0E7F               	movlw	127
  6287  00239A  1417               	andwf	(___fldiv@grs+3)^0,w,c
  6288  00239C  6E0C               	movwf	(??___fldiv+3)^0,c
  6289  00239E  5009               	movf	??___fldiv^0,w,c
  6290  0023A0  100A               	iorwf	(??___fldiv+1)^0,w,c
  6291  0023A2  100B               	iorwf	(??___fldiv+2)^0,w,c
  6292  0023A4  100C               	iorwf	(??___fldiv+3)^0,w,c
  6293  0023A6  B4D8               	btfsc	status,2,c
  6294  0023A8  EFD8  F011         	goto	u3371
  6295  0023AC  EFDA  F011         	goto	u3370
  6296  0023B0                     u3371:
  6297  0023B0  EFDE  F011         	goto	l929
  6298  0023B4                     u3370:
  6299  0023B4                     l3069:
  6300  0023B4  0E01               	movlw	1
  6301  0023B6  6E19               	movwf	___fldiv@aexp^0,c
  6302  0023B8  EFE7  F011         	goto	l928
  6303  0023BC                     l929:
  6304  0023BC  A001               	btfss	___fldiv@b^0,0,c
  6305  0023BE  EFE3  F011         	goto	u3381
  6306  0023C2  EFE5  F011         	goto	u3380
  6307  0023C6                     u3381:
  6308  0023C6  EFE7  F011         	goto	l928
  6309  0023CA                     u3380:
  6310  0023CA  EFDA  F011         	goto	l3069
  6311  0023CE                     l928:
  6312  0023CE  5019               	movf	___fldiv@aexp^0,w,c
  6313  0023D0  B4D8               	btfsc	status,2,c
  6314  0023D2  EFED  F011         	goto	u3391
  6315  0023D6  EFEF  F011         	goto	u3390
  6316  0023DA                     u3391:
  6317  0023DA  EF13  F012         	goto	l3081
  6318  0023DE                     u3390:
  6319  0023DE  0E01               	movlw	1
  6320  0023E0  2601               	addwf	___fldiv@b^0,f,c
  6321  0023E2  0E00               	movlw	0
  6322  0023E4  2202               	addwfc	(___fldiv@b+1)^0,f,c
  6323  0023E6  2203               	addwfc	(___fldiv@b+2)^0,f,c
  6324  0023E8  2204               	addwfc	(___fldiv@b+3)^0,f,c
  6325  0023EA  A004               	btfss	(___fldiv@b+3)^0,0,c
  6326  0023EC  EFFA  F011         	goto	u3401
  6327  0023F0  EFFC  F011         	goto	u3400
  6328  0023F4                     u3401:
  6329  0023F4  EF13  F012         	goto	l3081
  6330  0023F8                     u3400:
  6331  0023F8  C001  F009         	movff	___fldiv@b,??___fldiv
  6332  0023FC  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  6333  002400  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  6334  002404  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  6335  002408  340C               	rlcf	(??___fldiv+3)^0,w,c
  6336  00240A  320C               	rrcf	(??___fldiv+3)^0,f,c
  6337  00240C  320B               	rrcf	(??___fldiv+2)^0,f,c
  6338  00240E  320A               	rrcf	(??___fldiv+1)^0,f,c
  6339  002410  3209               	rrcf	??___fldiv^0,f,c
  6340  002412  C009  F001         	movff	??___fldiv,___fldiv@b
  6341  002416  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  6342  00241A  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  6343  00241E  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  6344  002422  4A12               	infsnz	___fldiv@new_exp^0,f,c
  6345  002424  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  6346  002426                     l3081:
  6347  002426  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6348  002428  EF1E  F012         	goto	u3411
  6349  00242C  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  6350  00242E  E108               	bnz	u3410
  6351  002430  2812               	incf	___fldiv@new_exp^0,w,c
  6352  002432  A0D8               	btfss	status,0,c
  6353  002434  EF1E  F012         	goto	u3411
  6354  002438  EF20  F012         	goto	u3410
  6355  00243C                     u3411:
  6356  00243C  EF2B  F012         	goto	l3085
  6357  002440                     u3410:
  6358  002440  0E00               	movlw	0
  6359  002442  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6360  002444  6812               	setf	___fldiv@new_exp^0,c
  6361  002446  0E00               	movlw	0
  6362  002448  6E01               	movwf	___fldiv@b^0,c
  6363  00244A  0E00               	movlw	0
  6364  00244C  6E02               	movwf	(___fldiv@b+1)^0,c
  6365  00244E  0E00               	movlw	0
  6366  002450  6E03               	movwf	(___fldiv@b+2)^0,c
  6367  002452  0E00               	movlw	0
  6368  002454  6E04               	movwf	(___fldiv@b+3)^0,c
  6369  002456                     l3085:
  6370  002456  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6371  002458  EF38  F012         	goto	u3420
  6372  00245C  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  6373  00245E  E106               	bnz	u3421
  6374  002460  0412               	decf	___fldiv@new_exp^0,w,c
  6375  002462  B0D8               	btfsc	status,0,c
  6376  002464  EF36  F012         	goto	u3421
  6377  002468  EF38  F012         	goto	u3420
  6378  00246C                     u3421:
  6379  00246C  EF46  F012         	goto	l3089
  6380  002470                     u3420:
  6381  002470  0E00               	movlw	0
  6382  002472  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  6383  002474  0E00               	movlw	0
  6384  002476  6E12               	movwf	___fldiv@new_exp^0,c
  6385  002478  0E00               	movlw	0
  6386  00247A  6E01               	movwf	___fldiv@b^0,c
  6387  00247C  0E00               	movlw	0
  6388  00247E  6E02               	movwf	(___fldiv@b+1)^0,c
  6389  002480  0E00               	movlw	0
  6390  002482  6E03               	movwf	(___fldiv@b+2)^0,c
  6391  002484  0E00               	movlw	0
  6392  002486  6E04               	movwf	(___fldiv@b+3)^0,c
  6393  002488  0E00               	movlw	0
  6394  00248A  6E11               	movwf	___fldiv@sign^0,c
  6395  00248C                     l3089:
  6396  00248C  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  6397  002490  A018               	btfss	___fldiv@bexp^0,0,c
  6398  002492  EF4D  F012         	goto	u3431
  6399  002496  EF4F  F012         	goto	u3430
  6400  00249A                     u3431:
  6401  00249A  EF52  F012         	goto	l3095
  6402  00249E                     u3430:
  6403  00249E  8E03               	bsf	(___fldiv@b+2)^0,7,c
  6404  0024A0  EF53  F012         	goto	l3097
  6405  0024A4                     l3095:
  6406  0024A4  9E03               	bcf	(___fldiv@b+2)^0,7,c
  6407  0024A6                     l3097:
  6408  0024A6  90D8               	bcf	status,0,c
  6409  0024A8  3018               	rrcf	___fldiv@bexp^0,w,c
  6410  0024AA  6E04               	movwf	(___fldiv@b+3)^0,c
  6411  0024AC  EF09  F011         	goto	l3011
  6412  0024B0                     l915:
  6413  0024B0  0012               	return		;funcret
  6414  0024B2                     __end_of___fldiv:
  6415                           	opt callstack 0
  6416                           
  6417 ;; *************** function ___awmod *****************
  6418 ;; Defined at:
  6419 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  6420 ;; Parameters:    Size  Location     Type
  6421 ;;  dividend        2    0[COMRAM] int 
  6422 ;;  divisor         2    2[COMRAM] int 
  6423 ;; Auto vars:     Size  Location     Type
  6424 ;;  sign            1    5[COMRAM] unsigned char 
  6425 ;;  counter         1    4[COMRAM] unsigned char 
  6426 ;; Return value:  Size  Location     Type
  6427 ;;                  2    0[COMRAM] int 
  6428 ;; Registers used:
  6429 ;;		wreg, status,2, status,0
  6430 ;; Tracked objects:
  6431 ;;		On entry : 0/0
  6432 ;;		On exit  : 0/0
  6433 ;;		Unchanged: 0/0
  6434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6435 ;;      Params:         4       0       0       0       0       0       0       0       0
  6436 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6437 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6438 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6439 ;;Total ram usage:        6 bytes
  6440 ;; Hardware stack levels used:    1
  6441 ;; This function calls:
  6442 ;;		Nothing
  6443 ;; This function is called by:
  6444 ;;		_efgtoa
  6445 ;; This function uses a non-reentrant model
  6446 ;;
  6447                           
  6448                           	psect	text23
  6449  0031F4                     __ptext23:
  6450                           	opt callstack 0
  6451  0031F4                     ___awmod:
  6452                           	opt callstack 26
  6453  0031F4  0E00               	movlw	0
  6454  0031F6  6E06               	movwf	___awmod@sign^0,c
  6455  0031F8  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  6456  0031FA  EF03  F019         	goto	u3690
  6457  0031FE  EF01  F019         	goto	u3691
  6458  003202                     u3691:
  6459  003202  EF09  F019         	goto	l3293
  6460  003206                     u3690:
  6461  003206  6C01               	negf	___awmod@dividend^0,c
  6462  003208  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6463  00320A  B0D8               	btfsc	status,0,c
  6464  00320C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6465  00320E  0E01               	movlw	1
  6466  003210  6E06               	movwf	___awmod@sign^0,c
  6467  003212                     l3293:
  6468  003212  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  6469  003214  EF10  F019         	goto	u3700
  6470  003218  EF0E  F019         	goto	u3701
  6471  00321C                     u3701:
  6472  00321C  EF14  F019         	goto	l3297
  6473  003220                     u3700:
  6474  003220  6C03               	negf	___awmod@divisor^0,c
  6475  003222  1E04               	comf	(___awmod@divisor+1)^0,f,c
  6476  003224  B0D8               	btfsc	status,0,c
  6477  003226  2A04               	incf	(___awmod@divisor+1)^0,f,c
  6478  003228                     l3297:
  6479  003228  5003               	movf	___awmod@divisor^0,w,c
  6480  00322A  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  6481  00322C  B4D8               	btfsc	status,2,c
  6482  00322E  EF1B  F019         	goto	u3711
  6483  003232  EF1D  F019         	goto	u3710
  6484  003236                     u3711:
  6485  003236  EF41  F019         	goto	l3313
  6486  00323A                     u3710:
  6487  00323A  0E01               	movlw	1
  6488  00323C  6E05               	movwf	___awmod@counter^0,c
  6489  00323E  EF25  F019         	goto	l3303
  6490  003242                     l3301:
  6491  003242  90D8               	bcf	status,0,c
  6492  003244  3603               	rlcf	___awmod@divisor^0,f,c
  6493  003246  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  6494  003248  2A05               	incf	___awmod@counter^0,f,c
  6495  00324A                     l3303:
  6496  00324A  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6497  00324C  EF2A  F019         	goto	u3721
  6498  003250  EF2C  F019         	goto	u3720
  6499  003254                     u3721:
  6500  003254  EF21  F019         	goto	l3301
  6501  003258                     u3720:
  6502  003258                     l3305:
  6503  003258  5003               	movf	___awmod@divisor^0,w,c
  6504  00325A  5C01               	subwf	___awmod@dividend^0,w,c
  6505  00325C  5004               	movf	(___awmod@divisor+1)^0,w,c
  6506  00325E  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  6507  003260  A0D8               	btfss	status,0,c
  6508  003262  EF35  F019         	goto	u3731
  6509  003266  EF37  F019         	goto	u3730
  6510  00326A                     u3731:
  6511  00326A  EF3B  F019         	goto	l3309
  6512  00326E                     u3730:
  6513  00326E  5003               	movf	___awmod@divisor^0,w,c
  6514  003270  5E01               	subwf	___awmod@dividend^0,f,c
  6515  003272  5004               	movf	(___awmod@divisor+1)^0,w,c
  6516  003274  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  6517  003276                     l3309:
  6518  003276  90D8               	bcf	status,0,c
  6519  003278  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  6520  00327A  3203               	rrcf	___awmod@divisor^0,f,c
  6521  00327C  2E05               	decfsz	___awmod@counter^0,f,c
  6522  00327E  EF2C  F019         	goto	l3305
  6523  003282                     l3313:
  6524  003282  5006               	movf	___awmod@sign^0,w,c
  6525  003284  B4D8               	btfsc	status,2,c
  6526  003286  EF47  F019         	goto	u3741
  6527  00328A  EF49  F019         	goto	u3740
  6528  00328E                     u3741:
  6529  00328E  EF4D  F019         	goto	l3317
  6530  003292                     u3740:
  6531  003292  6C01               	negf	___awmod@dividend^0,c
  6532  003294  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6533  003296  B0D8               	btfsc	status,0,c
  6534  003298  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6535  00329A                     l3317:
  6536  00329A  C001  F001         	movff	___awmod@dividend,?___awmod
  6537  00329E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6538  0032A2  0012               	return		;funcret
  6539  0032A4                     __end_of___awmod:
  6540                           	opt callstack 0
  6541                           
  6542 ;; *************** function ___awdiv *****************
  6543 ;; Defined at:
  6544 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  6545 ;; Parameters:    Size  Location     Type
  6546 ;;  dividend        2    0[COMRAM] int 
  6547 ;;  divisor         2    2[COMRAM] int 
  6548 ;; Auto vars:     Size  Location     Type
  6549 ;;  quotient        2    6[COMRAM] int 
  6550 ;;  sign            1    5[COMRAM] unsigned char 
  6551 ;;  counter         1    4[COMRAM] unsigned char 
  6552 ;; Return value:  Size  Location     Type
  6553 ;;                  2    0[COMRAM] int 
  6554 ;; Registers used:
  6555 ;;		wreg, status,2, status,0
  6556 ;; Tracked objects:
  6557 ;;		On entry : 0/0
  6558 ;;		On exit  : 0/0
  6559 ;;		Unchanged: 0/0
  6560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6561 ;;      Params:         4       0       0       0       0       0       0       0       0
  6562 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6563 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6564 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6565 ;;Total ram usage:        8 bytes
  6566 ;; Hardware stack levels used:    1
  6567 ;; This function calls:
  6568 ;;		Nothing
  6569 ;; This function is called by:
  6570 ;;		_efgtoa
  6571 ;; This function uses a non-reentrant model
  6572 ;;
  6573                           
  6574                           	psect	text24
  6575  002FB6                     __ptext24:
  6576                           	opt callstack 0
  6577  002FB6                     ___awdiv:
  6578                           	opt callstack 26
  6579  002FB6  0E00               	movlw	0
  6580  002FB8  6E06               	movwf	___awdiv@sign^0,c
  6581  002FBA  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  6582  002FBC  EFE4  F017         	goto	u3630
  6583  002FC0  EFE2  F017         	goto	u3631
  6584  002FC4                     u3631:
  6585  002FC4  EFEA  F017         	goto	l3249
  6586  002FC8                     u3630:
  6587  002FC8  6C03               	negf	___awdiv@divisor^0,c
  6588  002FCA  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  6589  002FCC  B0D8               	btfsc	status,0,c
  6590  002FCE  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  6591  002FD0  0E01               	movlw	1
  6592  002FD2  6E06               	movwf	___awdiv@sign^0,c
  6593  002FD4                     l3249:
  6594  002FD4  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  6595  002FD6  EFF1  F017         	goto	u3640
  6596  002FDA  EFEF  F017         	goto	u3641
  6597  002FDE                     u3641:
  6598  002FDE  EFF7  F017         	goto	l3255
  6599  002FE2                     u3640:
  6600  002FE2  6C01               	negf	___awdiv@dividend^0,c
  6601  002FE4  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  6602  002FE6  B0D8               	btfsc	status,0,c
  6603  002FE8  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  6604  002FEA  0E01               	movlw	1
  6605  002FEC  1A06               	xorwf	___awdiv@sign^0,f,c
  6606  002FEE                     l3255:
  6607  002FEE  0E00               	movlw	0
  6608  002FF0  6E08               	movwf	(___awdiv@quotient+1)^0,c
  6609  002FF2  0E00               	movlw	0
  6610  002FF4  6E07               	movwf	___awdiv@quotient^0,c
  6611  002FF6  5003               	movf	___awdiv@divisor^0,w,c
  6612  002FF8  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  6613  002FFA  B4D8               	btfsc	status,2,c
  6614  002FFC  EF02  F018         	goto	u3651
  6615  003000  EF04  F018         	goto	u3650
  6616  003004                     u3651:
  6617  003004  EF2C  F018         	goto	l3277
  6618  003008                     u3650:
  6619  003008  0E01               	movlw	1
  6620  00300A  6E05               	movwf	___awdiv@counter^0,c
  6621  00300C  EF0C  F018         	goto	l3263
  6622  003010                     l3261:
  6623  003010  90D8               	bcf	status,0,c
  6624  003012  3603               	rlcf	___awdiv@divisor^0,f,c
  6625  003014  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  6626  003016  2A05               	incf	___awdiv@counter^0,f,c
  6627  003018                     l3263:
  6628  003018  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  6629  00301A  EF11  F018         	goto	u3661
  6630  00301E  EF13  F018         	goto	u3660
  6631  003022                     u3661:
  6632  003022  EF08  F018         	goto	l3261
  6633  003026                     u3660:
  6634  003026                     l3265:
  6635  003026  90D8               	bcf	status,0,c
  6636  003028  3607               	rlcf	___awdiv@quotient^0,f,c
  6637  00302A  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  6638  00302C  5003               	movf	___awdiv@divisor^0,w,c
  6639  00302E  5C01               	subwf	___awdiv@dividend^0,w,c
  6640  003030  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6641  003032  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  6642  003034  A0D8               	btfss	status,0,c
  6643  003036  EF1F  F018         	goto	u3671
  6644  00303A  EF21  F018         	goto	u3670
  6645  00303E                     u3671:
  6646  00303E  EF26  F018         	goto	l3273
  6647  003042                     u3670:
  6648  003042  5003               	movf	___awdiv@divisor^0,w,c
  6649  003044  5E01               	subwf	___awdiv@dividend^0,f,c
  6650  003046  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6651  003048  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  6652  00304A  8007               	bsf	___awdiv@quotient^0,0,c
  6653  00304C                     l3273:
  6654  00304C  90D8               	bcf	status,0,c
  6655  00304E  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  6656  003050  3203               	rrcf	___awdiv@divisor^0,f,c
  6657  003052  2E05               	decfsz	___awdiv@counter^0,f,c
  6658  003054  EF13  F018         	goto	l3265
  6659  003058                     l3277:
  6660  003058  5006               	movf	___awdiv@sign^0,w,c
  6661  00305A  B4D8               	btfsc	status,2,c
  6662  00305C  EF32  F018         	goto	u3681
  6663  003060  EF34  F018         	goto	u3680
  6664  003064                     u3681:
  6665  003064  EF38  F018         	goto	l3281
  6666  003068                     u3680:
  6667  003068  6C07               	negf	___awdiv@quotient^0,c
  6668  00306A  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  6669  00306C  B0D8               	btfsc	status,0,c
  6670  00306E  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  6671  003070                     l3281:
  6672  003070  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6673  003074  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6674  003078  0012               	return		;funcret
  6675  00307A                     __end_of___awdiv:
  6676                           	opt callstack 0
  6677                           
  6678 ;; *************** function _atoi *****************
  6679 ;; Defined at:
  6680 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  6681 ;; Parameters:    Size  Location     Type
  6682 ;;  s               2    7[COMRAM] PTR const unsigned char 
  6683 ;;		 -> STR_1(7), 
  6684 ;; Auto vars:     Size  Location     Type
  6685 ;;  n               2   20[COMRAM] int 
  6686 ;;  neg             2   13[COMRAM] int 
  6687 ;; Return value:  Size  Location     Type
  6688 ;;                  2    7[COMRAM] int 
  6689 ;; Registers used:
  6690 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6691 ;; Tracked objects:
  6692 ;;		On entry : 0/0
  6693 ;;		On exit  : 0/0
  6694 ;;		Unchanged: 0/0
  6695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6696 ;;      Params:         2       0       0       0       0       0       0       0       0
  6697 ;;      Locals:         9       0       0       0       0       0       0       0       0
  6698 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6699 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6700 ;;Total ram usage:       15 bytes
  6701 ;; Hardware stack levels used:    1
  6702 ;; Hardware stack levels required when called:    1
  6703 ;; This function calls:
  6704 ;;		___wmul
  6705 ;;		_isdigit
  6706 ;;		_isspace
  6707 ;; This function is called by:
  6708 ;;		_vfpfcnvrt
  6709 ;; This function uses a non-reentrant model
  6710 ;;
  6711                           
  6712                           	psect	text25
  6713  002878                     __ptext25:
  6714                           	opt callstack 0
  6715  002878                     _atoi:
  6716                           	opt callstack 26
  6717  002878  0E00               	movlw	0
  6718  00287A  6E16               	movwf	(atoi@n+1)^0,c
  6719  00287C  0E00               	movlw	0
  6720  00287E  6E15               	movwf	atoi@n^0,c
  6721  002880  0E00               	movlw	0
  6722  002882  6E0F               	movwf	(atoi@neg+1)^0,c
  6723  002884  0E00               	movlw	0
  6724  002886  6E0E               	movwf	atoi@neg^0,c
  6725  002888  EF48  F014         	goto	l3755
  6726  00288C                     l3753:
  6727  00288C  4A08               	infsnz	atoi@s^0,f,c
  6728  00288E  2A09               	incf	(atoi@s+1)^0,f,c
  6729  002890                     l3755:
  6730  002890  0E01               	movlw	1
  6731  002892  6E14               	movwf	_atoi$824^0,c
  6732  002894  C008  FFF6         	movff	atoi@s,tblptrl
  6733  002898  C009  FFF7         	movff	atoi@s+1,tblptrh
  6734  00289C                     	if	0	;tblptru may be non-zero
  6735  00289C                     	endif
  6736  00289C                     	if	0	;tblptru may be non-zero
  6737  00289C                     	endif
  6738  00289C  0008               	tblrd		*
  6739  00289E  50F5               	movf	tablat,w,c
  6740  0028A0  0A20               	xorlw	32
  6741  0028A2  B4D8               	btfsc	status,2,c
  6742  0028A4  EF56  F014         	goto	u4471
  6743  0028A8  EF58  F014         	goto	u4470
  6744  0028AC                     u4471:
  6745  0028AC  EF75  F014         	goto	l3763
  6746  0028B0                     u4470:
  6747  0028B0  0EF7               	movlw	247
  6748  0028B2  6E0A               	movwf	??_atoi^0,c
  6749  0028B4  0EFF               	movlw	255
  6750  0028B6  6E0B               	movwf	(??_atoi+1)^0,c
  6751  0028B8  C008  FFF6         	movff	atoi@s,tblptrl
  6752  0028BC  C009  FFF7         	movff	atoi@s+1,tblptrh
  6753  0028C0                     	if	0	;tblptru may be non-zero
  6754  0028C0                     	endif
  6755  0028C0                     	if	0	;tblptru may be non-zero
  6756  0028C0                     	endif
  6757  0028C0  0008               	tblrd		*
  6758  0028C2  50F5               	movf	tablat,w,c
  6759  0028C4  6E0C               	movwf	(??_atoi+2)^0,c
  6760  0028C6  6A0D               	clrf	(??_atoi+3)^0,c
  6761  0028C8  500A               	movf	??_atoi^0,w,c
  6762  0028CA  260C               	addwf	(??_atoi+2)^0,f,c
  6763  0028CC  500B               	movf	(??_atoi+1)^0,w,c
  6764  0028CE  220D               	addwfc	(??_atoi+3)^0,f,c
  6765  0028D0  500D               	movf	(??_atoi+3)^0,w,c
  6766  0028D2  E109               	bnz	u4480
  6767  0028D4  0E05               	movlw	5
  6768  0028D6  5C0C               	subwf	(??_atoi+2)^0,w,c
  6769  0028D8  A0D8               	btfss	status,0,c
  6770  0028DA  EF71  F014         	goto	u4481
  6771  0028DE  EF73  F014         	goto	u4480
  6772  0028E2                     u4481:
  6773  0028E2  EF75  F014         	goto	l3763
  6774  0028E6                     u4480:
  6775  0028E6  0E00               	movlw	0
  6776  0028E8  6E14               	movwf	_atoi$824^0,c
  6777  0028EA                     l3763:
  6778  0028EA  C014  F010         	movff	_atoi$824,_atoi$823
  6779  0028EE  6A11               	clrf	(_atoi$823+1)^0,c
  6780  0028F0  5010               	movf	_atoi$823^0,w,c
  6781  0028F2  1011               	iorwf	(_atoi$823+1)^0,w,c
  6782  0028F4  A4D8               	btfss	status,2,c
  6783  0028F6  EF7F  F014         	goto	u4491
  6784  0028FA  EF81  F014         	goto	u4490
  6785  0028FE                     u4491:
  6786  0028FE  EF46  F014         	goto	l3753
  6787  002902                     u4490:
  6788  002902  EF8B  F014         	goto	l3773
  6789  002906                     l3769:
  6790  002906  0E00               	movlw	0
  6791  002908  6E0F               	movwf	(atoi@neg+1)^0,c
  6792  00290A  0E01               	movlw	1
  6793  00290C  6E0E               	movwf	atoi@neg^0,c
  6794  00290E                     l3771:
  6795  00290E  4A08               	infsnz	atoi@s^0,f,c
  6796  002910  2A09               	incf	(atoi@s+1)^0,f,c
  6797  002912  EFC0  F014         	goto	l3779
  6798  002916                     l3773:
  6799  002916  C008  FFF6         	movff	atoi@s,tblptrl
  6800  00291A  C009  FFF7         	movff	atoi@s+1,tblptrh
  6801  00291E                     	if	0	;tblptru may be non-zero
  6802  00291E                     	endif
  6803  00291E                     	if	0	;tblptru may be non-zero
  6804  00291E                     	endif
  6805  00291E  0008               	tblrd		*
  6806  002920  50F5               	movf	tablat,w,c
  6807  002922  6E0A               	movwf	??_atoi^0,c
  6808  002924  6A0B               	clrf	(??_atoi+1)^0,c
  6809                           
  6810                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6811                           ; Switch size 1, requested type "simple"
  6812                           ; Number of cases is 1, Range of values is 0 to 0
  6813                           ; switch strategies available:
  6814                           ; Name         Instructions Cycles
  6815                           ; simple_byte            4     3 (average)
  6816                           ;	Chosen strategy is simple_byte
  6817  002926  500B               	movf	(??_atoi+1)^0,w,c
  6818  002928  0A00               	xorlw	0	; case 0
  6819  00292A  B4D8               	btfsc	status,2,c
  6820  00292C  EF9A  F014         	goto	l4109
  6821  002930  EFC0  F014         	goto	l3779
  6822  002934                     l4109:
  6823                           
  6824                           ; Switch size 1, requested type "simple"
  6825                           ; Number of cases is 2, Range of values is 43 to 45
  6826                           ; switch strategies available:
  6827                           ; Name         Instructions Cycles
  6828                           ; simple_byte            7     4 (average)
  6829                           ;	Chosen strategy is simple_byte
  6830  002934  500A               	movf	??_atoi^0,w,c
  6831  002936  0A2B               	xorlw	43	; case 43
  6832  002938  B4D8               	btfsc	status,2,c
  6833  00293A  EF87  F014         	goto	l3771
  6834  00293E  0A06               	xorlw	6	; case 45
  6835  002940  B4D8               	btfsc	status,2,c
  6836  002942  EF83  F014         	goto	l3769
  6837  002946  EFC0  F014         	goto	l3779
  6838  00294A                     l3775:
  6839  00294A  C015  F001         	movff	atoi@n,___wmul@multiplier
  6840  00294E  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  6841  002952  0E00               	movlw	0
  6842  002954  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  6843  002956  0E0A               	movlw	10
  6844  002958  6E03               	movwf	___wmul@multiplicand^0,c
  6845  00295A  EC81  F01C         	call	___wmul	;wreg free
  6846  00295E  C008  FFF6         	movff	atoi@s,tblptrl
  6847  002962  C009  FFF7         	movff	atoi@s+1,tblptrh
  6848  002966                     	if	0	;tblptru may be non-zero
  6849  002966                     	endif
  6850  002966                     	if	0	;tblptru may be non-zero
  6851  002966                     	endif
  6852  002966  0008               	tblrd		*
  6853  002968  50F5               	movf	tablat,w,c
  6854  00296A  5E01               	subwf	?___wmul^0,f,c
  6855  00296C  0E00               	movlw	0
  6856  00296E  5A02               	subwfb	(?___wmul+1)^0,f,c
  6857  002970  0E30               	movlw	48
  6858  002972  2401               	addwf	?___wmul^0,w,c
  6859  002974  6E15               	movwf	atoi@n^0,c
  6860  002976  0E00               	movlw	0
  6861  002978  2002               	addwfc	(?___wmul+1)^0,w,c
  6862  00297A  6E16               	movwf	(atoi@n+1)^0,c
  6863  00297C  EF87  F014         	goto	l3771
  6864  002980                     l3779:
  6865  002980  0ED0               	movlw	208
  6866  002982  6E0A               	movwf	??_atoi^0,c
  6867  002984  0EFF               	movlw	255
  6868  002986  6E0B               	movwf	(??_atoi+1)^0,c
  6869  002988  C008  FFF6         	movff	atoi@s,tblptrl
  6870  00298C  C009  FFF7         	movff	atoi@s+1,tblptrh
  6871  002990                     	if	0	;tblptru may be non-zero
  6872  002990                     	endif
  6873  002990                     	if	0	;tblptru may be non-zero
  6874  002990                     	endif
  6875  002990  0008               	tblrd		*
  6876  002992  50F5               	movf	tablat,w,c
  6877  002994  6E0C               	movwf	(??_atoi+2)^0,c
  6878  002996  6A0D               	clrf	(??_atoi+3)^0,c
  6879  002998  500A               	movf	??_atoi^0,w,c
  6880  00299A  260C               	addwf	(??_atoi+2)^0,f,c
  6881  00299C  500B               	movf	(??_atoi+1)^0,w,c
  6882  00299E  220D               	addwfc	(??_atoi+3)^0,f,c
  6883  0029A0  500D               	movf	(??_atoi+3)^0,w,c
  6884  0029A2  E10A               	bnz	u4500
  6885  0029A4  0E0A               	movlw	10
  6886  0029A6  5C0C               	subwf	(??_atoi+2)^0,w,c
  6887  0029A8  A0D8               	btfss	status,0,c
  6888  0029AA  EFD9  F014         	goto	u4501
  6889  0029AE  EFDC  F014         	goto	u4500
  6890  0029B2                     u4501:
  6891  0029B2  0E01               	movlw	1
  6892  0029B4  EFDD  F014         	goto	u4510
  6893  0029B8                     u4500:
  6894  0029B8  0E00               	movlw	0
  6895  0029BA                     u4510:
  6896  0029BA  6E12               	movwf	_atoi$825^0,c
  6897  0029BC  6A13               	clrf	(_atoi$825+1)^0,c
  6898  0029BE  5012               	movf	_atoi$825^0,w,c
  6899  0029C0  1013               	iorwf	(_atoi$825+1)^0,w,c
  6900  0029C2  A4D8               	btfss	status,2,c
  6901  0029C4  EFE6  F014         	goto	u4521
  6902  0029C8  EFE8  F014         	goto	u4520
  6903  0029CC                     u4521:
  6904  0029CC  EFA5  F014         	goto	l3775
  6905  0029D0                     u4520:
  6906  0029D0  500E               	movf	atoi@neg^0,w,c
  6907  0029D2  100F               	iorwf	(atoi@neg+1)^0,w,c
  6908  0029D4  A4D8               	btfss	status,2,c
  6909  0029D6  EFEF  F014         	goto	u4531
  6910  0029DA  EFF1  F014         	goto	u4530
  6911  0029DE                     u4531:
  6912  0029DE  EFFF  F014         	goto	l1043
  6913  0029E2                     u4530:
  6914  0029E2  C015  F00A         	movff	atoi@n,??_atoi
  6915  0029E6  C016  F00B         	movff	atoi@n+1,??_atoi+1
  6916  0029EA  1E0A               	comf	??_atoi^0,f,c
  6917  0029EC  1E0B               	comf	(??_atoi+1)^0,f,c
  6918  0029EE  4A0A               	infsnz	??_atoi^0,f,c
  6919  0029F0  2A0B               	incf	(??_atoi+1)^0,f,c
  6920  0029F2  C00A  F008         	movff	??_atoi,?_atoi
  6921  0029F6  C00B  F009         	movff	??_atoi+1,?_atoi+1
  6922  0029FA  EF03  F015         	goto	l1046
  6923  0029FE                     l1043:
  6924  0029FE  C015  F008         	movff	atoi@n,?_atoi
  6925  002A02  C016  F009         	movff	atoi@n+1,?_atoi+1
  6926  002A06                     l1046:
  6927  002A06  0012               	return		;funcret
  6928  002A08                     __end_of_atoi:
  6929                           	opt callstack 0
  6930                           
  6931 ;; *************** function _isspace *****************
  6932 ;; Defined at:
  6933 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  6934 ;; Parameters:    Size  Location     Type
  6935 ;;  c               2    0[COMRAM] int 
  6936 ;; Auto vars:     Size  Location     Type
  6937 ;;		None
  6938 ;; Return value:  Size  Location     Type
  6939 ;;                  2    0[COMRAM] int 
  6940 ;; Registers used:
  6941 ;;		wreg, status,2, status,0
  6942 ;; Tracked objects:
  6943 ;;		On entry : 0/0
  6944 ;;		On exit  : 0/0
  6945 ;;		Unchanged: 0/0
  6946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6947 ;;      Params:         2       0       0       0       0       0       0       0       0
  6948 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6949 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6950 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6951 ;;Total ram usage:        7 bytes
  6952 ;; Hardware stack levels used:    1
  6953 ;; This function calls:
  6954 ;;		Nothing
  6955 ;; This function is called by:
  6956 ;;		_atoi
  6957 ;; This function uses a non-reentrant model
  6958 ;;
  6959                           
  6960                           	psect	text26
  6961  00361E                     __ptext26:
  6962                           	opt callstack 0
  6963  00361E                     _isspace:
  6964                           	opt callstack 26
  6965  00361E  0E01               	movlw	1
  6966  003620  6E07               	movwf	_isspace$854^0,c
  6967  003622  0E20               	movlw	32
  6968  003624  1801               	xorwf	isspace@c^0,w,c
  6969  003626  1002               	iorwf	(isspace@c+1)^0,w,c
  6970  003628  B4D8               	btfsc	status,2,c
  6971  00362A  EF19  F01B         	goto	u3911
  6972  00362E  EF1B  F01B         	goto	u3910
  6973  003632                     u3911:
  6974  003632  EF34  F01B         	goto	l3419
  6975  003636                     u3910:
  6976  003636  0EF7               	movlw	247
  6977  003638  6E03               	movwf	??_isspace^0,c
  6978  00363A  0EFF               	movlw	255
  6979  00363C  6E04               	movwf	(??_isspace+1)^0,c
  6980  00363E  C001  F005         	movff	isspace@c,??_isspace+2
  6981  003642  C002  F006         	movff	isspace@c+1,??_isspace+3
  6982  003646  5003               	movf	??_isspace^0,w,c
  6983  003648  2605               	addwf	(??_isspace+2)^0,f,c
  6984  00364A  5004               	movf	(??_isspace+1)^0,w,c
  6985  00364C  2206               	addwfc	(??_isspace+3)^0,f,c
  6986  00364E  5006               	movf	(??_isspace+3)^0,w,c
  6987  003650  E109               	bnz	u3920
  6988  003652  0E05               	movlw	5
  6989  003654  5C05               	subwf	(??_isspace+2)^0,w,c
  6990  003656  A0D8               	btfss	status,0,c
  6991  003658  EF30  F01B         	goto	u3921
  6992  00365C  EF32  F01B         	goto	u3920
  6993  003660                     u3921:
  6994  003660  EF34  F01B         	goto	l3419
  6995  003664                     u3920:
  6996  003664  0E00               	movlw	0
  6997  003666  6E07               	movwf	_isspace$854^0,c
  6998  003668                     l3419:
  6999  003668  C007  F001         	movff	_isspace$854,?_isspace
  7000  00366C  6A02               	clrf	(?_isspace+1)^0,c
  7001  00366E  0012               	return		;funcret
  7002  003670                     __end_of_isspace:
  7003                           	opt callstack 0
  7004                           
  7005 ;; *************** function _isdigit *****************
  7006 ;; Defined at:
  7007 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  7008 ;; Parameters:    Size  Location     Type
  7009 ;;  c               2    0[COMRAM] int 
  7010 ;; Auto vars:     Size  Location     Type
  7011 ;;		None
  7012 ;; Return value:  Size  Location     Type
  7013 ;;                  2    0[COMRAM] int 
  7014 ;; Registers used:
  7015 ;;		wreg, status,2, status,0
  7016 ;; Tracked objects:
  7017 ;;		On entry : 0/0
  7018 ;;		On exit  : 0/0
  7019 ;;		Unchanged: 0/0
  7020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7021 ;;      Params:         2       0       0       0       0       0       0       0       0
  7022 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7023 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7024 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7025 ;;Total ram usage:        6 bytes
  7026 ;; Hardware stack levels used:    1
  7027 ;; This function calls:
  7028 ;;		Nothing
  7029 ;; This function is called by:
  7030 ;;		_vfpfcnvrt
  7031 ;;		_atoi
  7032 ;; This function uses a non-reentrant model
  7033 ;;
  7034                           
  7035                           	psect	text27
  7036  003840                     __ptext27:
  7037                           	opt callstack 0
  7038  003840                     _isdigit:
  7039                           	opt callstack 27
  7040  003840  0ED0               	movlw	208
  7041  003842  6E03               	movwf	??_isdigit^0,c
  7042  003844  0EFF               	movlw	255
  7043  003846  6E04               	movwf	(??_isdigit+1)^0,c
  7044  003848  C001  F005         	movff	isdigit@c,??_isdigit+2
  7045  00384C  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  7046  003850  5003               	movf	??_isdigit^0,w,c
  7047  003852  2605               	addwf	(??_isdigit+2)^0,f,c
  7048  003854  5004               	movf	(??_isdigit+1)^0,w,c
  7049  003856  2206               	addwfc	(??_isdigit+3)^0,f,c
  7050  003858  5006               	movf	(??_isdigit+3)^0,w,c
  7051  00385A  E10A               	bnz	u3190
  7052  00385C  0E0A               	movlw	10
  7053  00385E  5C05               	subwf	(??_isdigit+2)^0,w,c
  7054  003860  A0D8               	btfss	status,0,c
  7055  003862  EF35  F01C         	goto	u3191
  7056  003866  EF38  F01C         	goto	u3190
  7057  00386A                     u3191:
  7058  00386A  0E01               	movlw	1
  7059  00386C  EF39  F01C         	goto	u3200
  7060  003870                     u3190:
  7061  003870  0E00               	movlw	0
  7062  003872                     u3200:
  7063  003872  6E01               	movwf	?_isdigit^0,c
  7064  003874  6A02               	clrf	(?_isdigit+1)^0,c
  7065  003876  0012               	return		;funcret
  7066  003878                     __end_of_isdigit:
  7067                           	opt callstack 0
  7068                           
  7069 ;; *************** function ___wmul *****************
  7070 ;; Defined at:
  7071 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  7072 ;; Parameters:    Size  Location     Type
  7073 ;;  multiplier      2    0[COMRAM] unsigned int 
  7074 ;;  multiplicand    2    2[COMRAM] unsigned int 
  7075 ;; Auto vars:     Size  Location     Type
  7076 ;;  product         2    4[COMRAM] unsigned int 
  7077 ;; Return value:  Size  Location     Type
  7078 ;;                  2    0[COMRAM] unsigned int 
  7079 ;; Registers used:
  7080 ;;		wreg, status,2, status,0, prodl, prodh
  7081 ;; Tracked objects:
  7082 ;;		On entry : 0/0
  7083 ;;		On exit  : 0/0
  7084 ;;		Unchanged: 0/0
  7085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7086 ;;      Params:         4       0       0       0       0       0       0       0       0
  7087 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7088 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7089 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7090 ;;Total ram usage:        6 bytes
  7091 ;; Hardware stack levels used:    1
  7092 ;; This function calls:
  7093 ;;		Nothing
  7094 ;; This function is called by:
  7095 ;;		_atoi
  7096 ;; This function uses a non-reentrant model
  7097 ;;
  7098                           
  7099                           	psect	text28
  7100  003902                     __ptext28:
  7101                           	opt callstack 0
  7102  003902                     ___wmul:
  7103                           	opt callstack 26
  7104  003902  5001               	movf	___wmul@multiplier^0,w,c
  7105  003904  0203               	mulwf	___wmul@multiplicand^0,c
  7106  003906  CFF3 F005          	movff	prodl,___wmul@product
  7107  00390A  CFF4 F006          	movff	prodh,___wmul@product+1
  7108  00390E  5001               	movf	___wmul@multiplier^0,w,c
  7109  003910  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  7110  003912  50F3               	movf	243,w,c
  7111  003914  2606               	addwf	(___wmul@product+1)^0,f,c
  7112  003916  5002               	movf	(___wmul@multiplier+1)^0,w,c
  7113  003918  0203               	mulwf	___wmul@multiplicand^0,c
  7114  00391A  50F3               	movf	243,w,c
  7115  00391C  2606               	addwf	(___wmul@product+1)^0,f,c
  7116  00391E  C005  F001         	movff	___wmul@product,?___wmul
  7117  003922  C006  F002         	movff	___wmul@product+1,?___wmul+1
  7118  003926  0012               	return		;funcret
  7119  003928                     __end_of___wmul:
  7120                           	opt callstack 0
  7121                           
  7122 ;; *************** function _settings *****************
  7123 ;; Defined at:
  7124 ;;		line 84 in file "main.c"
  7125 ;; Parameters:    Size  Location     Type
  7126 ;;		None
  7127 ;; Auto vars:     Size  Location     Type
  7128 ;;		None
  7129 ;; Return value:  Size  Location     Type
  7130 ;;                  1    wreg      void 
  7131 ;; Registers used:
  7132 ;;		wreg, status,2, status,0, cstack
  7133 ;; Tracked objects:
  7134 ;;		On entry : 0/0
  7135 ;;		On exit  : 0/0
  7136 ;;		Unchanged: 0/0
  7137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7138 ;;      Params:         0       0       0       0       0       0       0       0       0
  7139 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7140 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7141 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7142 ;;Total ram usage:        0 bytes
  7143 ;; Hardware stack levels used:    1
  7144 ;; Hardware stack levels required when called:    2
  7145 ;; This function calls:
  7146 ;;		_SettingsLCD
  7147 ;; This function is called by:
  7148 ;;		_main
  7149 ;; This function uses a non-reentrant model
  7150 ;;
  7151                           
  7152                           	psect	text29
  7153  0036C0                     __ptext29:
  7154                           	opt callstack 0
  7155  0036C0                     _settings:
  7156                           	opt callstack 28
  7157  0036C0                     
  7158                           ;main.c: 85:     OSCCON = 0x72;
  7159  0036C0  0E72               	movlw	114
  7160  0036C2  6ED3               	movwf	211,c	;volatile
  7161                           
  7162                           ;main.c: 86:     ADCON1 = 0x0F;
  7163  0036C4  0E0F               	movlw	15
  7164  0036C6  6EC1               	movwf	193,c	;volatile
  7165  0036C8                     
  7166                           ;main.c: 88:     TRISBbits.RB0 = 1;
  7167  0036C8  8093               	bsf	147,0,c	;volatile
  7168  0036CA                     
  7169                           ;main.c: 89:     TRISBbits.RB1 = 1;
  7170  0036CA  8293               	bsf	147,1,c	;volatile
  7171                           
  7172                           ;main.c: 90:     SSPSTAT = 0x80;
  7173  0036CC  0E80               	movlw	128
  7174  0036CE  6EC7               	movwf	199,c	;volatile
  7175                           
  7176                           ;main.c: 91:     SSPCON1 = 0x28;
  7177  0036D0  0E28               	movlw	40
  7178  0036D2  6EC6               	movwf	198,c	;volatile
  7179                           
  7180                           ;main.c: 92:     SSPCON2 = 0;
  7181  0036D4  0E00               	movlw	0
  7182  0036D6  6EC5               	movwf	197,c	;volatile
  7183                           
  7184                           ;main.c: 93:     SSPADD = 0x13;
  7185  0036D8  0E13               	movlw	19
  7186  0036DA  6EC8               	movwf	200,c	;volatile
  7187                           
  7188                           ;main.c: 95:     TRISE = 0;
  7189  0036DC  0E00               	movlw	0
  7190  0036DE  6E96               	movwf	150,c	;volatile
  7191                           
  7192                           ;main.c: 96:     LATE = 0;
  7193  0036E0  0E00               	movlw	0
  7194  0036E2  6E8D               	movwf	141,c	;volatile
  7195                           
  7196                           ;main.c: 97:     TRISD = 0;
  7197  0036E4  0E00               	movlw	0
  7198  0036E6  6E95               	movwf	149,c	;volatile
  7199                           
  7200                           ;main.c: 98:     LATD = 0;
  7201  0036E8  0E00               	movlw	0
  7202  0036EA  6E8C               	movwf	140,c	;volatile
  7203  0036EC                     
  7204                           ;main.c: 99:     SettingsLCD(0x02);
  7205  0036EC  0E02               	movlw	2
  7206  0036EE  ECB9  F01C         	call	_SettingsLCD
  7207  0036F2                     
  7208                           ;main.c: 100:     SettingsLCD(0x06);
  7209  0036F2  0E06               	movlw	6
  7210  0036F4  ECB9  F01C         	call	_SettingsLCD
  7211  0036F8                     
  7212                           ;main.c: 101:     SettingsLCD(0x0F);
  7213  0036F8  0E0F               	movlw	15
  7214  0036FA  ECB9  F01C         	call	_SettingsLCD
  7215  0036FE                     
  7216                           ;main.c: 102:     SettingsLCD(0x28);
  7217  0036FE  0E28               	movlw	40
  7218  003700  ECB9  F01C         	call	_SettingsLCD
  7219  003704                     
  7220                           ;main.c: 103:     SettingsLCD(0x01);
  7221  003704  0E01               	movlw	1
  7222  003706  ECB9  F01C         	call	_SettingsLCD
  7223  00370A  0012               	return		;funcret
  7224  00370C                     __end_of_settings:
  7225                           	opt callstack 0
  7226                           
  7227 ;; *************** function _SettingsLCD *****************
  7228 ;; Defined at:
  7229 ;;		line 174 in file "main.c"
  7230 ;; Parameters:    Size  Location     Type
  7231 ;;  word            1    wreg     unsigned char 
  7232 ;; Auto vars:     Size  Location     Type
  7233 ;;  word            1    1[COMRAM] unsigned char 
  7234 ;; Return value:  Size  Location     Type
  7235 ;;                  1    wreg      void 
  7236 ;; Registers used:
  7237 ;;		wreg, status,2, status,0, cstack
  7238 ;; Tracked objects:
  7239 ;;		On entry : 0/0
  7240 ;;		On exit  : 0/0
  7241 ;;		Unchanged: 0/0
  7242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7243 ;;      Params:         0       0       0       0       0       0       0       0       0
  7244 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7245 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7246 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7247 ;;Total ram usage:        1 bytes
  7248 ;; Hardware stack levels used:    1
  7249 ;; Hardware stack levels required when called:    1
  7250 ;; This function calls:
  7251 ;;		_LCD
  7252 ;; This function is called by:
  7253 ;;		_main
  7254 ;;		_settings
  7255 ;; This function uses a non-reentrant model
  7256 ;;
  7257                           
  7258                           	psect	text30
  7259  003972                     __ptext30:
  7260                           	opt callstack 0
  7261  003972                     _SettingsLCD:
  7262                           	opt callstack 28
  7263                           
  7264                           ;incstack = 0
  7265                           ;SettingsLCD@word stored from wreg
  7266  003972  6E02               	movwf	SettingsLCD@word^0,c
  7267  003974                     
  7268                           ;main.c: 175:     LATE1 = 0;
  7269  003974  928D               	bcf	3981,1,c	;volatile
  7270  003976                     
  7271                           ;main.c: 176:     LCD(word >> 4);
  7272  003976  3802               	swapf	SettingsLCD@word^0,w,c
  7273  003978  0B0F               	andlw	15
  7274  00397A  ECA7  F01C         	call	_LCD
  7275                           
  7276                           ;main.c: 177:     LCD(word & 0x0F);
  7277  00397E  5002               	movf	SettingsLCD@word^0,w,c
  7278  003980  0B0F               	andlw	15
  7279  003982  ECA7  F01C         	call	_LCD
  7280  003986  0012               	return		;funcret
  7281  003988                     __end_of_SettingsLCD:
  7282                           	opt callstack 0
  7283                           
  7284 ;; *************** function _setCalibration_32V_2A *****************
  7285 ;; Defined at:
  7286 ;;		line 195 in file "main.c"
  7287 ;; Parameters:    Size  Location     Type
  7288 ;;		None
  7289 ;; Auto vars:     Size  Location     Type
  7290 ;;  config          2   10[COMRAM] unsigned int 
  7291 ;; Return value:  Size  Location     Type
  7292 ;;                  1    wreg      void 
  7293 ;; Registers used:
  7294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7295 ;; Tracked objects:
  7296 ;;		On entry : 0/0
  7297 ;;		On exit  : 0/0
  7298 ;;		Unchanged: 0/0
  7299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7300 ;;      Params:         0       0       0       0       0       0       0       0       0
  7301 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7302 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7303 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7304 ;;Total ram usage:        2 bytes
  7305 ;; Hardware stack levels used:    1
  7306 ;; Hardware stack levels required when called:    3
  7307 ;; This function calls:
  7308 ;;		_WriteI2C
  7309 ;; This function is called by:
  7310 ;;		_main
  7311 ;; This function uses a non-reentrant model
  7312 ;;
  7313                           
  7314                           	psect	text31
  7315  003670                     __ptext31:
  7316                           	opt callstack 0
  7317  003670                     _setCalibration_32V_2A:
  7318                           	opt callstack 27
  7319  003670                     
  7320                           ;main.c: 196:     unsigned int config;;main.c: 197:     ina219_calValue = 4096;
  7321  003670  0E10               	movlw	16
  7322  003672  0100               	movlb	0	; () banked
  7323  003674  6FD8               	movwf	(_ina219_calValue+1)& (0+255),b
  7324  003676  0E00               	movlw	0
  7325  003678  6FD7               	movwf	_ina219_calValue& (0+255),b
  7326                           
  7327                           ;main.c: 198:     ina219_currentDivider_mA = 10;
  7328  00367A  0E0A               	movlw	10
  7329  00367C  6FC7               	movwf	_ina219_currentDivider_mA& (0+255),b
  7330                           
  7331                           ;main.c: 199:     ina219_powerDivider_mW = 2;
  7332  00367E  0E02               	movlw	2
  7333  003680  6FC6               	movwf	_ina219_powerDivider_mW& (0+255),b
  7334  003682                     
  7335                           ; BSR set to: 0
  7336                           ;main.c: 200:     WriteI2C(0x80,0x05,&ina219_calValue,2);
  7337  003682  0E05               	movlw	5
  7338  003684  6E03               	movwf	WriteI2C@Register^0,c
  7339  003686  0ED7               	movlw	low _ina219_calValue
  7340  003688  6E04               	movwf	WriteI2C@Data^0,c
  7341  00368A  0E00               	movlw	high _ina219_calValue
  7342  00368C  6E05               	movwf	(WriteI2C@Data+1)^0,c
  7343  00368E  0E00               	movlw	0
  7344  003690  6E07               	movwf	(WriteI2C@bytes+1)^0,c
  7345  003692  0E02               	movlw	2
  7346  003694  6E06               	movwf	WriteI2C@bytes^0,c
  7347  003696  0E80               	movlw	128
  7348  003698  EC66  F01A         	call	_WriteI2C
  7349  00369C                     
  7350                           ;main.c: 201:     config = 0x2000 | 0x1800 |
  7351  00369C  0E3C               	movlw	60
  7352  00369E  6E0C               	movwf	(setCalibration_32V_2A@config+1)^0,c
  7353  0036A0  0E1F               	movlw	31
  7354  0036A2  6E0B               	movwf	setCalibration_32V_2A@config^0,c
  7355                           
  7356                           ;main.c: 205:     WriteI2C(0x80,0x00,&config,2);
  7357  0036A4  0E00               	movlw	0
  7358  0036A6  6E03               	movwf	WriteI2C@Register^0,c
  7359  0036A8  0E0B               	movlw	low setCalibration_32V_2A@config
  7360  0036AA  6E04               	movwf	WriteI2C@Data^0,c
  7361  0036AC  0E00               	movlw	high setCalibration_32V_2A@config
  7362  0036AE  6E05               	movwf	(WriteI2C@Data+1)^0,c
  7363  0036B0  0E00               	movlw	0
  7364  0036B2  6E07               	movwf	(WriteI2C@bytes+1)^0,c
  7365  0036B4  0E02               	movlw	2
  7366  0036B6  6E06               	movwf	WriteI2C@bytes^0,c
  7367  0036B8  0E80               	movlw	128
  7368  0036BA  EC66  F01A         	call	_WriteI2C
  7369  0036BE  0012               	return		;funcret
  7370  0036C0                     __end_of_setCalibration_32V_2A:
  7371                           	opt callstack 0
  7372                           
  7373 ;; *************** function _WriteI2C *****************
  7374 ;; Defined at:
  7375 ;;		line 106 in file "main.c"
  7376 ;; Parameters:    Size  Location     Type
  7377 ;;  Address         1    wreg     unsigned char 
  7378 ;;  Register        1    2[COMRAM] unsigned char 
  7379 ;;  Data            2    3[COMRAM] PTR unsigned int 
  7380 ;;		 -> setCalibration_32V_2A@config(2), ina219_calValue(2), 
  7381 ;;  bytes           2    5[COMRAM] int 
  7382 ;; Auto vars:     Size  Location     Type
  7383 ;;  Address         1    9[COMRAM] unsigned char 
  7384 ;; Return value:  Size  Location     Type
  7385 ;;                  1    wreg      void 
  7386 ;; Registers used:
  7387 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7388 ;; Tracked objects:
  7389 ;;		On entry : 0/0
  7390 ;;		On exit  : 0/0
  7391 ;;		Unchanged: 0/0
  7392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7393 ;;      Params:         5       0       0       0       0       0       0       0       0
  7394 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7395 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7396 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7397 ;;Total ram usage:        8 bytes
  7398 ;; Hardware stack levels used:    1
  7399 ;; Hardware stack levels required when called:    2
  7400 ;; This function calls:
  7401 ;;		_SendI2C
  7402 ;;		_StartI2C
  7403 ;;		_StopI2C
  7404 ;; This function is called by:
  7405 ;;		_setCalibration_32V_2A
  7406 ;; This function uses a non-reentrant model
  7407 ;;
  7408                           
  7409                           	psect	text32
  7410  0034CC                     __ptext32:
  7411                           	opt callstack 0
  7412  0034CC                     _WriteI2C:
  7413                           	opt callstack 27
  7414                           
  7415                           ;incstack = 0
  7416                           ;WriteI2C@Address stored from wreg
  7417  0034CC  6E0A               	movwf	WriteI2C@Address^0,c
  7418  0034CE                     
  7419                           ;main.c: 107:     StartI2C();
  7420  0034CE  ECD9  F01C         	call	_StartI2C	;wreg free
  7421                           
  7422                           ;main.c: 108:     SendI2C(Address);
  7423  0034D2  500A               	movf	WriteI2C@Address^0,w,c
  7424  0034D4  ECCF  F01C         	call	_SendI2C
  7425                           
  7426                           ;main.c: 109:     SendI2C(Register);
  7427  0034D8  5003               	movf	WriteI2C@Register^0,w,c
  7428  0034DA  ECCF  F01C         	call	_SendI2C
  7429  0034DE                     
  7430                           ;main.c: 110:     SendI2C((*Data>>8)&0xFF);
  7431  0034DE  C004  FFD9         	movff	WriteI2C@Data,fsr2l
  7432  0034E2  C005  FFDA         	movff	WriteI2C@Data+1,fsr2h
  7433  0034E6  CFDE F008          	movff	postinc2,??_WriteI2C
  7434  0034EA  CFDD F009          	movff	postdec2,??_WriteI2C+1
  7435  0034EE  C009  F008         	movff	??_WriteI2C+1,??_WriteI2C
  7436  0034F2  6A09               	clrf	(??_WriteI2C+1)^0,c
  7437  0034F4  5008               	movf	??_WriteI2C^0,w,c
  7438  0034F6  ECCF  F01C         	call	_SendI2C
  7439  0034FA                     
  7440                           ;main.c: 111:     SendI2C(*Data&0xFF);
  7441  0034FA  C004  FFD9         	movff	WriteI2C@Data,fsr2l
  7442  0034FE  C005  FFDA         	movff	WriteI2C@Data+1,fsr2h
  7443  003502  50DF               	movf	indf2,w,c
  7444  003504  ECCF  F01C         	call	_SendI2C
  7445                           
  7446                           ;main.c: 116:     StopI2C();
  7447  003508  ECD5  F01C         	call	_StopI2C	;wreg free
  7448  00350C                     
  7449                           ;main.c: 117:     _delay((unsigned long)((10*100)*(8000000/4000.0)));
  7450  00350C  0E0B               	movlw	11
  7451  00350E  6E09               	movwf	(??_WriteI2C+1)^0,c
  7452  003510  0E26               	movlw	38
  7453  003512  6E08               	movwf	??_WriteI2C^0,c
  7454  003514  0E5E               	movlw	94
  7455  003516                     u4877:
  7456  003516  2EE8               	decfsz	wreg,f,c
  7457  003518  D7FE               	bra	u4877
  7458  00351A  2E08               	decfsz	??_WriteI2C^0,f,c
  7459  00351C  D7FC               	bra	u4877
  7460  00351E  2E09               	decfsz	(??_WriteI2C+1)^0,f,c
  7461  003520  D7FA               	bra	u4877
  7462  003522  0012               	return		;funcret
  7463  003524                     __end_of_WriteI2C:
  7464                           	opt callstack 0
  7465                           
  7466 ;; *************** function _getShuntVoltage_mV *****************
  7467 ;; Defined at:
  7468 ;;		line 222 in file "main.c"
  7469 ;; Parameters:    Size  Location     Type
  7470 ;;		None
  7471 ;; Auto vars:     Size  Location     Type
  7472 ;;  value           2   43[COMRAM] unsigned int 
  7473 ;; Return value:  Size  Location     Type
  7474 ;;                  4   39[COMRAM] float 
  7475 ;; Registers used:
  7476 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7477 ;; Tracked objects:
  7478 ;;		On entry : 0/0
  7479 ;;		On exit  : 0/0
  7480 ;;		Unchanged: 0/0
  7481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7482 ;;      Params:         4       0       0       0       0       0       0       0       0
  7483 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7484 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7485 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7486 ;;Total ram usage:        6 bytes
  7487 ;; Hardware stack levels used:    1
  7488 ;; Hardware stack levels required when called:    4
  7489 ;; This function calls:
  7490 ;;		___flmul
  7491 ;;		___xxtofl
  7492 ;;		_getShuntVoltage_raw
  7493 ;; This function is called by:
  7494 ;;		_main
  7495 ;; This function uses a non-reentrant model
  7496 ;;
  7497                           
  7498                           	psect	text33
  7499  003524                     __ptext33:
  7500                           	opt callstack 0
  7501  003524                     _getShuntVoltage_mV:
  7502                           	opt callstack 26
  7503  003524                     
  7504                           ;main.c: 223:     unsigned int value;;main.c: 224:     value = getShuntVoltage_raw();
  7505  003524  ECCB  F01B         	call	_getShuntVoltage_raw	;wreg free
  7506  003528  C00C  F02C         	movff	?_getShuntVoltage_raw,getShuntVoltage_mV@value
  7507  00352C  C00D  F02D         	movff	?_getShuntVoltage_raw+1,getShuntVoltage_mV@value+1
  7508  003530                     
  7509                           ;main.c: 225:     return value * 0.01;
  7510  003530  C02C  F001         	movff	getShuntVoltage_mV@value,___xxtofl@val
  7511  003534  C02D  F002         	movff	getShuntVoltage_mV@value+1,___xxtofl@val+1
  7512  003538  6A03               	clrf	(___xxtofl@val+2)^0,c
  7513  00353A  6A04               	clrf	(___xxtofl@val+3)^0,c
  7514  00353C  0E00               	movlw	0
  7515  00353E  EC62  F013         	call	___xxtofl
  7516  003542  C001  F00F         	movff	?___xxtofl,___flmul@b
  7517  003546  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  7518  00354A  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  7519  00354E  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  7520  003552  0E0A               	movlw	10
  7521  003554  6E13               	movwf	___flmul@a^0,c
  7522  003556  0ED7               	movlw	215
  7523  003558  6E14               	movwf	(___flmul@a+1)^0,c
  7524  00355A  0E23               	movlw	35
  7525  00355C  6E15               	movwf	(___flmul@a+2)^0,c
  7526  00355E  0E3C               	movlw	60
  7527  003560  6E16               	movwf	(___flmul@a+3)^0,c
  7528  003562  EC77  F00E         	call	___flmul	;wreg free
  7529  003566  C00F  F028         	movff	?___flmul,?_getShuntVoltage_mV
  7530  00356A  C010  F029         	movff	?___flmul+1,?_getShuntVoltage_mV+1
  7531  00356E  C011  F02A         	movff	?___flmul+2,?_getShuntVoltage_mV+2
  7532  003572  C012  F02B         	movff	?___flmul+3,?_getShuntVoltage_mV+3
  7533  003576  0012               	return		;funcret
  7534  003578                     __end_of_getShuntVoltage_mV:
  7535                           	opt callstack 0
  7536                           
  7537 ;; *************** function _getShuntVoltage_raw *****************
  7538 ;; Defined at:
  7539 ;;		line 228 in file "main.c"
  7540 ;; Parameters:    Size  Location     Type
  7541 ;;		None
  7542 ;; Auto vars:     Size  Location     Type
  7543 ;;  value           2   17[COMRAM] unsigned char [2]
  7544 ;;  temp            2   15[COMRAM] unsigned int 
  7545 ;; Return value:  Size  Location     Type
  7546 ;;                  2   11[COMRAM] int 
  7547 ;; Registers used:
  7548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7549 ;; Tracked objects:
  7550 ;;		On entry : 0/0
  7551 ;;		On exit  : 0/0
  7552 ;;		Unchanged: 0/0
  7553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7554 ;;      Params:         2       0       0       0       0       0       0       0       0
  7555 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7556 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7557 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7558 ;;Total ram usage:        8 bytes
  7559 ;; Hardware stack levels used:    1
  7560 ;; Hardware stack levels required when called:    3
  7561 ;; This function calls:
  7562 ;;		_ReadI2C
  7563 ;; This function is called by:
  7564 ;;		_getShuntVoltage_mV
  7565 ;; This function uses a non-reentrant model
  7566 ;;
  7567                           
  7568                           	psect	text34
  7569  003796                     __ptext34:
  7570                           	opt callstack 0
  7571  003796                     _getShuntVoltage_raw:
  7572                           	opt callstack 26
  7573  003796                     
  7574                           ;main.c: 229:     unsigned char value[2];;main.c: 230:     unsigned int temp;;main.c: 23
      +                          1:     ReadI2C(0x80, 0x01, value, 2);
  7575  003796  0E01               	movlw	1
  7576  003798  6E04               	movwf	ReadI2C@Register^0,c
  7577  00379A  0E12               	movlw	low getShuntVoltage_raw@value
  7578  00379C  6E05               	movwf	ReadI2C@Data^0,c
  7579  00379E  0E00               	movlw	high getShuntVoltage_raw@value
  7580  0037A0  6E06               	movwf	(ReadI2C@Data+1)^0,c
  7581  0037A2  0E00               	movlw	0
  7582  0037A4  6E08               	movwf	(ReadI2C@bytes+1)^0,c
  7583  0037A6  0E02               	movlw	2
  7584  0037A8  6E07               	movwf	ReadI2C@bytes^0,c
  7585  0037AA  0E80               	movlw	128
  7586  0037AC  EC9E  F018         	call	_ReadI2C
  7587  0037B0                     
  7588                           ;main.c: 232:     temp = ((value[0] << 8) | value[1]);
  7589  0037B0  5013               	movf	(getShuntVoltage_raw@value+1)^0,w,c
  7590  0037B2  C012  F00E         	movff	getShuntVoltage_raw@value,??_getShuntVoltage_raw
  7591  0037B6  6A0F               	clrf	(??_getShuntVoltage_raw+1)^0,c
  7592  0037B8  C00E  F00F         	movff	??_getShuntVoltage_raw,??_getShuntVoltage_raw+1
  7593  0037BC  6A0E               	clrf	??_getShuntVoltage_raw^0,c
  7594  0037BE  100E               	iorwf	??_getShuntVoltage_raw^0,w,c
  7595  0037C0  6E10               	movwf	getShuntVoltage_raw@temp^0,c
  7596  0037C2  500F               	movf	(??_getShuntVoltage_raw+1)^0,w,c
  7597  0037C4  6E11               	movwf	(getShuntVoltage_raw@temp+1)^0,c
  7598  0037C6                     
  7599                           ;main.c: 233:     return temp;
  7600  0037C6  C010  F00C         	movff	getShuntVoltage_raw@temp,?_getShuntVoltage_raw
  7601  0037CA  C011  F00D         	movff	getShuntVoltage_raw@temp+1,?_getShuntVoltage_raw+1
  7602  0037CE  0012               	return		;funcret
  7603  0037D0                     __end_of_getShuntVoltage_raw:
  7604                           	opt callstack 0
  7605                           
  7606 ;; *************** function _getBusVoltage_V *****************
  7607 ;; Defined at:
  7608 ;;		line 208 in file "main.c"
  7609 ;; Parameters:    Size  Location     Type
  7610 ;;		None
  7611 ;; Auto vars:     Size  Location     Type
  7612 ;;  value           2   43[COMRAM] unsigned int 
  7613 ;; Return value:  Size  Location     Type
  7614 ;;                  4   39[COMRAM] float 
  7615 ;; Registers used:
  7616 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7617 ;; Tracked objects:
  7618 ;;		On entry : 0/0
  7619 ;;		On exit  : 0/0
  7620 ;;		Unchanged: 0/0
  7621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7622 ;;      Params:         4       0       0       0       0       0       0       0       0
  7623 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7624 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7625 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7626 ;;Total ram usage:        6 bytes
  7627 ;; Hardware stack levels used:    1
  7628 ;; Hardware stack levels required when called:    4
  7629 ;; This function calls:
  7630 ;;		___flmul
  7631 ;;		___xxtofl
  7632 ;;		_getBusVoltage_raw
  7633 ;; This function is called by:
  7634 ;;		_main
  7635 ;; This function uses a non-reentrant model
  7636 ;;
  7637                           
  7638                           	psect	text35
  7639  003578                     __ptext35:
  7640                           	opt callstack 0
  7641  003578                     _getBusVoltage_V:
  7642                           	opt callstack 26
  7643  003578                     
  7644                           ;main.c: 209:     unsigned int value = getBusVoltage_raw();
  7645  003578  EC08  F01A         	call	_getBusVoltage_raw	;wreg free
  7646  00357C  C00C  F02C         	movff	?_getBusVoltage_raw,getBusVoltage_V@value
  7647  003580  C00D  F02D         	movff	?_getBusVoltage_raw+1,getBusVoltage_V@value+1
  7648  003584                     
  7649                           ;main.c: 210:     return value * 0.001;
  7650  003584  C02C  F001         	movff	getBusVoltage_V@value,___xxtofl@val
  7651  003588  C02D  F002         	movff	getBusVoltage_V@value+1,___xxtofl@val+1
  7652  00358C  6A03               	clrf	(___xxtofl@val+2)^0,c
  7653  00358E  6A04               	clrf	(___xxtofl@val+3)^0,c
  7654  003590  0E00               	movlw	0
  7655  003592  EC62  F013         	call	___xxtofl
  7656  003596  C001  F00F         	movff	?___xxtofl,___flmul@b
  7657  00359A  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  7658  00359E  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  7659  0035A2  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  7660  0035A6  0E6F               	movlw	111
  7661  0035A8  6E13               	movwf	___flmul@a^0,c
  7662  0035AA  0E12               	movlw	18
  7663  0035AC  6E14               	movwf	(___flmul@a+1)^0,c
  7664  0035AE  0E83               	movlw	131
  7665  0035B0  6E15               	movwf	(___flmul@a+2)^0,c
  7666  0035B2  0E3A               	movlw	58
  7667  0035B4  6E16               	movwf	(___flmul@a+3)^0,c
  7668  0035B6  EC77  F00E         	call	___flmul	;wreg free
  7669  0035BA  C00F  F028         	movff	?___flmul,?_getBusVoltage_V
  7670  0035BE  C010  F029         	movff	?___flmul+1,?_getBusVoltage_V+1
  7671  0035C2  C011  F02A         	movff	?___flmul+2,?_getBusVoltage_V+2
  7672  0035C6  C012  F02B         	movff	?___flmul+3,?_getBusVoltage_V+3
  7673  0035CA  0012               	return		;funcret
  7674  0035CC                     __end_of_getBusVoltage_V:
  7675                           	opt callstack 0
  7676                           
  7677 ;; *************** function _getBusVoltage_raw *****************
  7678 ;; Defined at:
  7679 ;;		line 213 in file "main.c"
  7680 ;; Parameters:    Size  Location     Type
  7681 ;;		None
  7682 ;; Auto vars:     Size  Location     Type
  7683 ;;  value           2   17[COMRAM] unsigned char [2]
  7684 ;;  temp            2   15[COMRAM] unsigned int 
  7685 ;; Return value:  Size  Location     Type
  7686 ;;                  2   11[COMRAM] int 
  7687 ;; Registers used:
  7688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7689 ;; Tracked objects:
  7690 ;;		On entry : 0/0
  7691 ;;		On exit  : 0/0
  7692 ;;		Unchanged: 0/0
  7693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7694 ;;      Params:         2       0       0       0       0       0       0       0       0
  7695 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7696 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7697 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7698 ;;Total ram usage:        8 bytes
  7699 ;; Hardware stack levels used:    1
  7700 ;; Hardware stack levels required when called:    3
  7701 ;; This function calls:
  7702 ;;		_ReadI2C
  7703 ;; This function is called by:
  7704 ;;		_getBusVoltage_V
  7705 ;; This function uses a non-reentrant model
  7706 ;;
  7707                           
  7708                           	psect	text36
  7709  003410                     __ptext36:
  7710                           	opt callstack 0
  7711  003410                     _getBusVoltage_raw:
  7712                           	opt callstack 26
  7713  003410                     
  7714                           ;main.c: 214:     unsigned char value[2];;main.c: 215:     unsigned int temp;;main.c: 21
      +                          6:     ReadI2C(0x80, 0x02, value, 2);
  7715  003410  0E02               	movlw	2
  7716  003412  6E04               	movwf	ReadI2C@Register^0,c
  7717  003414  0E12               	movlw	low getBusVoltage_raw@value
  7718  003416  6E05               	movwf	ReadI2C@Data^0,c
  7719  003418  0E00               	movlw	high getBusVoltage_raw@value
  7720  00341A  6E06               	movwf	(ReadI2C@Data+1)^0,c
  7721  00341C  0E00               	movlw	0
  7722  00341E  6E08               	movwf	(ReadI2C@bytes+1)^0,c
  7723  003420  0E02               	movlw	2
  7724  003422  6E07               	movwf	ReadI2C@bytes^0,c
  7725  003424  0E80               	movlw	128
  7726  003426  EC9E  F018         	call	_ReadI2C
  7727  00342A                     
  7728                           ;main.c: 217:     temp = ((value[0] << 8) | value[1]);
  7729  00342A  5013               	movf	(getBusVoltage_raw@value+1)^0,w,c
  7730  00342C  C012  F00E         	movff	getBusVoltage_raw@value,??_getBusVoltage_raw
  7731  003430  6A0F               	clrf	(??_getBusVoltage_raw+1)^0,c
  7732  003432  C00E  F00F         	movff	??_getBusVoltage_raw,??_getBusVoltage_raw+1
  7733  003436  6A0E               	clrf	??_getBusVoltage_raw^0,c
  7734  003438  100E               	iorwf	??_getBusVoltage_raw^0,w,c
  7735  00343A  6E10               	movwf	getBusVoltage_raw@temp^0,c
  7736  00343C  500F               	movf	(??_getBusVoltage_raw+1)^0,w,c
  7737  00343E  6E11               	movwf	(getBusVoltage_raw@temp+1)^0,c
  7738  003440                     
  7739                           ;main.c: 219:     return ((temp >> 3) * 4);
  7740  003440  C010  F00E         	movff	getBusVoltage_raw@temp,??_getBusVoltage_raw
  7741  003444  C011  F00F         	movff	getBusVoltage_raw@temp+1,??_getBusVoltage_raw+1
  7742  003448  90D8               	bcf	status,0,c
  7743  00344A  320F               	rrcf	(??_getBusVoltage_raw+1)^0,f,c
  7744  00344C  320E               	rrcf	??_getBusVoltage_raw^0,f,c
  7745  00344E  90D8               	bcf	status,0,c
  7746  003450  320F               	rrcf	(??_getBusVoltage_raw+1)^0,f,c
  7747  003452  320E               	rrcf	??_getBusVoltage_raw^0,f,c
  7748  003454  90D8               	bcf	status,0,c
  7749  003456  320F               	rrcf	(??_getBusVoltage_raw+1)^0,f,c
  7750  003458  320E               	rrcf	??_getBusVoltage_raw^0,f,c
  7751  00345A  90D8               	bcf	status,0,c
  7752  00345C  360E               	rlcf	??_getBusVoltage_raw^0,f,c
  7753  00345E  360F               	rlcf	(??_getBusVoltage_raw+1)^0,f,c
  7754  003460  90D8               	bcf	status,0,c
  7755  003462  360E               	rlcf	??_getBusVoltage_raw^0,f,c
  7756  003464  360F               	rlcf	(??_getBusVoltage_raw+1)^0,f,c
  7757  003466  C00E  F00C         	movff	??_getBusVoltage_raw,?_getBusVoltage_raw
  7758  00346A  C00F  F00D         	movff	??_getBusVoltage_raw+1,?_getBusVoltage_raw+1
  7759  00346E  0012               	return		;funcret
  7760  003470                     __end_of_getBusVoltage_raw:
  7761                           	opt callstack 0
  7762                           
  7763 ;; *************** function _ReadI2C *****************
  7764 ;; Defined at:
  7765 ;;		line 139 in file "main.c"
  7766 ;; Parameters:    Size  Location     Type
  7767 ;;  Address         1    wreg     unsigned char 
  7768 ;;  Register        1    3[COMRAM] unsigned char 
  7769 ;;  Data            2    4[COMRAM] PTR unsigned char 
  7770 ;;		 -> getShuntVoltage_raw@value(2), getBusVoltage_raw@value(2), 
  7771 ;;  bytes           2    6[COMRAM] int 
  7772 ;; Auto vars:     Size  Location     Type
  7773 ;;  Address         1   10[COMRAM] unsigned char 
  7774 ;; Return value:  Size  Location     Type
  7775 ;;                  1    wreg      void 
  7776 ;; Registers used:
  7777 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7778 ;; Tracked objects:
  7779 ;;		On entry : 0/0
  7780 ;;		On exit  : 0/0
  7781 ;;		Unchanged: 0/0
  7782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7783 ;;      Params:         5       0       0       0       0       0       0       0       0
  7784 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7785 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7786 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7787 ;;Total ram usage:        8 bytes
  7788 ;; Hardware stack levels used:    1
  7789 ;; Hardware stack levels required when called:    2
  7790 ;; This function calls:
  7791 ;;		_ReceiveI2C
  7792 ;;		_RepeatedStartI2C
  7793 ;;		_SendI2C
  7794 ;;		_StartI2C
  7795 ;;		_StopI2C
  7796 ;; This function is called by:
  7797 ;;		_getBusVoltage_raw
  7798 ;;		_getShuntVoltage_raw
  7799 ;; This function uses a non-reentrant model
  7800 ;;
  7801                           
  7802                           	psect	text37
  7803  00313C                     __ptext37:
  7804                           	opt callstack 0
  7805  00313C                     _ReadI2C:
  7806                           	opt callstack 26
  7807                           
  7808                           ;incstack = 0
  7809                           ;ReadI2C@Address stored from wreg
  7810  00313C  6E0B               	movwf	ReadI2C@Address^0,c
  7811  00313E                     
  7812                           ;main.c: 140:     StartI2C();
  7813  00313E  ECD9  F01C         	call	_StartI2C	;wreg free
  7814                           
  7815                           ;main.c: 141:     SendI2C(Address);
  7816  003142  500B               	movf	ReadI2C@Address^0,w,c
  7817  003144  ECCF  F01C         	call	_SendI2C
  7818                           
  7819                           ;main.c: 142:     SendI2C(Register);
  7820  003148  5004               	movf	ReadI2C@Register^0,w,c
  7821  00314A  ECCF  F01C         	call	_SendI2C
  7822                           
  7823                           ;main.c: 143:     RepeatedStartI2C();
  7824  00314E  ECDD  F01C         	call	_RepeatedStartI2C	;wreg free
  7825                           
  7826                           ;main.c: 144:     SendI2C(Address|0x01);
  7827  003152  500B               	movf	ReadI2C@Address^0,w,c
  7828  003154  0901               	iorlw	1
  7829  003156  ECCF  F01C         	call	_SendI2C
  7830  00315A                     
  7831                           ;main.c: 145:     for(i=0; i<bytes; i++){
  7832  00315A  0E00               	movlw	0
  7833  00315C  0100               	movlb	0	; () banked
  7834  00315E  6FC5               	movwf	(_i+1)& (0+255),b
  7835  003160  0E00               	movlw	0
  7836  003162  6FC4               	movwf	_i& (0+255),b
  7837  003164  EFDD  F018         	goto	l3827
  7838  003168                     l3817:
  7839                           
  7840                           ; BSR set to: 0
  7841                           ;main.c: 146:         if(i+1 == bytes){
  7842  003168  0E01               	movlw	1
  7843  00316A  25C4               	addwf	_i& (0+255),w,b
  7844  00316C  6E09               	movwf	??_ReadI2C^0,c
  7845  00316E  0E00               	movlw	0
  7846  003170  21C5               	addwfc	(_i+1)& (0+255),w,b
  7847  003172  6E0A               	movwf	(??_ReadI2C+1)^0,c
  7848  003174  5007               	movf	ReadI2C@bytes^0,w,c
  7849  003176  1809               	xorwf	??_ReadI2C^0,w,c
  7850  003178  E107               	bnz	u4591
  7851  00317A  5008               	movf	(ReadI2C@bytes+1)^0,w,c
  7852  00317C  180A               	xorwf	(??_ReadI2C+1)^0,w,c
  7853  00317E  A4D8               	btfss	status,2,c
  7854  003180  EFC4  F018         	goto	u4591
  7855  003184  EFC6  F018         	goto	u4590
  7856  003188                     u4591:
  7857  003188  EFD0  F018         	goto	l3821
  7858  00318C                     u4590:
  7859  00318C                     
  7860                           ; BSR set to: 0
  7861                           ;main.c: 147:             *Data = ReceiveI2C(1);
  7862  00318C  0E01               	movlw	1
  7863  00318E  EC57  F01C         	call	_ReceiveI2C
  7864  003192  C005  FFD9         	movff	ReadI2C@Data,fsr2l
  7865  003196  C006  FFDA         	movff	ReadI2C@Data+1,fsr2h
  7866  00319A  6EDF               	movwf	indf2,c
  7867                           
  7868                           ;main.c: 148:         }else{
  7869  00319C  EFD8  F018         	goto	l3823
  7870  0031A0                     l3821:
  7871                           
  7872                           ; BSR set to: 0
  7873                           ;main.c: 149:             *Data = ReceiveI2C(0);
  7874  0031A0  0E00               	movlw	0
  7875  0031A2  EC57  F01C         	call	_ReceiveI2C
  7876  0031A6  C005  FFD9         	movff	ReadI2C@Data,fsr2l
  7877  0031AA  C006  FFDA         	movff	ReadI2C@Data+1,fsr2h
  7878  0031AE  6EDF               	movwf	indf2,c
  7879  0031B0                     l3823:
  7880                           
  7881                           ;main.c: 151:         Data++;
  7882  0031B0  4A05               	infsnz	ReadI2C@Data^0,f,c
  7883  0031B2  2A06               	incf	(ReadI2C@Data+1)^0,f,c
  7884  0031B4                     
  7885                           ;main.c: 152:     }
  7886  0031B4  0100               	movlb	0	; () banked
  7887  0031B6  4BC4               	infsnz	_i& (0+255),f,b
  7888  0031B8  2BC5               	incf	(_i+1)& (0+255),f,b
  7889  0031BA                     l3827:
  7890                           
  7891                           ; BSR set to: 0
  7892  0031BA  5007               	movf	ReadI2C@bytes^0,w,c
  7893  0031BC  5DC4               	subwf	_i& (0+255),w,b
  7894  0031BE  51C5               	movf	(_i+1)& (0+255),w,b
  7895  0031C0  0A80               	xorlw	128
  7896  0031C2  6E09               	movwf	??_ReadI2C^0,c
  7897  0031C4  5008               	movf	(ReadI2C@bytes+1)^0,w,c
  7898  0031C6  0A80               	xorlw	128
  7899  0031C8  5809               	subwfb	??_ReadI2C^0,w,c
  7900  0031CA  A0D8               	btfss	status,0,c
  7901  0031CC  EFEA  F018         	goto	u4601
  7902  0031D0  EFEC  F018         	goto	u4600
  7903  0031D4                     u4601:
  7904  0031D4  EFB4  F018         	goto	l3817
  7905  0031D8                     u4600:
  7906  0031D8                     
  7907                           ; BSR set to: 0
  7908                           ;main.c: 153:     StopI2C();
  7909  0031D8  ECD5  F01C         	call	_StopI2C	;wreg free
  7910  0031DC                     
  7911                           ;main.c: 154:     _delay((unsigned long)((10*100)*(8000000/4000.0)));
  7912  0031DC  0E0B               	movlw	11
  7913  0031DE  6E0A               	movwf	(??_ReadI2C+1)^0,c
  7914  0031E0  0E26               	movlw	38
  7915  0031E2  6E09               	movwf	??_ReadI2C^0,c
  7916  0031E4  0E5E               	movlw	94
  7917  0031E6                     u4887:
  7918  0031E6  2EE8               	decfsz	wreg,f,c
  7919  0031E8  D7FE               	bra	u4887
  7920  0031EA  2E09               	decfsz	??_ReadI2C^0,f,c
  7921  0031EC  D7FC               	bra	u4887
  7922  0031EE  2E0A               	decfsz	(??_ReadI2C+1)^0,f,c
  7923  0031F0  D7FA               	bra	u4887
  7924  0031F2  0012               	return		;funcret
  7925  0031F4                     __end_of_ReadI2C:
  7926                           	opt callstack 0
  7927                           
  7928 ;; *************** function _StopI2C *****************
  7929 ;; Defined at:
  7930 ;;		line 134 in file "main.c"
  7931 ;; Parameters:    Size  Location     Type
  7932 ;;		None
  7933 ;; Auto vars:     Size  Location     Type
  7934 ;;		None
  7935 ;; Return value:  Size  Location     Type
  7936 ;;                  1    wreg      void 
  7937 ;; Registers used:
  7938 ;;		wreg, status,2, status,0, cstack
  7939 ;; Tracked objects:
  7940 ;;		On entry : 0/0
  7941 ;;		On exit  : 0/0
  7942 ;;		Unchanged: 0/0
  7943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7944 ;;      Params:         0       0       0       0       0       0       0       0       0
  7945 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7946 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7947 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7948 ;;Total ram usage:        0 bytes
  7949 ;; Hardware stack levels used:    1
  7950 ;; Hardware stack levels required when called:    1
  7951 ;; This function calls:
  7952 ;;		_ReadyI2C
  7953 ;; This function is called by:
  7954 ;;		_WriteI2C
  7955 ;;		_ReadI2C
  7956 ;; This function uses a non-reentrant model
  7957 ;;
  7958                           
  7959                           	psect	text38
  7960  0039AA                     __ptext38:
  7961                           	opt callstack 0
  7962  0039AA                     _StopI2C:
  7963                           	opt callstack 27
  7964  0039AA                     
  7965                           ;main.c: 135:     ReadyI2C();
  7966  0039AA  EC94  F01C         	call	_ReadyI2C	;wreg free
  7967  0039AE                     
  7968                           ;main.c: 136:     PEN = 1;
  7969  0039AE  84C5               	bsf	4037,2,c	;volatile
  7970  0039B0  0012               	return		;funcret
  7971  0039B2                     __end_of_StopI2C:
  7972                           	opt callstack 0
  7973                           
  7974 ;; *************** function _StartI2C *****************
  7975 ;; Defined at:
  7976 ;;		line 120 in file "main.c"
  7977 ;; Parameters:    Size  Location     Type
  7978 ;;		None
  7979 ;; Auto vars:     Size  Location     Type
  7980 ;;		None
  7981 ;; Return value:  Size  Location     Type
  7982 ;;                  1    wreg      void 
  7983 ;; Registers used:
  7984 ;;		wreg, status,2, status,0, cstack
  7985 ;; Tracked objects:
  7986 ;;		On entry : 0/0
  7987 ;;		On exit  : 0/0
  7988 ;;		Unchanged: 0/0
  7989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7990 ;;      Params:         0       0       0       0       0       0       0       0       0
  7991 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7992 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7993 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7994 ;;Total ram usage:        0 bytes
  7995 ;; Hardware stack levels used:    1
  7996 ;; Hardware stack levels required when called:    1
  7997 ;; This function calls:
  7998 ;;		_ReadyI2C
  7999 ;; This function is called by:
  8000 ;;		_WriteI2C
  8001 ;;		_ReadI2C
  8002 ;; This function uses a non-reentrant model
  8003 ;;
  8004                           
  8005                           	psect	text39
  8006  0039B2                     __ptext39:
  8007                           	opt callstack 0
  8008  0039B2                     _StartI2C:
  8009                           	opt callstack 27
  8010  0039B2                     
  8011                           ;main.c: 121:     ReadyI2C();
  8012  0039B2  EC94  F01C         	call	_ReadyI2C	;wreg free
  8013  0039B6                     
  8014                           ;main.c: 122:     SEN = 1;
  8015  0039B6  80C5               	bsf	4037,0,c	;volatile
  8016  0039B8  0012               	return		;funcret
  8017  0039BA                     __end_of_StartI2C:
  8018                           	opt callstack 0
  8019                           
  8020 ;; *************** function _SendI2C *****************
  8021 ;; Defined at:
  8022 ;;		line 129 in file "main.c"
  8023 ;; Parameters:    Size  Location     Type
  8024 ;;  data            1    wreg     unsigned char 
  8025 ;; Auto vars:     Size  Location     Type
  8026 ;;  data            1    1[COMRAM] unsigned char 
  8027 ;; Return value:  Size  Location     Type
  8028 ;;                  1    wreg      void 
  8029 ;; Registers used:
  8030 ;;		wreg, status,2, status,0, cstack
  8031 ;; Tracked objects:
  8032 ;;		On entry : 0/0
  8033 ;;		On exit  : 0/0
  8034 ;;		Unchanged: 0/0
  8035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8036 ;;      Params:         0       0       0       0       0       0       0       0       0
  8037 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8038 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8039 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8040 ;;Total ram usage:        1 bytes
  8041 ;; Hardware stack levels used:    1
  8042 ;; Hardware stack levels required when called:    1
  8043 ;; This function calls:
  8044 ;;		_ReadyI2C
  8045 ;; This function is called by:
  8046 ;;		_WriteI2C
  8047 ;;		_ReadI2C
  8048 ;; This function uses a non-reentrant model
  8049 ;;
  8050                           
  8051                           	psect	text40
  8052  00399E                     __ptext40:
  8053                           	opt callstack 0
  8054  00399E                     _SendI2C:
  8055                           	opt callstack 27
  8056                           
  8057                           ;incstack = 0
  8058                           ;SendI2C@data stored from wreg
  8059  00399E  6E02               	movwf	SendI2C@data^0,c
  8060  0039A0                     
  8061                           ;main.c: 130:     ReadyI2C();
  8062  0039A0  EC94  F01C         	call	_ReadyI2C	;wreg free
  8063  0039A4                     
  8064                           ;main.c: 131:     SSPBUF = data;
  8065  0039A4  C002  FFC9         	movff	SendI2C@data,4041	;volatile
  8066  0039A8  0012               	return		;funcret
  8067  0039AA                     __end_of_SendI2C:
  8068                           	opt callstack 0
  8069                           
  8070 ;; *************** function _RepeatedStartI2C *****************
  8071 ;; Defined at:
  8072 ;;		line 157 in file "main.c"
  8073 ;; Parameters:    Size  Location     Type
  8074 ;;		None
  8075 ;; Auto vars:     Size  Location     Type
  8076 ;;		None
  8077 ;; Return value:  Size  Location     Type
  8078 ;;                  1    wreg      void 
  8079 ;; Registers used:
  8080 ;;		wreg, status,2, status,0, cstack
  8081 ;; Tracked objects:
  8082 ;;		On entry : 0/0
  8083 ;;		On exit  : 0/0
  8084 ;;		Unchanged: 0/0
  8085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8086 ;;      Params:         0       0       0       0       0       0       0       0       0
  8087 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8088 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8089 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8090 ;;Total ram usage:        0 bytes
  8091 ;; Hardware stack levels used:    1
  8092 ;; Hardware stack levels required when called:    1
  8093 ;; This function calls:
  8094 ;;		_ReadyI2C
  8095 ;; This function is called by:
  8096 ;;		_ReadI2C
  8097 ;; This function uses a non-reentrant model
  8098 ;;
  8099                           
  8100                           	psect	text41
  8101  0039BA                     __ptext41:
  8102                           	opt callstack 0
  8103  0039BA                     _RepeatedStartI2C:
  8104                           	opt callstack 26
  8105  0039BA                     
  8106                           ;main.c: 158:     ReadyI2C();
  8107  0039BA  EC94  F01C         	call	_ReadyI2C	;wreg free
  8108  0039BE                     
  8109                           ;main.c: 159:     RSEN = 1;
  8110  0039BE  82C5               	bsf	4037,1,c	;volatile
  8111  0039C0  0012               	return		;funcret
  8112  0039C2                     __end_of_RepeatedStartI2C:
  8113                           	opt callstack 0
  8114                           
  8115 ;; *************** function _ReceiveI2C *****************
  8116 ;; Defined at:
  8117 ;;		line 162 in file "main.c"
  8118 ;; Parameters:    Size  Location     Type
  8119 ;;  flag            1    wreg     unsigned char 
  8120 ;; Auto vars:     Size  Location     Type
  8121 ;;  flag            1    1[COMRAM] unsigned char 
  8122 ;;  buffer          1    2[COMRAM] unsigned char 
  8123 ;; Return value:  Size  Location     Type
  8124 ;;                  1    wreg      unsigned char 
  8125 ;; Registers used:
  8126 ;;		wreg, status,2, status,0, cstack
  8127 ;; Tracked objects:
  8128 ;;		On entry : 0/0
  8129 ;;		On exit  : 0/0
  8130 ;;		Unchanged: 0/0
  8131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8132 ;;      Params:         0       0       0       0       0       0       0       0       0
  8133 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8134 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8135 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8136 ;;Total ram usage:        2 bytes
  8137 ;; Hardware stack levels used:    1
  8138 ;; Hardware stack levels required when called:    1
  8139 ;; This function calls:
  8140 ;;		_ReadyI2C
  8141 ;; This function is called by:
  8142 ;;		_ReadI2C
  8143 ;; This function uses a non-reentrant model
  8144 ;;
  8145                           
  8146                           	psect	text42
  8147  0038AE                     __ptext42:
  8148                           	opt callstack 0
  8149  0038AE                     _ReceiveI2C:
  8150                           	opt callstack 26
  8151                           
  8152                           ;incstack = 0
  8153                           ;ReceiveI2C@flag stored from wreg
  8154  0038AE  6E02               	movwf	ReceiveI2C@flag^0,c
  8155  0038B0                     
  8156                           ;main.c: 163:     unsigned char buffer;;main.c: 164:     ReadyI2C();
  8157  0038B0  EC94  F01C         	call	_ReadyI2C	;wreg free
  8158  0038B4                     
  8159                           ;main.c: 165:     RCEN = 1;
  8160  0038B4  86C5               	bsf	4037,3,c	;volatile
  8161                           
  8162                           ;main.c: 166:     ReadyI2C();
  8163  0038B6  EC94  F01C         	call	_ReadyI2C	;wreg free
  8164  0038BA                     
  8165                           ;main.c: 167:     buffer = SSPBUF;
  8166  0038BA  CFC9 F003          	movff	4041,ReceiveI2C@buffer	;volatile
  8167                           
  8168                           ;main.c: 168:     ReadyI2C();
  8169  0038BE  EC94  F01C         	call	_ReadyI2C	;wreg free
  8170  0038C2                     
  8171                           ;main.c: 169:     ACKDT = flag==1? 1 : 0;
  8172  0038C2  0402               	decf	ReceiveI2C@flag^0,w,c
  8173  0038C4  B4D8               	btfsc	status,2,c
  8174  0038C6  EF67  F01C         	goto	u3931
  8175  0038CA  EF6A  F01C         	goto	u3930
  8176  0038CE                     u3931:
  8177  0038CE  8AC5               	bsf	4037,5,c	;volatile
  8178  0038D0  EF6B  F01C         	goto	u3945
  8179  0038D4                     u3930:
  8180  0038D4  9AC5               	bcf	4037,5,c	;volatile
  8181  0038D6                     u3945:
  8182  0038D6                     
  8183                           ;main.c: 170:     ACKEN = 1;
  8184  0038D6  88C5               	bsf	4037,4,c	;volatile
  8185  0038D8                     
  8186                           ;main.c: 171:     return buffer;
  8187  0038D8  5003               	movf	ReceiveI2C@buffer^0,w,c
  8188  0038DA  0012               	return		;funcret
  8189  0038DC                     __end_of_ReceiveI2C:
  8190                           	opt callstack 0
  8191                           
  8192 ;; *************** function _ReadyI2C *****************
  8193 ;; Defined at:
  8194 ;;		line 125 in file "main.c"
  8195 ;; Parameters:    Size  Location     Type
  8196 ;;		None
  8197 ;; Auto vars:     Size  Location     Type
  8198 ;;		None
  8199 ;; Return value:  Size  Location     Type
  8200 ;;                  1    wreg      void 
  8201 ;; Registers used:
  8202 ;;		wreg, status,2, status,0
  8203 ;; Tracked objects:
  8204 ;;		On entry : 0/0
  8205 ;;		On exit  : 0/0
  8206 ;;		Unchanged: 0/0
  8207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8208 ;;      Params:         0       0       0       0       0       0       0       0       0
  8209 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8210 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8211 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8212 ;;Total ram usage:        1 bytes
  8213 ;; Hardware stack levels used:    1
  8214 ;; This function calls:
  8215 ;;		Nothing
  8216 ;; This function is called by:
  8217 ;;		_StartI2C
  8218 ;;		_SendI2C
  8219 ;;		_StopI2C
  8220 ;;		_RepeatedStartI2C
  8221 ;;		_ReceiveI2C
  8222 ;; This function uses a non-reentrant model
  8223 ;;
  8224                           
  8225                           	psect	text43
  8226  003928                     __ptext43:
  8227                           	opt callstack 0
  8228  003928                     _ReadyI2C:
  8229                           	opt callstack 27
  8230  003928                     l2867:
  8231  003928  CFC5 F001          	movff	4037,??_ReadyI2C	;volatile
  8232  00392C  0E1F               	movlw	31
  8233  00392E  1601               	andwf	??_ReadyI2C^0,f,c
  8234  003930  A4D8               	btfss	status,2,c
  8235  003932  EF9D  F01C         	goto	u2911
  8236  003936  EF9F  F01C         	goto	u2910
  8237  00393A                     u2911:
  8238  00393A  EF94  F01C         	goto	l2867
  8239  00393E                     u2910:
  8240  00393E  B4C7               	btfsc	199,2,c	;volatile
  8241  003940  EFA4  F01C         	goto	u2921
  8242  003944  EFA6  F01C         	goto	u2920
  8243  003948                     u2921:
  8244  003948  EF94  F01C         	goto	l2867
  8245  00394C                     u2920:
  8246  00394C  0012               	return		;funcret
  8247  00394E                     __end_of_ReadyI2C:
  8248                           	opt callstack 0
  8249                           
  8250 ;; *************** function ___xxtofl *****************
  8251 ;; Defined at:
  8252 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  8253 ;; Parameters:    Size  Location     Type
  8254 ;;  sign            1    wreg     unsigned char 
  8255 ;;  val             4    0[COMRAM] long 
  8256 ;; Auto vars:     Size  Location     Type
  8257 ;;  sign            1    8[COMRAM] unsigned char 
  8258 ;;  arg             4   10[COMRAM] unsigned long 
  8259 ;;  exp             1    9[COMRAM] unsigned char 
  8260 ;; Return value:  Size  Location     Type
  8261 ;;                  4    0[COMRAM] unsigned char 
  8262 ;; Registers used:
  8263 ;;		wreg, status,2, status,0
  8264 ;; Tracked objects:
  8265 ;;		On entry : 0/0
  8266 ;;		On exit  : 0/0
  8267 ;;		Unchanged: 0/0
  8268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8269 ;;      Params:         4       0       0       0       0       0       0       0       0
  8270 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8271 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8272 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8273 ;;Total ram usage:       14 bytes
  8274 ;; Hardware stack levels used:    1
  8275 ;; This function calls:
  8276 ;;		Nothing
  8277 ;; This function is called by:
  8278 ;;		_getBusVoltage_V
  8279 ;;		_getShuntVoltage_mV
  8280 ;; This function uses a non-reentrant model
  8281 ;;
  8282                           
  8283                           	psect	text44
  8284  0026C4                     __ptext44:
  8285                           	opt callstack 0
  8286  0026C4                     ___xxtofl:
  8287                           	opt callstack 29
  8288                           
  8289                           ;incstack = 0
  8290                           ;___xxtofl@sign stored from wreg
  8291  0026C4  6E09               	movwf	___xxtofl@sign^0,c
  8292  0026C6  5009               	movf	___xxtofl@sign^0,w,c
  8293  0026C8  B4D8               	btfsc	status,2,c
  8294  0026CA  EF69  F013         	goto	u4761
  8295  0026CE  EF6B  F013         	goto	u4760
  8296  0026D2                     u4761:
  8297  0026D2  EF8D  F013         	goto	l988
  8298  0026D6                     u4760:
  8299  0026D6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8300  0026D8  EF72  F013         	goto	u4770
  8301  0026DC  EF70  F013         	goto	u4771
  8302  0026E0                     u4771:
  8303  0026E0  EF8D  F013         	goto	l988
  8304  0026E4                     u4770:
  8305  0026E4  C001  F005         	movff	___xxtofl@val,??___xxtofl
  8306  0026E8  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  8307  0026EC  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  8308  0026F0  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  8309  0026F4  1E05               	comf	??___xxtofl^0,f,c
  8310  0026F6  1E06               	comf	(??___xxtofl+1)^0,f,c
  8311  0026F8  1E07               	comf	(??___xxtofl+2)^0,f,c
  8312  0026FA  1E08               	comf	(??___xxtofl+3)^0,f,c
  8313  0026FC  2A05               	incf	??___xxtofl^0,f,c
  8314  0026FE  0E00               	movlw	0
  8315  002700  2206               	addwfc	(??___xxtofl+1)^0,f,c
  8316  002702  2207               	addwfc	(??___xxtofl+2)^0,f,c
  8317  002704  2208               	addwfc	(??___xxtofl+3)^0,f,c
  8318  002706  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  8319  00270A  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  8320  00270E  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  8321  002712  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  8322  002716  EF95  F013         	goto	l3977
  8323  00271A                     l988:
  8324  00271A  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  8325  00271E  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8326  002722  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8327  002726  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8328  00272A                     l3977:
  8329  00272A  5001               	movf	___xxtofl@val^0,w,c
  8330  00272C  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  8331  00272E  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  8332  002730  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  8333  002732  A4D8               	btfss	status,2,c
  8334  002734  EF9E  F013         	goto	u4781
  8335  002738  EFA0  F013         	goto	u4780
  8336  00273C                     u4781:
  8337  00273C  EFAA  F013         	goto	l3983
  8338  002740                     u4780:
  8339  002740  0E00               	movlw	0
  8340  002742  6E01               	movwf	?___xxtofl^0,c
  8341  002744  0E00               	movlw	0
  8342  002746  6E02               	movwf	(?___xxtofl+1)^0,c
  8343  002748  0E00               	movlw	0
  8344  00274A  6E03               	movwf	(?___xxtofl+2)^0,c
  8345  00274C  0E00               	movlw	0
  8346  00274E  6E04               	movwf	(?___xxtofl+3)^0,c
  8347  002750  EF3B  F014         	goto	l991
  8348  002754                     l3983:
  8349  002754  0E96               	movlw	150
  8350  002756  6E0A               	movwf	___xxtofl@exp^0,c
  8351  002758  EFB4  F013         	goto	l3987
  8352  00275C                     l3985:
  8353  00275C  2A0A               	incf	___xxtofl@exp^0,f,c
  8354  00275E  90D8               	bcf	status,0,c
  8355  002760  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8356  002762  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8357  002764  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8358  002766  320B               	rrcf	___xxtofl@arg^0,f,c
  8359  002768                     l3987:
  8360  002768  0E00               	movlw	0
  8361  00276A  140B               	andwf	___xxtofl@arg^0,w,c
  8362  00276C  6E05               	movwf	??___xxtofl^0,c
  8363  00276E  0E00               	movlw	0
  8364  002770  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8365  002772  6E06               	movwf	(??___xxtofl+1)^0,c
  8366  002774  0E00               	movlw	0
  8367  002776  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8368  002778  6E07               	movwf	(??___xxtofl+2)^0,c
  8369  00277A  0EFE               	movlw	254
  8370  00277C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8371  00277E  6E08               	movwf	(??___xxtofl+3)^0,c
  8372  002780  5005               	movf	??___xxtofl^0,w,c
  8373  002782  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8374  002784  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8375  002786  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8376  002788  A4D8               	btfss	status,2,c
  8377  00278A  EFC9  F013         	goto	u4791
  8378  00278E  EFCB  F013         	goto	u4790
  8379  002792                     u4791:
  8380  002792  EFAE  F013         	goto	l3985
  8381  002796                     u4790:
  8382  002796  EFD9  F013         	goto	l995
  8383  00279A                     l3989:
  8384  00279A  2A0A               	incf	___xxtofl@exp^0,f,c
  8385  00279C  0E01               	movlw	1
  8386  00279E  260B               	addwf	___xxtofl@arg^0,f,c
  8387  0027A0  0E00               	movlw	0
  8388  0027A2  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  8389  0027A4  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  8390  0027A6  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  8391  0027A8  90D8               	bcf	status,0,c
  8392  0027AA  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  8393  0027AC  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  8394  0027AE  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  8395  0027B0  320B               	rrcf	___xxtofl@arg^0,f,c
  8396  0027B2                     l995:
  8397  0027B2  0E00               	movlw	0
  8398  0027B4  140B               	andwf	___xxtofl@arg^0,w,c
  8399  0027B6  6E05               	movwf	??___xxtofl^0,c
  8400  0027B8  0E00               	movlw	0
  8401  0027BA  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  8402  0027BC  6E06               	movwf	(??___xxtofl+1)^0,c
  8403  0027BE  0E00               	movlw	0
  8404  0027C0  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  8405  0027C2  6E07               	movwf	(??___xxtofl+2)^0,c
  8406  0027C4  0EFF               	movlw	255
  8407  0027C6  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  8408  0027C8  6E08               	movwf	(??___xxtofl+3)^0,c
  8409  0027CA  5005               	movf	??___xxtofl^0,w,c
  8410  0027CC  1006               	iorwf	(??___xxtofl+1)^0,w,c
  8411  0027CE  1007               	iorwf	(??___xxtofl+2)^0,w,c
  8412  0027D0  1008               	iorwf	(??___xxtofl+3)^0,w,c
  8413  0027D2  A4D8               	btfss	status,2,c
  8414  0027D4  EFEE  F013         	goto	u4801
  8415  0027D8  EFF0  F013         	goto	u4800
  8416  0027DC                     u4801:
  8417  0027DC  EFCD  F013         	goto	l3989
  8418  0027E0                     u4800:
  8419  0027E0  EFF8  F013         	goto	l3997
  8420  0027E4                     l3995:
  8421  0027E4  060A               	decf	___xxtofl@exp^0,f,c
  8422  0027E6  90D8               	bcf	status,0,c
  8423  0027E8  360B               	rlcf	___xxtofl@arg^0,f,c
  8424  0027EA  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  8425  0027EC  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  8426  0027EE  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  8427  0027F0                     l3997:
  8428  0027F0  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  8429  0027F2  EFFD  F013         	goto	u4811
  8430  0027F6  EFFF  F013         	goto	u4810
  8431  0027FA                     u4811:
  8432  0027FA  EF07  F014         	goto	l1002
  8433  0027FE                     u4810:
  8434  0027FE  0E02               	movlw	2
  8435  002800  600A               	cpfslt	___xxtofl@exp^0,c
  8436  002802  EF05  F014         	goto	u4821
  8437  002806  EF07  F014         	goto	u4820
  8438  00280A                     u4821:
  8439  00280A  EFF2  F013         	goto	l3995
  8440  00280E                     u4820:
  8441  00280E                     l1002:
  8442  00280E  B00A               	btfsc	___xxtofl@exp^0,0,c
  8443  002810  EF0C  F014         	goto	u4831
  8444  002814  EF0E  F014         	goto	u4830
  8445  002818                     u4831:
  8446  002818  EF0F  F014         	goto	l4003
  8447  00281C                     u4830:
  8448  00281C  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  8449  00281E                     l4003:
  8450  00281E  90D8               	bcf	status,0,c
  8451  002820  320A               	rrcf	___xxtofl@exp^0,f,c
  8452  002822  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  8453  002826  6A06               	clrf	(??___xxtofl+1)^0,c
  8454  002828  6A07               	clrf	(??___xxtofl+2)^0,c
  8455  00282A  6A08               	clrf	(??___xxtofl+3)^0,c
  8456  00282C  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  8457  002830  6A07               	clrf	(??___xxtofl+2)^0,c
  8458  002832  6A06               	clrf	(??___xxtofl+1)^0,c
  8459  002834  6A05               	clrf	??___xxtofl^0,c
  8460  002836  5005               	movf	??___xxtofl^0,w,c
  8461  002838  120B               	iorwf	___xxtofl@arg^0,f,c
  8462  00283A  5006               	movf	(??___xxtofl+1)^0,w,c
  8463  00283C  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  8464  00283E  5007               	movf	(??___xxtofl+2)^0,w,c
  8465  002840  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  8466  002842  5008               	movf	(??___xxtofl+3)^0,w,c
  8467  002844  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  8468  002846  5009               	movf	___xxtofl@sign^0,w,c
  8469  002848  B4D8               	btfsc	status,2,c
  8470  00284A  EF29  F014         	goto	u4841
  8471  00284E  EF2B  F014         	goto	u4840
  8472  002852                     u4841:
  8473  002852  EF33  F014         	goto	l4013
  8474  002856                     u4840:
  8475  002856  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  8476  002858  EF32  F014         	goto	u4850
  8477  00285C  EF30  F014         	goto	u4851
  8478  002860                     u4851:
  8479  002860  EF33  F014         	goto	l4013
  8480  002864                     u4850:
  8481  002864  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  8482  002866                     l4013:
  8483  002866  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  8484  00286A  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  8485  00286E  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  8486  002872  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  8487  002876                     l991:
  8488  002876  0012               	return		;funcret
  8489  002878                     __end_of___xxtofl:
  8490                           	opt callstack 0
  8491                           
  8492 ;; *************** function ___flmul *****************
  8493 ;; Defined at:
  8494 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  8495 ;; Parameters:    Size  Location     Type
  8496 ;;  b               4   14[COMRAM] unsigned char 
  8497 ;;  a               4   18[COMRAM] unsigned char 
  8498 ;; Auto vars:     Size  Location     Type
  8499 ;;  prod            4   33[COMRAM] struct .
  8500 ;;  grs             4   27[COMRAM] unsigned long 
  8501 ;;  temp            2   37[COMRAM] struct .
  8502 ;;  bexp            1   32[COMRAM] unsigned char 
  8503 ;;  aexp            1   31[COMRAM] unsigned char 
  8504 ;;  sign            1   26[COMRAM] unsigned char 
  8505 ;; Return value:  Size  Location     Type
  8506 ;;                  4   14[COMRAM] unsigned char 
  8507 ;; Registers used:
  8508 ;;		wreg, status,2, status,0, prodl, prodh
  8509 ;; Tracked objects:
  8510 ;;		On entry : 0/0
  8511 ;;		On exit  : 0/0
  8512 ;;		Unchanged: 0/0
  8513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8514 ;;      Params:         8       0       0       0       0       0       0       0       0
  8515 ;;      Locals:        13       0       0       0       0       0       0       0       0
  8516 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8517 ;;      Totals:        25       0       0       0       0       0       0       0       0
  8518 ;;Total ram usage:       25 bytes
  8519 ;; Hardware stack levels used:    1
  8520 ;; This function calls:
  8521 ;;		Nothing
  8522 ;; This function is called by:
  8523 ;;		_getBusVoltage_V
  8524 ;;		_getShuntVoltage_mV
  8525 ;;		_efgtoa
  8526 ;; This function uses a non-reentrant model
  8527 ;;
  8528                           
  8529                           	psect	text45
  8530  001CEE                     __ptext45:
  8531                           	opt callstack 0
  8532  001CEE                     ___flmul:
  8533                           	opt callstack 26
  8534  001CEE  5012               	movf	(___flmul@b+3)^0,w,c
  8535  001CF0  0B80               	andlw	128
  8536  001CF2  6E1B               	movwf	___flmul@sign^0,c
  8537  001CF4  5012               	movf	(___flmul@b+3)^0,w,c
  8538  001CF6  2412               	addwf	(___flmul@b+3)^0,w,c
  8539  001CF8  6E21               	movwf	___flmul@bexp^0,c
  8540  001CFA  AE11               	btfss	(___flmul@b+2)^0,7,c
  8541  001CFC  EF82  F00E         	goto	u3441
  8542  001D00  EF84  F00E         	goto	u3440
  8543  001D04                     u3441:
  8544  001D04  EF85  F00E         	goto	l3111
  8545  001D08                     u3440:
  8546  001D08  8021               	bsf	___flmul@bexp^0,0,c
  8547  001D0A                     l3111:
  8548  001D0A  5021               	movf	___flmul@bexp^0,w,c
  8549  001D0C  B4D8               	btfsc	status,2,c
  8550  001D0E  EF8B  F00E         	goto	u3451
  8551  001D12  EF8D  F00E         	goto	u3450
  8552  001D16                     u3451:
  8553  001D16  EFA0  F00E         	goto	l3119
  8554  001D1A                     u3450:
  8555  001D1A  2821               	incf	___flmul@bexp^0,w,c
  8556  001D1C  A4D8               	btfss	status,2,c
  8557  001D1E  EF93  F00E         	goto	u3461
  8558  001D22  EF95  F00E         	goto	u3460
  8559  001D26                     u3461:
  8560  001D26  EF9D  F00E         	goto	l3117
  8561  001D2A                     u3460:
  8562  001D2A  0E00               	movlw	0
  8563  001D2C  6E0F               	movwf	___flmul@b^0,c
  8564  001D2E  0E00               	movlw	0
  8565  001D30  6E10               	movwf	(___flmul@b+1)^0,c
  8566  001D32  0E00               	movlw	0
  8567  001D34  6E11               	movwf	(___flmul@b+2)^0,c
  8568  001D36  0E00               	movlw	0
  8569  001D38  6E12               	movwf	(___flmul@b+3)^0,c
  8570  001D3A                     l3117:
  8571  001D3A  8E11               	bsf	(___flmul@b+2)^0,7,c
  8572  001D3C  EFA8  F00E         	goto	l3121
  8573  001D40                     l3119:
  8574  001D40  0E00               	movlw	0
  8575  001D42  6E0F               	movwf	___flmul@b^0,c
  8576  001D44  0E00               	movlw	0
  8577  001D46  6E10               	movwf	(___flmul@b+1)^0,c
  8578  001D48  0E00               	movlw	0
  8579  001D4A  6E11               	movwf	(___flmul@b+2)^0,c
  8580  001D4C  0E00               	movlw	0
  8581  001D4E  6E12               	movwf	(___flmul@b+3)^0,c
  8582  001D50                     l3121:
  8583  001D50  5016               	movf	(___flmul@a+3)^0,w,c
  8584  001D52  0B80               	andlw	128
  8585  001D54  1A1B               	xorwf	___flmul@sign^0,f,c
  8586  001D56  5016               	movf	(___flmul@a+3)^0,w,c
  8587  001D58  2416               	addwf	(___flmul@a+3)^0,w,c
  8588  001D5A  6E20               	movwf	___flmul@aexp^0,c
  8589  001D5C  AE15               	btfss	(___flmul@a+2)^0,7,c
  8590  001D5E  EFB3  F00E         	goto	u3471
  8591  001D62  EFB5  F00E         	goto	u3470
  8592  001D66                     u3471:
  8593  001D66  EFB6  F00E         	goto	l3129
  8594  001D6A                     u3470:
  8595  001D6A  8020               	bsf	___flmul@aexp^0,0,c
  8596  001D6C                     l3129:
  8597  001D6C  5020               	movf	___flmul@aexp^0,w,c
  8598  001D6E  B4D8               	btfsc	status,2,c
  8599  001D70  EFBC  F00E         	goto	u3481
  8600  001D74  EFBE  F00E         	goto	u3480
  8601  001D78                     u3481:
  8602  001D78  EFD1  F00E         	goto	l3137
  8603  001D7C                     u3480:
  8604  001D7C  2820               	incf	___flmul@aexp^0,w,c
  8605  001D7E  A4D8               	btfss	status,2,c
  8606  001D80  EFC4  F00E         	goto	u3491
  8607  001D84  EFC6  F00E         	goto	u3490
  8608  001D88                     u3491:
  8609  001D88  EFCE  F00E         	goto	l3135
  8610  001D8C                     u3490:
  8611  001D8C  0E00               	movlw	0
  8612  001D8E  6E13               	movwf	___flmul@a^0,c
  8613  001D90  0E00               	movlw	0
  8614  001D92  6E14               	movwf	(___flmul@a+1)^0,c
  8615  001D94  0E00               	movlw	0
  8616  001D96  6E15               	movwf	(___flmul@a+2)^0,c
  8617  001D98  0E00               	movlw	0
  8618  001D9A  6E16               	movwf	(___flmul@a+3)^0,c
  8619  001D9C                     l3135:
  8620  001D9C  8E15               	bsf	(___flmul@a+2)^0,7,c
  8621  001D9E  EFD9  F00E         	goto	l947
  8622  001DA2                     l3137:
  8623  001DA2  0E00               	movlw	0
  8624  001DA4  6E13               	movwf	___flmul@a^0,c
  8625  001DA6  0E00               	movlw	0
  8626  001DA8  6E14               	movwf	(___flmul@a+1)^0,c
  8627  001DAA  0E00               	movlw	0
  8628  001DAC  6E15               	movwf	(___flmul@a+2)^0,c
  8629  001DAE  0E00               	movlw	0
  8630  001DB0  6E16               	movwf	(___flmul@a+3)^0,c
  8631  001DB2                     l947:
  8632  001DB2  5020               	movf	___flmul@aexp^0,w,c
  8633  001DB4  B4D8               	btfsc	status,2,c
  8634  001DB6  EFDF  F00E         	goto	u3501
  8635  001DBA  EFE1  F00E         	goto	u3500
  8636  001DBE                     u3501:
  8637  001DBE  EFE9  F00E         	goto	l3141
  8638  001DC2                     u3500:
  8639  001DC2  5021               	movf	___flmul@bexp^0,w,c
  8640  001DC4  A4D8               	btfss	status,2,c
  8641  001DC6  EFE7  F00E         	goto	u3511
  8642  001DCA  EFE9  F00E         	goto	u3510
  8643  001DCE                     u3511:
  8644  001DCE  EFF3  F00E         	goto	l3145
  8645  001DD2                     u3510:
  8646  001DD2                     l3141:
  8647  001DD2  0E00               	movlw	0
  8648  001DD4  6E0F               	movwf	?___flmul^0,c
  8649  001DD6  0E00               	movlw	0
  8650  001DD8  6E10               	movwf	(?___flmul+1)^0,c
  8651  001DDA  0E00               	movlw	0
  8652  001DDC  6E11               	movwf	(?___flmul+2)^0,c
  8653  001DDE  0E00               	movlw	0
  8654  001DE0  6E12               	movwf	(?___flmul+3)^0,c
  8655  001DE2  EF8B  F010         	goto	l951
  8656  001DE6                     l3145:
  8657  001DE6  5015               	movf	(___flmul@a+2)^0,w,c
  8658  001DE8  020F               	mulwf	___flmul@b^0,c
  8659  001DEA  CFF3 F026          	movff	prodl,___flmul@temp
  8660  001DEE  CFF4 F027          	movff	prodh,___flmul@temp+1
  8661  001DF2  5026               	movf	___flmul@temp^0,w,c
  8662  001DF4  6E1C               	movwf	___flmul@grs^0,c
  8663  001DF6  6A1D               	clrf	(___flmul@grs+1)^0,c
  8664  001DF8  6A1E               	clrf	(___flmul@grs+2)^0,c
  8665  001DFA  6A1F               	clrf	(___flmul@grs+3)^0,c
  8666  001DFC  5027               	movf	(___flmul@temp+1)^0,w,c
  8667  001DFE  6E22               	movwf	___flmul@prod^0,c
  8668  001E00  6A23               	clrf	(___flmul@prod+1)^0,c
  8669  001E02  6A24               	clrf	(___flmul@prod+2)^0,c
  8670  001E04  6A25               	clrf	(___flmul@prod+3)^0,c
  8671  001E06  5014               	movf	(___flmul@a+1)^0,w,c
  8672  001E08  0210               	mulwf	(___flmul@b+1)^0,c
  8673  001E0A  CFF3 F026          	movff	prodl,___flmul@temp
  8674  001E0E  CFF4 F027          	movff	prodh,___flmul@temp+1
  8675  001E12  5026               	movf	___flmul@temp^0,w,c
  8676  001E14  261C               	addwf	___flmul@grs^0,f,c
  8677  001E16  0E00               	movlw	0
  8678  001E18  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8679  001E1A  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8680  001E1C  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8681  001E1E  5027               	movf	(___flmul@temp+1)^0,w,c
  8682  001E20  2622               	addwf	___flmul@prod^0,f,c
  8683  001E22  0E00               	movlw	0
  8684  001E24  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8685  001E26  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8686  001E28  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8687  001E2A  5013               	movf	___flmul@a^0,w,c
  8688  001E2C  0211               	mulwf	(___flmul@b+2)^0,c
  8689  001E2E  CFF3 F026          	movff	prodl,___flmul@temp
  8690  001E32  CFF4 F027          	movff	prodh,___flmul@temp+1
  8691  001E36  5026               	movf	___flmul@temp^0,w,c
  8692  001E38  261C               	addwf	___flmul@grs^0,f,c
  8693  001E3A  0E00               	movlw	0
  8694  001E3C  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8695  001E3E  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8696  001E40  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8697  001E42  5027               	movf	(___flmul@temp+1)^0,w,c
  8698  001E44  2622               	addwf	___flmul@prod^0,f,c
  8699  001E46  0E00               	movlw	0
  8700  001E48  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8701  001E4A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8702  001E4C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8703  001E4E  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8704  001E52  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8705  001E56  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8706  001E5A  6A1C               	clrf	___flmul@grs^0,c
  8707  001E5C  5013               	movf	___flmul@a^0,w,c
  8708  001E5E  0210               	mulwf	(___flmul@b+1)^0,c
  8709  001E60  CFF3 F026          	movff	prodl,___flmul@temp
  8710  001E64  CFF4 F027          	movff	prodh,___flmul@temp+1
  8711  001E68  5026               	movf	___flmul@temp^0,w,c
  8712  001E6A  261C               	addwf	___flmul@grs^0,f,c
  8713  001E6C  5027               	movf	(___flmul@temp+1)^0,w,c
  8714  001E6E  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8715  001E70  0E00               	movlw	0
  8716  001E72  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8717  001E74  0E00               	movlw	0
  8718  001E76  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8719  001E78  5014               	movf	(___flmul@a+1)^0,w,c
  8720  001E7A  020F               	mulwf	___flmul@b^0,c
  8721  001E7C  CFF3 F026          	movff	prodl,___flmul@temp
  8722  001E80  CFF4 F027          	movff	prodh,___flmul@temp+1
  8723  001E84  5026               	movf	___flmul@temp^0,w,c
  8724  001E86  261C               	addwf	___flmul@grs^0,f,c
  8725  001E88  5027               	movf	(___flmul@temp+1)^0,w,c
  8726  001E8A  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8727  001E8C  0E00               	movlw	0
  8728  001E8E  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8729  001E90  0E00               	movlw	0
  8730  001E92  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8731  001E94  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8732  001E98  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8733  001E9C  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8734  001EA0  6A1C               	clrf	___flmul@grs^0,c
  8735  001EA2  5013               	movf	___flmul@a^0,w,c
  8736  001EA4  020F               	mulwf	___flmul@b^0,c
  8737  001EA6  CFF3 F026          	movff	prodl,___flmul@temp
  8738  001EAA  CFF4 F027          	movff	prodh,___flmul@temp+1
  8739  001EAE  5026               	movf	___flmul@temp^0,w,c
  8740  001EB0  261C               	addwf	___flmul@grs^0,f,c
  8741  001EB2  5027               	movf	(___flmul@temp+1)^0,w,c
  8742  001EB4  221D               	addwfc	(___flmul@grs+1)^0,f,c
  8743  001EB6  0E00               	movlw	0
  8744  001EB8  221E               	addwfc	(___flmul@grs+2)^0,f,c
  8745  001EBA  0E00               	movlw	0
  8746  001EBC  221F               	addwfc	(___flmul@grs+3)^0,f,c
  8747  001EBE  5015               	movf	(___flmul@a+2)^0,w,c
  8748  001EC0  0210               	mulwf	(___flmul@b+1)^0,c
  8749  001EC2  CFF3 F026          	movff	prodl,___flmul@temp
  8750  001EC6  CFF4 F027          	movff	prodh,___flmul@temp+1
  8751  001ECA  5026               	movf	___flmul@temp^0,w,c
  8752  001ECC  2622               	addwf	___flmul@prod^0,f,c
  8753  001ECE  5027               	movf	(___flmul@temp+1)^0,w,c
  8754  001ED0  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8755  001ED2  0E00               	movlw	0
  8756  001ED4  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8757  001ED6  0E00               	movlw	0
  8758  001ED8  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8759  001EDA  5014               	movf	(___flmul@a+1)^0,w,c
  8760  001EDC  0211               	mulwf	(___flmul@b+2)^0,c
  8761  001EDE  CFF3 F026          	movff	prodl,___flmul@temp
  8762  001EE2  CFF4 F027          	movff	prodh,___flmul@temp+1
  8763  001EE6  5026               	movf	___flmul@temp^0,w,c
  8764  001EE8  2622               	addwf	___flmul@prod^0,f,c
  8765  001EEA  5027               	movf	(___flmul@temp+1)^0,w,c
  8766  001EEC  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8767  001EEE  0E00               	movlw	0
  8768  001EF0  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8769  001EF2  0E00               	movlw	0
  8770  001EF4  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8771  001EF6  5015               	movf	(___flmul@a+2)^0,w,c
  8772  001EF8  0211               	mulwf	(___flmul@b+2)^0,c
  8773  001EFA  CFF3 F026          	movff	prodl,___flmul@temp
  8774  001EFE  CFF4 F027          	movff	prodh,___flmul@temp+1
  8775  001F02  5026               	movf	___flmul@temp^0,w,c
  8776  001F04  6E17               	movwf	??___flmul^0,c
  8777  001F06  5027               	movf	(___flmul@temp+1)^0,w,c
  8778  001F08  6E18               	movwf	(??___flmul+1)^0,c
  8779  001F0A  6A19               	clrf	(??___flmul+2)^0,c
  8780  001F0C  6A1A               	clrf	(??___flmul+3)^0,c
  8781  001F0E  C019  F01A         	movff	??___flmul+2,??___flmul+3
  8782  001F12  C018  F019         	movff	??___flmul+1,??___flmul+2
  8783  001F16  C017  F018         	movff	??___flmul,??___flmul+1
  8784  001F1A  6A17               	clrf	??___flmul^0,c
  8785  001F1C  5017               	movf	??___flmul^0,w,c
  8786  001F1E  2622               	addwf	___flmul@prod^0,f,c
  8787  001F20  5018               	movf	(??___flmul+1)^0,w,c
  8788  001F22  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8789  001F24  5019               	movf	(??___flmul+2)^0,w,c
  8790  001F26  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8791  001F28  501A               	movf	(??___flmul+3)^0,w,c
  8792  001F2A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8793  001F2C  C01C  F017         	movff	___flmul@grs,??___flmul
  8794  001F30  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  8795  001F34  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  8796  001F38  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  8797  001F3C  0E19               	movlw	25
  8798  001F3E  EFA6  F00F         	goto	u3520
  8799  001F42                     u3525:
  8800  001F42  90D8               	bcf	status,0,c
  8801  001F44  321A               	rrcf	(??___flmul+3)^0,f,c
  8802  001F46  3219               	rrcf	(??___flmul+2)^0,f,c
  8803  001F48  3218               	rrcf	(??___flmul+1)^0,f,c
  8804  001F4A  3217               	rrcf	??___flmul^0,f,c
  8805  001F4C                     u3520:
  8806  001F4C  2EE8               	decfsz	wreg,f,c
  8807  001F4E  EFA1  F00F         	goto	u3525
  8808  001F52  5017               	movf	??___flmul^0,w,c
  8809  001F54  2622               	addwf	___flmul@prod^0,f,c
  8810  001F56  5018               	movf	(??___flmul+1)^0,w,c
  8811  001F58  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8812  001F5A  5019               	movf	(??___flmul+2)^0,w,c
  8813  001F5C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8814  001F5E  501A               	movf	(??___flmul+3)^0,w,c
  8815  001F60  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8816  001F62  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  8817  001F66  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  8818  001F6A  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  8819  001F6E  6A1C               	clrf	___flmul@grs^0,c
  8820  001F70  5020               	movf	___flmul@aexp^0,w,c
  8821  001F72  C021  F017         	movff	___flmul@bexp,??___flmul
  8822  001F76  6A18               	clrf	(??___flmul+1)^0,c
  8823  001F78  2617               	addwf	??___flmul^0,f,c
  8824  001F7A  0E00               	movlw	0
  8825  001F7C  2218               	addwfc	(??___flmul+1)^0,f,c
  8826  001F7E  0E82               	movlw	130
  8827  001F80  2417               	addwf	??___flmul^0,w,c
  8828  001F82  6E26               	movwf	___flmul@temp^0,c
  8829  001F84  0EFF               	movlw	255
  8830  001F86  2018               	addwfc	(??___flmul+1)^0,w,c
  8831  001F88  6E27               	movwf	(___flmul@temp+1)^0,c
  8832  001F8A  EFDC  F00F         	goto	l3193
  8833  001F8E                     l3187:
  8834  001F8E  90D8               	bcf	status,0,c
  8835  001F90  3622               	rlcf	___flmul@prod^0,f,c
  8836  001F92  3623               	rlcf	(___flmul@prod+1)^0,f,c
  8837  001F94  3624               	rlcf	(___flmul@prod+2)^0,f,c
  8838  001F96  3625               	rlcf	(___flmul@prod+3)^0,f,c
  8839  001F98  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  8840  001F9A  EFD1  F00F         	goto	u3531
  8841  001F9E  EFD3  F00F         	goto	u3530
  8842  001FA2                     u3531:
  8843  001FA2  EFD4  F00F         	goto	l954
  8844  001FA6                     u3530:
  8845  001FA6  8022               	bsf	___flmul@prod^0,0,c
  8846  001FA8                     l954:
  8847  001FA8  90D8               	bcf	status,0,c
  8848  001FAA  361C               	rlcf	___flmul@grs^0,f,c
  8849  001FAC  361D               	rlcf	(___flmul@grs+1)^0,f,c
  8850  001FAE  361E               	rlcf	(___flmul@grs+2)^0,f,c
  8851  001FB0  361F               	rlcf	(___flmul@grs+3)^0,f,c
  8852  001FB2  0626               	decf	___flmul@temp^0,f,c
  8853  001FB4  A0D8               	btfss	status,0,c
  8854  001FB6  0627               	decf	(___flmul@temp+1)^0,f,c
  8855  001FB8                     l3193:
  8856  001FB8  AE24               	btfss	(___flmul@prod+2)^0,7,c
  8857  001FBA  EFE1  F00F         	goto	u3541
  8858  001FBE  EFE3  F00F         	goto	u3540
  8859  001FC2                     u3541:
  8860  001FC2  EFC7  F00F         	goto	l3187
  8861  001FC6                     u3540:
  8862  001FC6  0E00               	movlw	0
  8863  001FC8  6E20               	movwf	___flmul@aexp^0,c
  8864  001FCA  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  8865  001FCC  EFEA  F00F         	goto	u3551
  8866  001FD0  EFEC  F00F         	goto	u3550
  8867  001FD4                     u3551:
  8868  001FD4  EF10  F010         	goto	l956
  8869  001FD8                     u3550:
  8870  001FD8  0EFF               	movlw	255
  8871  001FDA  141C               	andwf	___flmul@grs^0,w,c
  8872  001FDC  6E17               	movwf	??___flmul^0,c
  8873  001FDE  0EFF               	movlw	255
  8874  001FE0  141D               	andwf	(___flmul@grs+1)^0,w,c
  8875  001FE2  6E18               	movwf	(??___flmul+1)^0,c
  8876  001FE4  0EFF               	movlw	255
  8877  001FE6  141E               	andwf	(___flmul@grs+2)^0,w,c
  8878  001FE8  6E19               	movwf	(??___flmul+2)^0,c
  8879  001FEA  0E7F               	movlw	127
  8880  001FEC  141F               	andwf	(___flmul@grs+3)^0,w,c
  8881  001FEE  6E1A               	movwf	(??___flmul+3)^0,c
  8882  001FF0  5017               	movf	??___flmul^0,w,c
  8883  001FF2  1018               	iorwf	(??___flmul+1)^0,w,c
  8884  001FF4  1019               	iorwf	(??___flmul+2)^0,w,c
  8885  001FF6  101A               	iorwf	(??___flmul+3)^0,w,c
  8886  001FF8  B4D8               	btfsc	status,2,c
  8887  001FFA  EF01  F010         	goto	u3561
  8888  001FFE  EF03  F010         	goto	u3560
  8889  002002                     u3561:
  8890  002002  EF07  F010         	goto	l957
  8891  002006                     u3560:
  8892  002006                     l3201:
  8893  002006  0E01               	movlw	1
  8894  002008  6E20               	movwf	___flmul@aexp^0,c
  8895  00200A  EF10  F010         	goto	l956
  8896  00200E                     l957:
  8897  00200E  A022               	btfss	___flmul@prod^0,0,c
  8898  002010  EF0C  F010         	goto	u3571
  8899  002014  EF0E  F010         	goto	u3570
  8900  002018                     u3571:
  8901  002018  EF10  F010         	goto	l956
  8902  00201C                     u3570:
  8903  00201C  EF03  F010         	goto	l3201
  8904  002020                     l956:
  8905  002020  5020               	movf	___flmul@aexp^0,w,c
  8906  002022  B4D8               	btfsc	status,2,c
  8907  002024  EF16  F010         	goto	u3581
  8908  002028  EF18  F010         	goto	u3580
  8909  00202C                     u3581:
  8910  00202C  EF3C  F010         	goto	l3213
  8911  002030                     u3580:
  8912  002030  0E01               	movlw	1
  8913  002032  2622               	addwf	___flmul@prod^0,f,c
  8914  002034  0E00               	movlw	0
  8915  002036  2223               	addwfc	(___flmul@prod+1)^0,f,c
  8916  002038  2224               	addwfc	(___flmul@prod+2)^0,f,c
  8917  00203A  2225               	addwfc	(___flmul@prod+3)^0,f,c
  8918  00203C  A025               	btfss	(___flmul@prod+3)^0,0,c
  8919  00203E  EF23  F010         	goto	u3591
  8920  002042  EF25  F010         	goto	u3590
  8921  002046                     u3591:
  8922  002046  EF3C  F010         	goto	l3213
  8923  00204A                     u3590:
  8924  00204A  C022  F017         	movff	___flmul@prod,??___flmul
  8925  00204E  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  8926  002052  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  8927  002056  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  8928  00205A  341A               	rlcf	(??___flmul+3)^0,w,c
  8929  00205C  321A               	rrcf	(??___flmul+3)^0,f,c
  8930  00205E  3219               	rrcf	(??___flmul+2)^0,f,c
  8931  002060  3218               	rrcf	(??___flmul+1)^0,f,c
  8932  002062  3217               	rrcf	??___flmul^0,f,c
  8933  002064  C017  F022         	movff	??___flmul,___flmul@prod
  8934  002068  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  8935  00206C  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  8936  002070  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  8937  002074  4A26               	infsnz	___flmul@temp^0,f,c
  8938  002076  2A27               	incf	(___flmul@temp+1)^0,f,c
  8939  002078                     l3213:
  8940  002078  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  8941  00207A  EF47  F010         	goto	u3601
  8942  00207E  5027               	movf	(___flmul@temp+1)^0,w,c
  8943  002080  E108               	bnz	u3600
  8944  002082  2826               	incf	___flmul@temp^0,w,c
  8945  002084  A0D8               	btfss	status,0,c
  8946  002086  EF47  F010         	goto	u3601
  8947  00208A  EF49  F010         	goto	u3600
  8948  00208E                     u3601:
  8949  00208E  EF53  F010         	goto	l3217
  8950  002092                     u3600:
  8951  002092  0E00               	movlw	0
  8952  002094  6E22               	movwf	___flmul@prod^0,c
  8953  002096  0E00               	movlw	0
  8954  002098  6E23               	movwf	(___flmul@prod+1)^0,c
  8955  00209A  0E80               	movlw	128
  8956  00209C  6E24               	movwf	(___flmul@prod+2)^0,c
  8957  00209E  0E7F               	movlw	127
  8958  0020A0  6E25               	movwf	(___flmul@prod+3)^0,c
  8959  0020A2  EF81  F010         	goto	l3229
  8960  0020A6                     l3217:
  8961  0020A6  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  8962  0020A8  EF60  F010         	goto	u3610
  8963  0020AC  5027               	movf	(___flmul@temp+1)^0,w,c
  8964  0020AE  E106               	bnz	u3611
  8965  0020B0  0426               	decf	___flmul@temp^0,w,c
  8966  0020B2  B0D8               	btfsc	status,0,c
  8967  0020B4  EF5E  F010         	goto	u3611
  8968  0020B8  EF60  F010         	goto	u3610
  8969  0020BC                     u3611:
  8970  0020BC  EF6C  F010         	goto	l964
  8971  0020C0                     u3610:
  8972  0020C0  0E00               	movlw	0
  8973  0020C2  6E22               	movwf	___flmul@prod^0,c
  8974  0020C4  0E00               	movlw	0
  8975  0020C6  6E23               	movwf	(___flmul@prod+1)^0,c
  8976  0020C8  0E00               	movlw	0
  8977  0020CA  6E24               	movwf	(___flmul@prod+2)^0,c
  8978  0020CC  0E00               	movlw	0
  8979  0020CE  6E25               	movwf	(___flmul@prod+3)^0,c
  8980  0020D0  0E00               	movlw	0
  8981  0020D2  6E1B               	movwf	___flmul@sign^0,c
  8982  0020D4  EF81  F010         	goto	l3229
  8983  0020D8                     l964:
  8984  0020D8  C026  F021         	movff	___flmul@temp,___flmul@bexp
  8985  0020DC  0EFF               	movlw	255
  8986  0020DE  1622               	andwf	___flmul@prod^0,f,c
  8987  0020E0  0EFF               	movlw	255
  8988  0020E2  1623               	andwf	(___flmul@prod+1)^0,f,c
  8989  0020E4  0E7F               	movlw	127
  8990  0020E6  1624               	andwf	(___flmul@prod+2)^0,f,c
  8991  0020E8  0E00               	movlw	0
  8992  0020EA  1625               	andwf	(___flmul@prod+3)^0,f,c
  8993  0020EC  A021               	btfss	___flmul@bexp^0,0,c
  8994  0020EE  EF7B  F010         	goto	u3621
  8995  0020F2  EF7D  F010         	goto	u3620
  8996  0020F6                     u3621:
  8997  0020F6  EF7E  F010         	goto	l3227
  8998  0020FA                     u3620:
  8999  0020FA  8E24               	bsf	(___flmul@prod+2)^0,7,c
  9000  0020FC                     l3227:
  9001  0020FC  90D8               	bcf	status,0,c
  9002  0020FE  3021               	rrcf	___flmul@bexp^0,w,c
  9003  002100  6E25               	movwf	(___flmul@prod+3)^0,c
  9004  002102                     l3229:
  9005  002102  501B               	movf	___flmul@sign^0,w,c
  9006  002104  1225               	iorwf	(___flmul@prod+3)^0,f,c
  9007  002106  C022  F00F         	movff	___flmul@prod,?___flmul
  9008  00210A  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  9009  00210E  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  9010  002112  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  9011  002116                     l951:
  9012  002116  0012               	return		;funcret
  9013  002118                     __end_of___flmul:
  9014                           	opt callstack 0
  9015                           
  9016 ;; *************** function _WriteLCD *****************
  9017 ;; Defined at:
  9018 ;;		line 180 in file "main.c"
  9019 ;; Parameters:    Size  Location     Type
  9020 ;;  word            1    wreg     unsigned char 
  9021 ;; Auto vars:     Size  Location     Type
  9022 ;;  word            1    1[COMRAM] unsigned char 
  9023 ;; Return value:  Size  Location     Type
  9024 ;;                  1    wreg      void 
  9025 ;; Registers used:
  9026 ;;		wreg, status,2, status,0, cstack
  9027 ;; Tracked objects:
  9028 ;;		On entry : 0/0
  9029 ;;		On exit  : 0/0
  9030 ;;		Unchanged: 0/0
  9031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9032 ;;      Params:         0       0       0       0       0       0       0       0       0
  9033 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9034 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9035 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9036 ;;Total ram usage:        1 bytes
  9037 ;; Hardware stack levels used:    1
  9038 ;; Hardware stack levels required when called:    1
  9039 ;; This function calls:
  9040 ;;		_LCD
  9041 ;; This function is called by:
  9042 ;;		_main
  9043 ;; This function uses a non-reentrant model
  9044 ;;
  9045                           
  9046                           	psect	text46
  9047  003988                     __ptext46:
  9048                           	opt callstack 0
  9049  003988                     _WriteLCD:
  9050                           	opt callstack 29
  9051                           
  9052                           ;incstack = 0
  9053                           ;WriteLCD@word stored from wreg
  9054  003988  6E02               	movwf	WriteLCD@word^0,c
  9055  00398A                     
  9056                           ;main.c: 181:     LATE1 = 1;
  9057  00398A  828D               	bsf	3981,1,c	;volatile
  9058  00398C                     
  9059                           ;main.c: 182:     LCD(word >> 4);
  9060  00398C  3802               	swapf	WriteLCD@word^0,w,c
  9061  00398E  0B0F               	andlw	15
  9062  003990  ECA7  F01C         	call	_LCD
  9063                           
  9064                           ;main.c: 183:     LCD(word & 0x0F);
  9065  003994  5002               	movf	WriteLCD@word^0,w,c
  9066  003996  0B0F               	andlw	15
  9067  003998  ECA7  F01C         	call	_LCD
  9068  00399C  0012               	return		;funcret
  9069  00399E                     __end_of_WriteLCD:
  9070                           	opt callstack 0
  9071                           
  9072 ;; *************** function _LCD *****************
  9073 ;; Defined at:
  9074 ;;		line 186 in file "main.c"
  9075 ;; Parameters:    Size  Location     Type
  9076 ;;  data            1    wreg     unsigned char 
  9077 ;; Auto vars:     Size  Location     Type
  9078 ;;  data            1    0[COMRAM] unsigned char 
  9079 ;; Return value:  Size  Location     Type
  9080 ;;                  1    wreg      void 
  9081 ;; Registers used:
  9082 ;;		wreg, status,2, cstack
  9083 ;; Tracked objects:
  9084 ;;		On entry : 0/0
  9085 ;;		On exit  : 0/0
  9086 ;;		Unchanged: 0/0
  9087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9088 ;;      Params:         0       0       0       0       0       0       0       0       0
  9089 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9090 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9091 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9092 ;;Total ram usage:        1 bytes
  9093 ;; Hardware stack levels used:    1
  9094 ;; This function calls:
  9095 ;;		Nothing
  9096 ;; This function is called by:
  9097 ;;		_SettingsLCD
  9098 ;;		_WriteLCD
  9099 ;; This function uses a non-reentrant model
  9100 ;;
  9101                           
  9102                           	psect	text47
  9103  00394E                     __ptext47:
  9104                           	opt callstack 0
  9105  00394E                     _LCD:
  9106                           	opt callstack 28
  9107                           
  9108                           ;incstack = 0
  9109                           ;LCD@data stored from wreg
  9110  00394E  6E01               	movwf	LCD@data^0,c
  9111  003950                     
  9112                           ;main.c: 187:     LATE0 = 1;
  9113  003950  808D               	bsf	3981,0,c	;volatile
  9114  003952                     
  9115                           ;main.c: 188:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  9116  003952  0E06               	movlw	6
  9117  003954                     u4897:
  9118  003954  2EE8               	decfsz	wreg,f,c
  9119  003956  D7FE               	bra	u4897
  9120  003958  D000               	nop2	
  9121  00395A                     
  9122                           ;main.c: 189:     LATD = data;
  9123  00395A  C001  FF8C         	movff	LCD@data,3980	;volatile
  9124  00395E                     
  9125                           ;main.c: 190:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  9126  00395E  0E06               	movlw	6
  9127  003960                     u4907:
  9128  003960  2EE8               	decfsz	wreg,f,c
  9129  003962  D7FE               	bra	u4907
  9130  003964  D000               	nop2	
  9131  003966                     
  9132                           ;main.c: 191:     LATE0 = 0;
  9133  003966  908D               	bcf	3981,0,c	;volatile
  9134  003968                     
  9135                           ;main.c: 192:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  9136  003968  0E06               	movlw	6
  9137  00396A                     u4917:
  9138  00396A  2EE8               	decfsz	wreg,f,c
  9139  00396C  D7FE               	bra	u4917
  9140  00396E  D000               	nop2	
  9141  003970  0012               	return		;funcret
  9142  003972                     __end_of_LCD:
  9143                           	opt callstack 0
  9144                           
  9145                           	psect	rparam
  9146  0000                     tosu	equ	0xFFF
  9147                           tosh	equ	0xFFE
  9148                           tosl	equ	0xFFD
  9149                           stkptr	equ	0xFFC
  9150                           pclatu	equ	0xFFB
  9151                           pclath	equ	0xFFA
  9152                           pcl	equ	0xFF9
  9153                           tblptru	equ	0xFF8
  9154                           tblptrh	equ	0xFF7
  9155                           tblptrl	equ	0xFF6
  9156                           tablat	equ	0xFF5
  9157                           prodh	equ	0xFF4
  9158                           prodl	equ	0xFF3
  9159                           indf0	equ	0xFEF
  9160                           postinc0	equ	0xFEE
  9161                           postdec0	equ	0xFED
  9162                           preinc0	equ	0xFEC
  9163                           plusw0	equ	0xFEB
  9164                           fsr0h	equ	0xFEA
  9165                           fsr0l	equ	0xFE9
  9166                           wreg	equ	0xFE8
  9167                           indf1	equ	0xFE7
  9168                           postinc1	equ	0xFE6
  9169                           postdec1	equ	0xFE5
  9170                           preinc1	equ	0xFE4
  9171                           plusw1	equ	0xFE3
  9172                           fsr1h	equ	0xFE2
  9173                           fsr1l	equ	0xFE1
  9174                           bsr	equ	0xFE0
  9175                           indf2	equ	0xFDF
  9176                           postinc2	equ	0xFDE
  9177                           postdec2	equ	0xFDD
  9178                           preinc2	equ	0xFDC
  9179                           plusw2	equ	0xFDB
  9180                           fsr2h	equ	0xFDA
  9181                           fsr2l	equ	0xFD9
  9182                           status	equ	0xFD8


Data Sizes:
    Strings     26
    Constant    0
    Data        0
    BSS         129
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      95
    BANK0           160     74     121
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_12(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), text(BANK0[15]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), text(BANK0[15]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_7(CODE[4]), STR_6(CODE[4]), STR_3(CODE[4]), STR_2(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 15
		 -> text(BANK0[15]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 15
		 -> text(BANK0[15]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S867_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 15
		 -> text(BANK0[15]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 15
		 -> text(BANK0[15]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    ReadI2C@Data	PTR unsigned char  size(2) Largest target is 2
		 -> getShuntVoltage_raw@value(COMRAM[2]), getBusVoltage_raw@value(COMRAM[2]), 

    WriteI2C@Data	PTR unsigned int  size(2) Largest target is 2
		 -> setCalibration_32V_2A@config(COMRAM[2]), ina219_calValue(BANK0[2]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flge->___flmul
    _atoi->_isspace
    _settings->_SettingsLCD
    _SettingsLCD->_LCD
    _setCalibration_32V_2A->_WriteI2C
    _WriteI2C->_SendI2C
    _getShuntVoltage_mV->___flmul
    _getShuntVoltage_raw->_ReadI2C
    _getBusVoltage_V->___flmul
    _getBusVoltage_raw->_ReadI2C
    _ReadI2C->_ReceiveI2C
    _StopI2C->_ReadyI2C
    _StartI2C->_ReadyI2C
    _SendI2C->_ReadyI2C
    _RepeatedStartI2C->_ReadyI2C
    _ReceiveI2C->_ReadyI2C
    ___flmul->___xxtofl
    _WriteLCD->_LCD

Critical Paths under _main in BANK0

    _main->_sprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   42011
                        _SettingsLCD
                           _WriteLCD
                            ___fladd
                            ___fldiv
                    _getBusVoltage_V
                 _getShuntVoltage_mV
              _setCalibration_32V_2A
                           _settings
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   28405
                                             56 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   28048
                                             85 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   27676
                                             63 COMRAM    22    16      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   22377
                                             51 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3241
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3041
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2566
                                             25 COMRAM    16     8      8
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     638
                                             39 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2159
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1152
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _settings                                             0     0      0      66
                        _SettingsLCD
 ---------------------------------------------------------------------------------
 (2) _SettingsLCD                                          1     1      0      66
                                              1 COMRAM     1     1      0
                                _LCD
 ---------------------------------------------------------------------------------
 (1) _setCalibration_32V_2A                                2     2      0     591
                                             10 COMRAM     2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _WriteI2C                                             8     3      5     566
                                              2 COMRAM     8     3      5
                            _SendI2C
                           _StartI2C
                            _StopI2C
 ---------------------------------------------------------------------------------
 (1) _getShuntVoltage_mV                                   6     2      4    3925
                                             39 COMRAM     6     2      4
                            ___flmul
                           ___xxtofl
                _getShuntVoltage_raw
 ---------------------------------------------------------------------------------
 (2) _getShuntVoltage_raw                                  8     6      2     772
                                             11 COMRAM     8     6      2
                            _ReadI2C
 ---------------------------------------------------------------------------------
 (1) _getBusVoltage_V                                      6     2      4    3925
                                             39 COMRAM     6     2      4
                            ___flmul
                           ___xxtofl
                  _getBusVoltage_raw
 ---------------------------------------------------------------------------------
 (2) _getBusVoltage_raw                                    8     6      2     772
                                             11 COMRAM     8     6      2
                            _ReadI2C
 ---------------------------------------------------------------------------------
 (3) _ReadI2C                                              8     3      5     678
                                              3 COMRAM     8     3      5
                         _ReceiveI2C
                   _RepeatedStartI2C
                            _SendI2C
                           _StartI2C
                            _StopI2C
 ---------------------------------------------------------------------------------
 (3) _StopI2C                                              0     0      0       0
                           _ReadyI2C
 ---------------------------------------------------------------------------------
 (3) _StartI2C                                             0     0      0       0
                           _ReadyI2C
 ---------------------------------------------------------------------------------
 (3) _SendI2C                                              1     1      0      22
                                              1 COMRAM     1     1      0
                           _ReadyI2C
 ---------------------------------------------------------------------------------
 (4) _RepeatedStartI2C                                     0     0      0       0
                           _ReadyI2C
 ---------------------------------------------------------------------------------
 (4) _ReceiveI2C                                           2     2      0      45
                                              1 COMRAM     2     2      0
                           _ReadyI2C
 ---------------------------------------------------------------------------------
 (4) _ReadyI2C                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2656
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _WriteLCD                                             1     1      0      66
                                              1 COMRAM     1     1      0
                                _LCD
 ---------------------------------------------------------------------------------
 (3) _LCD                                                  1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SettingsLCD
     _LCD
   _WriteLCD
     _LCD
   ___fladd
     ___fldiv (ARG)
   ___fldiv
   _getBusVoltage_V
     ___flmul
       ___xxtofl (ARG)
     ___xxtofl
     _getBusVoltage_raw
       _ReadI2C
         _ReceiveI2C
           _ReadyI2C
         _RepeatedStartI2C
           _ReadyI2C
         _SendI2C
           _ReadyI2C
         _StartI2C
           _ReadyI2C
         _StopI2C
           _ReadyI2C
   _getShuntVoltage_mV
     ___flmul
       ___xxtofl (ARG)
     ___xxtofl
     _getShuntVoltage_raw
       _ReadI2C
         _ReceiveI2C
           _ReadyI2C
         _RepeatedStartI2C
           _ReadyI2C
         _SendI2C
           _ReadyI2C
         _StartI2C
           _ReadyI2C
         _StopI2C
           _ReadyI2C
   _setCalibration_32V_2A
     _WriteI2C
       _SendI2C
         _ReadyI2C
       _StartI2C
         _ReadyI2C
       _StopI2C
         _ReadyI2C
   _settings
     _SettingsLCD
       _LCD
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
             ___fldiv (ARG)
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___flneg
           ___flsub
             ___fladd
               ___fldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper
   _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4A      79       5       75.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5D      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     128      20        0.0%
DATA                 0      0     128       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Mar 10 21:30:47 2021

                  ___fldiv@aexp 0019                    ___fldiv@bexp 0018                               _i 00C4  
                  ___fldiv@sign 0011                     ReadI2C@Data 0005                    ___awdiv@sign 0006  
           ___wmul@multiplicand 0003         __end_of_getBusVoltage_V 35CC                             l112 39B8  
                           l121 39A8                             l106 370A                             l203 30BE  
                           l124 39B0                             l132 31F2                             l109 3522  
                           l141 3986                             l118 394C                             l150 36BE  
                           l206 3100                             l135 39C0                             l144 399C  
                           l208 313A                             l153 35CA                             l138 38DA  
                           l162 37CE                             l226 13CC                             l330 33AE  
                           l147 3970                             l323 1C36                             l156 346E  
                           l244 0C08                             l316 1CEC                             l333 3926  
                           l270 0FA0                             l159 3576                             l329 33A6  
                           l603 2D16                             l630 2C12                             l607 383E  
                           l564 3078                             l903 3750                             l920 22D4  
                           l592 334C                             l577 32A2                             l915 24B0  
                           l917 2310                             l861 15BC                             l926 2356  
                           l598 2CD0                             l870 188C                             l862 15AA  
                           l951 2116                             l863 1570                             l928 23CE  
                           l929 23BC                             l954 1FA8                             l947 1DB2  
                           l964 20D8                             l956 2020                             l957 200E  
                           l878 16D6                             l991 2876                             l887 17A6  
                           l888 1794                             l995 27B2                             l988 271A  
                           _LCD 394E                             _PEN 007E2A                             _SEN 007E28  
                           _pad 307A                    ___awmod@sign 0006                             wreg 000FE8  
                  ___flmul@aexp 0020                    ___flmul@bexp 0021                     _tolower$939 000D  
                  ___flmul@sign 001B                    ___flmul@temp 0026                    ___flmul@prod 0022  
                  ReadI2C@bytes 0007                    __CFG_LVP$OFF 000000                            ?_LCD 0001  
                  ___fltol@exp1 000A                    __CFG_WDT$OFF 000000                            l1002 280E  
                          l1014 2E14                            l1121 38AC                            l1106 361C  
                          l1043 29FE                            l1115 34CA                            l1052 26C2  
                          l1140 340E                            l1109 39C2                            l1125 2EEA  
                          l1062 3876                            l1070 366E                            l1046 2A06  
                          l1055 2606                            l1135 3406                            l3001 21CC  
                          l3011 2212                            l3003 21D4                            l1091 2FB4  
                          l1076 3806                            l3021 223A                            l3013 2216  
                          l3005 21E4                            l3111 1D0A                            l3031 2288  
                          l3007 21FA                            l3201 2006                            l3121 1D50  
                          l3113 1D1A                            l3105 1CEE                            l4001 281C  
                          l3041 22D2                            l3033 2298                            l3025 224E  
                          l3009 220A                            l3017 222A                            l3211 2074  
                          l3131 1D7C                            l3123 1D56                            l3115 1D2A  
                          l3107 1CFA                            l4011 2864                            l4003 281E  
                          l3051 2320                            l3043 22DE                            l3035 22A0  
                          l3027 2268                            l3019 223A                            l1099 3794  
                          l3221 20DC                            l3205 2030                            l3213 2078  
                          l3141 1DD2                            l3133 1D8C                            l3125 1D5C  
                          l3117 1D3A                            l3109 1D08                            l4013 2866  
                          l4005 2822                            l4021 36CA                            l3301 3242  
                          l3053 2336                            l3061 2366                            l3045 22FC  
                          l3037 22B0                            l3029 2278                            l3231 2106  
                          l3223 20EC                            l3215 2092                            l3207 203C  
                          l3151 1E12                            l3135 1D9C                            l3127 1D6A  
                          l3119 1D40                            l4007 2846                            l4031 3704  
                          l4023 36EC                            l3311 327C                            l3303 324A  
                          l3063 2374                            l3055 233C                            l3047 22FE  
                          l3039 22C4                            l3225 20FA                            l3217 20A6  
                          l3209 204A                            l3161 1E5C                            l3153 1E1E  
                          l3145 1DE6                            l3137 1DA2                            l3129 1D6C  
                          l4009 2856                            l4041 3584                            l4033 3670  
                          l4025 36F2                            l4017 36C0                            l3241 2FB6  
                          l3305 3258                            l3313 3282                            l3073 23DE  
                          l3081 2426                            l3065 2378                            l3057 2346  
                          l3049 230E                            l3321 32A4                            l3401 2BD2  
                          l3227 20FC                            l3219 20C0                            l3171 1EAE  
                          l3163 1E68                            l3155 1E36                            l3147 1DF2  
                          l3139 1DC2                            l4035 3682                            l4027 36F8  
                          l4019 36C8                            l3411 361E                            l3251 2FE2  
                          l3243 2FBA                            l3315 3292                            l3307 326E  
                          l3091 2490                            l3083 2440                            l3075 23EA  
                          l3067 2386                            l3059 2354                            l3331 3344  
                          l3323 32D2                            l3235 370C                            l3403 2BE2  
                          l4051 35CC                            l3229 2102                            l3181 1F2C  
                          l3173 1EBE                            l3165 1E78                            l3157 1E42  
                          l3149 1DFC                            l4045 3524                            l4037 369C  
                          l4029 36FE                            l3413 3622                            l4109 2934  
                          l3261 3010                            l3253 2FEA                            l3245 2FC8  
                          l3317 329A                            l3309 3276                            l3093 249E  
                          l3085 2456                            l3077 23F8                            l3069 23B4  
                          l3333 334A                            l3325 32E2                            l3341 2C52  
                          l2701 1496                            l3237 371C                            l3405 2BF2  
                          l3501 09AA                            l4053 35DE                            l4063 398A  
                          l3191 1FA6                            l3183 1F62                            l3175 1EDA  
                          l3167 1E84                            l3159 1E4E                            l3423 39B2  
                          l3431 39AA                            l4039 3578                            l4047 3530  
                          l3415 3636                            l3271 304A                            l3263 3018  
                          l3255 2FEE                            l3247 2FD0                            l3095 24A4  
                          l3087 2470                            l3079 2422                            l3327 3310  
                          l3351 2CBE                            l3343 2C80                            l2711 14D2  
                          l2703 149E                            l3407 2C02                            l2631 2F10  
                          l3511 0A34                            l3503 09D0                            l4055 35E6  
                          l4071 2A10                            l4065 398C                            l3193 1FB8  
                          l3185 1F70                            l3177 1EE6                            l3169 1E94  
                          l3441 38B4                            l3425 39B6                            l3433 39AE  
                          l3417 3664                            l3281 3070                            l3273 304C  
                          l3265 3026                            l3257 2FF6                            l3249 2FD4  
                          l3097 24A6                            l3089 248C                            l3329 3320  
                          l3353 2D0E                            l3345 2C90                            l3337 2C14  
                          l3361 381E                            l2801 16FC                            l2721 14E6  
                          l2713 14D6                            l2705 14AE                            l2633 2F1A  
                          l2641 3878                            l3601 0E48                            l3521 0A6A  
                          l4057 35EE                            l4081 2ABC                            l4073 2A24  
                          l3195 1FC6                            l3187 1F8E                            l3179 1F02  
                          l3443 38BA                            l3435 39BA                            l3427 39A0  
                          l3419 3668                            l3275 3052                            l3267 302C  
                          l3259 3008                            l3291 320E                            l3355 2D14  
                          l3347 2C9E                            l3339 2C42                            l3363 382E  
                          l2811 172A                            l2731 14FA                            l2723 14EA  
                          l2715 14DA                            l2707 14C0                            l2635 2F38  
                          l2627 2EEC                            l2651 3752                            l2643 3884  
                          l3611 0F14                            l3603 0E66                            l3531 0B34  
                          l3507 0A06                            l4059 360A                            l4083 2ACA  
                          l4075 2A38                            l4067 2A08                            l3197 1FCA  
                          l3189 1F98                            l3445 38C2                            l3437 39BE  
                          l3429 39A4                            l3269 3042                            l3277 3058  
                          l3293 3212                            l3285 31F4                            l3349 2CB0  
                          l2813 1738                            l2805 1710                            l2821 1756  
                          l2733 14FE                            l2725 14EE                            l2717 14DE  
                          l2709 14CE                            l2741 150E                            l3381 2B78  
                          l3373 2B38                            l2901 2DAA                            l2637 2F6E  
                          l2629 2EFE                            l2653 375E                            l2645 3888  
                          l3701 1266                            l3621 0F8C                            l3613 0F24  
                          l3605 0E9A                            l3541 0BB6                            l3533 0B68  
                          l3525 0AA0                            l3509 0A18                            l3461 084C  
                          l3453 081C                            l4085 2ADC                            l4077 2A90  
                          l4069 2A0C                            l3199 1FD8                            l3447 38D6  
                          l3439 38B0                            l3279 3068                            l3295 3220  
                          l3287 31F8                            l3359 3808                            l2815 1740  
                          l2807 171A                            l2823 1764                            l2751 157E  
                          l2743 1512                            l2735 1502                            l2727 14F2  
                          l2719 14E2                            l2671 13FA                            l2663 13CE  
                          l3391 2BA8                            l3383 2B86                            l3375 2B62  
                          l3367 2B0E                            l2911 2E0C                            l2655 3770  
                          l2647 38A0                            l3711 12C2                            l3703 1272  
                          l3631 1042                            l3623 0F98                            l3615 0F34  
                          l3607 0ECC                            l3543 0BC8                            l3551 0C14  
                          l3535 0B70                            l3527 0AD4                            l3519 0A50  
                          l3471 08A2                            l3463 0870                            l3455 0826  
                          l4087 2AE2                            l4079 2AB6                            l3449 38D8  
                          l3297 3228                            l3289 3206                            l2833 17B6  
                          l2841 180C                            l2825 1768                            l2817 1744  
                          l2809 1728                            l2761 15A8                            l2753 158A  
                          l2745 153C                            l2737 1506                            l2729 14F6  
                          l2681 1434                            l2673 140A                            l2665 13DA  
                          l3393 2BB2                            l3377 2B64                            l3369 2B24  
                          l2905 2DB6                            l2657 3774                            l3721 130C  
                          l3705 1278                            l3713 12C8                            l3641 108C  
                          l3633 1054                            l3625 0FBC                            l3617 0F68  
                          l3609 0EE2                            l3561 0C54                            l3545 0BDA  
                          l3529 0ADA                            l3537 0BA2                            l3481 08D0  
                          l3473 08B4                            l3465 087A                            l3457 0836  
                          l3801 2E5A                            l3299 323A                            l2851 185E  
                          l2843 181C                            l2835 17C2                            l2827 1776  
                          l2819 1754                            l2771 15FE                            l2763 15CA  
                          l2755 158E                            l2747 1558                            l2739 150A  
                          l2691 1462                            l2683 143A                            l2675 141A  
                          l2667 13E8                            l3379 2B74                            l2907 2DC8  
                          l2931 24D2                            l2915 3470                            l2659 37D0  
                          l2923 33E6                            l3731 133C                            l3723 1318  
                          l3715 12DA                            l3707 129E                            l3651 10C2  
                          l3643 109C                            l3635 1062                            l3627 1020  
                          l3619 0F78                            l3571 0CB0                            l3563 0C8A  
                          l3547 0BE2                            l3539 0BB2                            l3491 0944  
                          l3475 08C0                            l3483 08D6                            l3467 0882  
                          l3459 0844                            l3803 2E72                            l3821 31A0  
                          l3813 313E                            l2861 187C                            l2853 1864  
                          l2845 182C                            l2837 17D0                            l2829 178C  
                          l2781 1638                            l2773 160C                            l2765 15DA  
                          l2757 159C                            l2749 1568                            l2693 1464  
                          l2685 144C                            l2677 141C                            l2669 13EA  
                          l3389 2B9E                            l2941 25BA                            l2933 2528  
                          l2917 3480                            l2925 33F8                            l3741 1396  
                          l3725 1320                            l3717 12F4                            l3709 12BA  
                          l3661 10F6                            l3653 10C6                            l3645 10A0  
                          l3629 102E                            l3637 106A                            l3581 0CF4  
                          l3573 0CC2                            l3565 0C92                            l3557 0C26  
                          l3549 0BFC                            l3493 0960                            l3485 08FC  
                          l3477 08C8                            l3469 0894                            l3805 2E8E  
                          l3901 1BC0                            ?_pad 0011                            l3831 31DC  
                          l3823 31B0                            l3815 315A                            l3751 2878  
                          l2855 1866                            l2847 184C                            l2839 180A  
                          l2791 16A4                            l2783 163A                            l2775 161A  
                          l2759 159E                            l2695 1474                            l2687 144E  
                          l2679 1424                            l3399 2BC6                            l2951 26A2  
                          l2943 25F6                            l2935 253C                            l2871 307A  
                          l2919 33B0                            l3743 13A6                            l3735 1370  
                          l3727 1330                            l3719 12FA                            l3671 1194  
                          l3663 10FA                            l3655 10CC                            l3647 10A6  
                          l3639 107E                            l3591 0D3E                            l3583 0D0C  
                          l3575 0CD0                            l3559 0C38                            l3567 0C96  
                          l3495 0978                            l3479 08CC                            l3807 2EA0  
                          l3903 1BD2                            l3911 1C4A                            l3841 3966  
                          l3833 3950                            l2865 3928                            l3825 31B4  
                          l3817 3168                            l2961 3902                            l3761 28E6  
                          l3753 288C                            l2857 186C                            l2849 1850  
                          l2793 16A6                            l2785 1644                            l2777 1626  
                          l2769 15EE                            l2697 1484                            l2689 1454  
                          l2953 26B2                            l2937 254A                            l2945 262A  
                          l2929 24B2                            l2881 30CA                            l2873 3088  
                          l3745 13AC                            l3737 1382                            l3729 1336  
                          l3681 11F2                            l3649 10B2                            l3657 10D2  
                          l3665 1100                            l3673 1198                            l3593 0D52  
                          l3585 0D1E                            l3577 0CD4                            l3569 0C9E  
                          l3497 0982                            l3489 0932                            l3809 2EC8  
                          l3913 1C6E                            l3921 1C9C                            l3905 1C06  
                          l3843 3968                            l3835 3952                            l2867 3928  
                          l3819 318C                            l3827 31BA                            l2963 391E  
                          l3771 290E                            l3763 28EA                            l3755 2890  
                          l2971 2132                            l2859 187A                            l2795 16B6  
                          l2779 162A                            l2787 164A                            l2699 1494  
                          l2947 2666                            l2883 30DE                            l2875 309C  
                          l3739 138E                            l3691 1230                            l3683 1202  
                          l3675 11B6                            l3667 1158                            l3659 10E4  
                          l3595 0DB6                            l3579 0CE6                            l3587 0D26  
                          l3923 1CAA                            l3915 1C7C                            l3851 18D2  
                          l3837 395A                            l2869 393E                            l3829 31D8  
                          l3941 34DE                            l2957 3840                            l3773 2916  
                          l3757 2894                            l2981 2166                            l2973 2134  
                          l2789 1670                            l2797 16C6                            l2893 2D18  
                          l2949 267A                            l2885 30E2                            l2877 30AA  
                          l3693 1240                            l3685 1206                            l3677 11D2  
                          l3669 118C                            l3597 0E0E                            l3589 0D2E  
                          l3917 1C90                            l3861 1934                            l3853 18D6  
                          l3845 188E                            l3839 395E                            l3951 3440  
                          l3943 34FA                            l3935 3974                            l3783 29BE  
                          l3775 294A                            l3767 28F0                            l3759 28B0  
                          l2991 2198                            l2975 2144                            l2983 216E  
                          l2967 2118                            l2799 16EC                            l2895 2D38  
                          l2887 310E                            l2879 30B6                            l3695 1248  
                          l3687 1216                            l3679 11E4                            l3599 0E42  
                          l3871 19E2                            l3863 196E                            l3855 18FA  
                          l3847 18B2                            l3927 1CB6                            l3945 350C  
                          l3937 3976                            l3785 29D0                            l3769 2906  
                          l2993 219A                            l2985 217E                            l2977 2154  
                          l2969 2124                            l2897 2D76                            l2889 3122  
                          l3697 1256                            l3689 1228                            l3793 2E16  
                          l3929 1CDA                            l3881 1A64                            l3865 198E  
                          l3857 1902                            l3873 19F4                            l3849 18C0  
                          l3971 26C6                            l3947 3410                            l3955 3796  
                          l3939 34CE                            l3787 29E2                            l3779 2980  
                          l2995 21AA                            l2987 2184                            l2979 2164  
                          l2899 2D9E                            l3699 125E                            l3795 2E40  
                          l3891 1AFA                            l3883 1A94                            l3875 1A14  
                          l3867 199C                            l3859 1910                            l3963 334E  
                          l3973 26D6                            l3949 342A                            l3957 37B0  
                          l2997 21BA                            l2989 218A                            l3885 1AA6  
                          l3877 1A24                            l3965 3356                            l3991 279C  
                          l3983 2754                            l3975 26E4                            l3959 37C6  
                          l2999 21CA                            l3799 2E4C                            l3887 1ABC  
                          l3895 1B26                            l3879 1A54                            l3967 3364  
                          l3993 27A8                            l3985 275C                            l3977 272A  
                          l3897 1B54                            l3889 1ACA                            l3969 338A  
                          l3995 27E4                            l3987 2768                            l3979 2740  
                          l3997 27F0                            l3989 279A                            l3999 27FE  
                          STR_1 0801                            STR_2 0808                            STR_3 0810  
                          STR_6 080C                            STR_7 0814                            u3000 2DC8  
                          u3001 2DC4                            u3020 2E02                            u3100 2528  
                          u3021 2DFC                            u3101 2524                            u3030 2E04  
                          u3110 254A                            u3015 2DDA                            u3111 2546  
                          u3200 3872                            u3040 34B8                            u4000 092A  
                          _LATD 000F8C                            u4001 0924                            _LATE 000F8D  
                          u3210 2132                            u3130 25B6                            u3050 34CA  
                          u4010 092C                            u3211 212E                            u3131 25B2  
                          u3051 34C6                            u3300 22D2                            u3220 2144  
                          u3140 25DA                            u2500 3800                            u3060 33E0  
                          u4100 0BC8                            u4020 0944                            u3301 22CE  
                          u3221 2140                            u3125 255E                            u2501 37FA  
                          u3061 33DA                            u4101 0BC4                            u4021 0940  
                          u3310 22FC                            u3230 2154                            u3150 25F6  
                          u3126 2568                            u2510 3802                            u3070 33E2  
                          u4110 0BDA                            u4030 09D0                            u3311 22F8  
                          u3231 2150                            u3151 25F2                            u3127 2578  
                          u3047 34AE                            u4111 0BD6                            u4031 09CC  
                          u3400 23F8                            u3320 2320                            u3240 2198  
                          u2600 14CE                            u2520 13E8                            u3160 264A  
                          u2440 2EFE                            u3080 33F8                            u4200 0CE6  
                          u4120 0BFC                            u4040 09FE                            u3401 23F4  
                          u3321 231C                            u3241 2194                            u2601 14CA  
                          u2521 13E4                            u3145 25D0                            u2441 2EFA  
                          u3081 33F4                            u4201 0CE2                            u4121 0BF8  
                          u4041 09F8                            u3410 2440                            u3330 2336  
                          u3250 21AA                            u2610 153C                            u2530 13FA  
                          u3170 2666                            u3090 24FA                            u2450 2F10  
                          u4210 0CF4                            u4130 0C22                            u4050 0A00  
                          u3411 243C                            u3331 2332                            u3251 21A6  
                          u2611 1538                            u2531 13F6                            u3171 2662  
                          u2451 2F0C                            u4211 0CF0                            u4131 0C1E  
                          u3500 1DC2                            u3420 2470                            u3340 2354  
                          u3260 21BA                            u2700 161A                            u2620 1554  
                          u2540 140A                            u3180 26A2                            u2460 2F38  
                          u4300 1054                            u4220 0D1E                            u4140 0C38  
                          u4060 0A18                            u3501 1DBE                            u3421 246C  
                          u3341 2350                            u3261 21B6                            u2701 1616  
                          u2621 154E                            u2541 1406                            u3181 269E  
                          u3165 2640                            u2461 2F34                            u4301 1050  
                          u4221 0D1A                            u4141 0C34                            u4061 0A14  
                          u3510 1DD2                            u3190 3870                            u3430 249E  
                          u3350 2374                            u3270 21FA                            u2710 1638  
                          u2630 1556                            u2550 144C                            u2470 2F6E  
                          u4310 1062                            u4230 0E66                            u4150 0C54  
                          u4070 0A9C                            u3511 1DCE                            u3191 386A  
                          u3431 249A                            u3351 2370                            u3271 21F6  
                          u2711 1634                            u2551 1448                            u3095 24F0  
                          u2471 2F6A                            u4311 105E                            u4231 0E62  
                          u4151 0C50                            u4071 0A98                            u3600 2092  
                          u3520 1F4C                            u3440 1D08                            u3360 2386  
                          u3280 223A                            u2800 1776                            u2720 1670  
                          u2640 157E                            u2560 1462                            u2480 38A0  
                          u4400 1256                            u4320 107E                            u4240 0ECC  
                          u4160 0C8A                            u4080 0B30                            u3601 208E  
                          u3441 1D04                            u3361 2382                            u3281 2236  
                          u2801 1772                            u2721 166C                            u2641 157A  
                          u2561 145E                            u2481 389C                            u4401 1252  
                          u4321 107A                            u4241 0EC8                            u4161 0C86  
                          u4081 0B2C                            u3610 20C0                            u3530 1FA6  
                          u3450 1D1A                            u3370 23B4                            u3290 22B0  
                          u2810 178C                            u2730 16B6                            u2650 159C  
                          u2570 1474                            u2490 3794                            u4410 12DA  
                          u4330 108C                            u4250 0F14                            u4170 0CB0  
                          u4090 0BA2                            u3611 20BC                            u3531 1FA2  
                          u3451 1D16                            u3371 23B0                            u3291 22AC  
                          u2811 1788                            u2731 16B2                            u2651 1598  
                          u2571 1470                            u2491 3790                            u4411 12D6  
                          u4331 1088                            u4251 0F10                            u4171 0CAC  
                          u4091 0B9E                            u3620 20FA                            u3540 1FC6  
                          u3460 1D2A                            u4500 29B8                            u3700 3220  
                          u3380 23CA                            u2900 187A                            u2820 17A2  
                          u2740 16EC                            u2660 15BC                            u2580 1484  
                          u4420 12F4                            u4340 10E4                            u4260 0F24  
                          u4180 0CC2                            u3621 20F6                            u3541 1FC2  
                          u3525 1F42                            u3461 1D26                            u4501 29B2  
                          u3701 321C                            u3381 23C6                            u2901 1876  
                          u2821 179E                            u2741 16E8                            u2661 15B8  
                          u2581 1480                            u4421 12F0                            u4341 10E0  
                          u4261 0F20                            u4181 0CBE                            u3550 1FD8  
                          u3470 1D6A                            u2910 393E                            u4510 29BA  
                          u3630 2FC8                            u3710 323A                            u3390 23DE  
                          u2830 17B6                            u2750 16FC                            u2670 15CA  
                          u2590 14C0                            u4430 130C                            u4350 11B6  
                          u4270 0F8C                            u4190 0CD0                            u3551 1FD4  
                          u3471 1D66                            u2911 393A                            u3631 2FC4  
                          u3711 3236                            u3391 23DA                            u2831 17B2  
                          u2751 16F8                            u2671 15C6                            u2591 14BC  
                          u4431 1308                            u4351 11B2                            u4271 0F88  
                          u4191 0CCC                            u3560 2006                            u3480 1D7C  
                          u2920 394C                            u4600 31D8                            u4520 29D0  
                          u3640 2FE2                            u3720 3258                            u3800 2C9E  
                          u2840 17D0                            u2760 1728                            u2680 15DA  
                          u4440 136A                            u4360 11D2                            u4280 102E  
                          u3561 2002                            u3481 1D78                            u2921 3948  
                          u4601 31D4                            u4521 29CC                            u3641 2FDE  
                          u3721 3254                            u3801 2C9A                            u2841 17CC  
                          u2761 1724                            u2681 15D6                            u4441 1364  
                          u4361 11CE                            u4281 102A                            u3570 201C  
                          u3490 1D8C                            u4530 29E2                            u3650 3008  
                          u3730 326E                            u3810 2CBE                            u2850 180A  
                          u2770 1738                            u2690 160C                            u2930 3088  
                          u4450 136C                            u4370 11E4                            u4290 1042  
                          u4610 18B2                            u3571 2018                            u3491 1D88  
                          u4531 29DE                            u3651 3004                            u3731 326A  
                          u3811 2CBA                            u2851 1806                            u2771 1734  
                          u2691 1608                            u2931 3084                            u4371 11E0  
                          u4291 103E                            u4611 18AE                            u3580 2030  
                          u3660 3026                            u3740 3292                            u3820 2D0E  
                          u2860 181C                            u2780 1754                            u3900 2BF2  
                          u2940 30AA                            u4460 1382                            u4380 11F2  
                          u4540 2E40                            u4700 1B54                            u4620 18FA  
                          u3581 202C                            u3661 3022                            u3741 328E  
                          u3821 2D0A                            u2861 1818                            u2781 1750  
                          u3901 2BEE                            u2941 30A6                            u4461 137E  
                          u4381 11EE                            u4541 2E3C                            u4701 1B50  
                          u4621 18F6                            u3590 204A                            u3910 3636  
                          u4470 28B0                            u3670 3042                            u3750 32D2  
                          u3830 381E                            u2870 182C                            u2790 1764  
                          u2950 3100                            u4390 1228                            u4550 2E72  
                          u4710 1BBA                            u4630 1934                            u3591 2046  
                          u3911 3632                            u4471 28AC                            u3671 303E  
                          u3751 32CE                            u3831 381A                            u2871 1828  
                          u2791 1760                            u2951 30FC                            u4391 1224  
                          u4551 2E6E                            u4711 1BB4                            u4631 1930  
                          u4800 27E0                            u3920 3664                            u4480 28E6  
                          u3680 3068                            u3760 3310                            u2880 184C  
                          u3840 2B24                            u2960 310E                            u4560 2E8E  
                          u4720 1BBC                            u4640 19DC                            u4801 27DC  
                          u3921 3660                            u4481 28E2                            u3681 3064  
                          u3761 330C                            u2881 1848                            u3841 2B20  
                          u2961 310A                            u4561 2E8A                            u4641 19D6  
                          u4810 27FE                            u3930 38D4                            u4490 2902  
                          u3690 3206                            u3770 3344                            u2890 185E  
                          u3850 2B58                            u2970 2D58                            u4570 2EA0  
                          u4730 1BD2                            u4650 19DE                            u4811 27FA  
                          u3931 38CE                            u4491 28FE                            u3691 3202  
                          u3771 3340                            u2891 185A                            u4571 2E9C  
                          u4731 1BCE                            u4820 280E                            u3780 2C42  
                          u3860 2B86                            u2980 2D76                            u4580 2EC8  
                          u4740 1C6E                            u4660 19F4                            _RCEN 007E2B  
                          u4821 280A                            u3781 2C3E                            u3861 2B82  
                          u2981 2D72                            u4581 2EC4                            u4741 1C6A  
                          u4661 19F0                            u4830 281C                            u4590 318C  
                          u3790 2C80                            u3870 2B9A                            u2990 2D9E  
                          u3950 0844                            u4670 1A24                            u4750 33A6  
                          u4831 2818                            u4591 3188                            u3791 2C7C  
                          u3871 2B96                            u3855 2B4E                            u2991 2D9A  
                          u2975 2D4E                            u3951 0840                            u4671 1A20  
                          u4751 33A2                            u4840 2856                            u4760 26D6  
                          u3880 2BC2                            u3960 0894                            u4680 1A64  
                          u4841 2852                            u4761 26D2                            u3945 38D6  
                          u3881 2BBE                            u3961 0890                            u4681 1A60  
                          u4850 2864                            u4770 26E4                            u3890 2BE2  
                          u3970 08A2                            u4690 1AA6                            u4907 3960  
                          u4851 2860                            u4771 26E0                            u3891 2BDE  
                          u3971 089E                            u4691 1AA2                            u4780 2740  
                          u3980 08B4                            u4860 2B06                            u4917 396A  
                          u4781 273C                            u3981 08B0                            u4861 2B02  
                          u4790 2796                            u3990 08FC                            u4791 2792  
                          u3991 08F8                            u4877 3516                            u4887 31E6  
                          u4897 3954                            _RSEN 007E29           _setCalibration_32V_2A 3670  
                          _dbuf 0100                            _atoi 2878                            _main 2A08  
                          _prec 00C2                            _nout 00BE                            pad@i 0018  
                          pad@p 0015                            _text 00C8                            fsr1h 000FE2  
                          fsr2h 000FDA                            indf1 000FE7                            indf2 000FDF  
                          fsr1l 000FE1                            pad@w 001A                            fsr2l 000FD9  
                 ___fpclassifyf 2D18                            prodh 000FF4                            prodl 000FF3  
                          start 0000                 ___fldiv@new_exp 0012                    ___param_bank 000000  
               __end_of_ReadI2C 31F4                           ??_LCD 0001                 __end_of_SendI2C 39AA  
                         ??_pad 0017                 __end_of_StopI2C 39B2                   ___fltol@sign1 0009  
                         ?_atoi 0008                 __end_of___fladd 188E                           ?_main 0001  
                         _ACKEN 007E2C                           _ACKDT 007E2D                 __end_of___fldiv 24B2  
               __end_of___awdiv 307A                 __end_of___flneg 3840                           STR_10 0818  
                         STR_12 0818                 __end_of___awmod 32A4                 __end_of___flmul 2118  
               __end_of___flsub 3752                 __end_of___fltol 2C14                 ___awdiv@divisor 0003  
                         _LATE0 007C68                           _LATE1 007C69                 ___awdiv@counter 0005  
                  vfpfcnvrt@fmt 0042                           _TRISD 000F95                           _TRISE 000F96  
                ReadI2C@Address 000B                           _flags 005E                           _fputc 2EEC  
                         _fputs 3752                 __end_of_isdigit 3878                           atoi@n 0015  
                         pad@fp 0011                           atoi@s 0008                           _width 00C0  
                         _putch 39C2                 __end_of_isspace 3670                 __end_of_isupper 3808  
                         tablat 000FF5                           status 000FD8                 __end_of_sprintf 361E  
                ?___fpclassifyf 0001                 __end_of_tolower 3410                 __end_of_strncmp 2EEC  
             ?_RepeatedStartI2C 0001                 __initialization 38DC                    __end_of_atoi 2A08  
                  __end_of_main 2B0E              ??_RepeatedStartI2C 0002                __end_of_ReadyI2C 394E  
                        ??_atoi 000A                          ??_main 005E                      _ReceiveI2C 38AE  
              ?_getBusVoltage_V 0028                   __activetblptr 000002                     SendI2C@data 0002  
              __end_of_StartI2C 39BA                          _ADCON1 000FC1                          ?_fputc 0001  
                        ?_fputs 000A                ___awdiv@dividend 0001                __end_of_WriteI2C 3524  
                        ?_putch 0001                __end_of_WriteLCD 399E          ?_setCalibration_32V_2A 0001  
                        _OSCCON 000FD3                          _SSPADD 000FC8                          _SSPBUF 000FC9  
               _ina219_calValue 00D7                __end_of___xxtofl 2878                       ??_ReadI2C 0009  
                     ??_SendI2C 0002                    vfprintf@cfmt 005C                          ___flge 2C14  
                        ___fleq 32A4                       ??_StopI2C 0002                       ??___fladd 0022  
                        ___wmul 3902                       ??___fldiv 0009                       ??___awdiv 0005  
                     ??___flneg 0005                       ??___awmod 0005                       ??___flmul 0017  
                     ??___flsub 0032                       ??___fltol 0005                          _efgtoa 081C  
                        _floorf 24B2                          clear_0 38E2                          clear_1 38EE  
              ___awdiv@quotient 0007                 ___awmod@divisor 0003                 ___awmod@counter 0005  
                        pad@buf 0013                    WriteI2C@Data 0004                          _strcpy 3470  
                        _strlen 3878                          fputc@c 0001                          fputs@c 000E  
                        fputs@i 000F                          fputs@s 000A                       ??_isdigit 0003  
               ReadI2C@Register 0004                 ___fpclassifyf@e 0009                 ___fpclassifyf@u 000B  
               ___fpclassifyf@x 0001                    __mediumconst 0000                       ??_isspace 0003  
                 ??_SettingsLCD 0002                __end_of_settings 370C                          tblptrh 000FF7  
                     ??_isupper 0003                          tblptrl 000FF6                          tblptru 000FF8  
                        putch@c 0001                __end_of_vfprintf 33B0                       ??_sprintf 005E  
                     ??_tolower 0009                       ??_strncmp 0007                      ___flge@ff1 0028  
                    ___flge@ff2 002C                 ??___fpclassifyf 0005                    ___xxtofl@arg 000B  
                  ___xxtofl@exp 000A                    ___xxtofl@val 0001                      ___fleq@ff1 0001  
                    ___fleq@ff2 0005                      __accesstop 0060         __end_of__initialization 38F8  
                  WriteLCD@word 0002                      ___flneg@f1 0001                   ___rparam_used 000001  
                    ___fltol@f1 0001                  __pcstackCOMRAM 0001                   __end_of_fputc 2FB6  
                 __end_of_fputs 3796                   __end_of_putch 39C4     __end_of_getShuntVoltage_raw 37D0  
                   ?_ReceiveI2C 0001                         ??_fputc 0005                         ??_fputs 000E  
                       ??_putch 0001                         LCD@data 0001                      __pbssBANK0 00AA  
                    __pbssBANK1 0100             __end_of_SettingsLCD 3988     __size_of_getShuntVoltage_mV 0054  
                     ?_ReadyI2C 0001         getShuntVoltage_mV@value 002C                      _efgtoa$322 0064  
                    _efgtoa$323 0066                      _efgtoa$332 006A                      _efgtoa$333 006C  
                    _efgtoa$334 006E                      _efgtoa$328 0068                         ?___flge 0028  
                       ?___fleq 0001                         ?___wmul 0001                       ?_StartI2C 0001  
                       ?_efgtoa 0034                         ?_floorf 001A                       ?_WriteI2C 0003  
                     ?_WriteLCD 0001                         ?_strcpy 0001                         ?_strlen 0001  
                     ?___xxtofl 0001         getShuntVoltage_raw@temp 0010              __size_of_vfpfcnvrt 0460  
          getBusVoltage_V@value 002C                         _SSPCON1 000FC6                         _SSPCON2 000FC5  
                       _SSPSTAT 000FC7                      ??_ReadyI2C 0001                         _ReadI2C 313C  
           __size_of_ReceiveI2C 002E                         _SendI2C 399E                         __Hparam 0000  
                       __Lparam 0000                         _StopI2C 39AA                 __size_of___flge 0104  
                     ?_settings 0001                 __size_of___fleq 00AA                         ___fladd 13CE  
                    ??_StartI2C 0002                         ___fldiv 2118                         ___awdiv 2FB6  
                       ___flneg 3808                         ___awmod 31F4                         ___flmul 1CEE  
                       ___flsub 370C                         ___fltol 2B0E                 __size_of___wmul 0026  
                     ?_vfprintf 0056                    __psmallconst 0800                 __size_of_efgtoa 0BB2  
               __size_of_floorf 0212                         __pcinit 38DC                      ??_WriteI2C 0008  
                    ??_WriteLCD 0002                         __ramtop 0800                         __ptext0 2A08  
                       __ptext1 35CC                         __ptext2 334E                         __ptext3 188E  
                       __ptext4 2E16                         __ptext5 081C                         __ptext6 33B0  
                       __ptext7 37D0                         __ptext8 3470                         __ptext9 307A  
                  __size_of_LCD 0024                 __size_of_strcpy 005C                 __size_of_strlen 0036  
                  __size_of_pad 00C2                         _isdigit 3840                      ??___xxtofl 0005  
              ___awmod@dividend 0001       __size_of_RepeatedStartI2C 0008                         _isspace 361E  
                       _isupper 37D0                         efgtoa@c 003A                         efgtoa@d 0078  
                       efgtoa@e 0090                         efgtoa@f 0036                         efgtoa@g 008C  
                       efgtoa@h 0082                         efgtoa@i 008A                         efgtoa@l 0086  
                       efgtoa@m 0074                         efgtoa@n 0092                         efgtoa@p 007C  
                       efgtoa@t 0070                         efgtoa@u 0094                         efgtoa@w 007F  
       ??_setCalibration_32V_2A 000B                     _SettingsLCD 3972                         atoi@neg 000E  
                       _sprintf 35CC                         _tolower 33B0                         _strncmp 2E16  
          end_of_initialization 38F8                         floorf@e 0028                         floorf@m 0024  
                       floorf@u 002A                         floorf@x 001A                   WriteI2C@bytes 0006  
                       fputc@fp 0003                   __Lmediumconst 0000                         fputs@fp 000C  
             __end_of_vfpfcnvrt 1CEE                      efgtoa@mode 0081                      efgtoa@sign 007A  
                       postdec2 000FDD                      ??_settings 0003                         postinc0 000FEE  
                       postinc1 000FE6                         postinc2 000FDE                      ??_vfprintf 005C  
                       strcpy@d 0009                         strlen@a 0003                         strcpy@s 0007  
                       strlen@s 0001                     ___fladd@grs 0029                   ___xxtofl@sign 0009  
                     _TRISBbits 000F93                  ReceiveI2C@flag 0002                     ___fldiv@grs 0014  
                   ___fldiv@rem 000D        __size_of_getBusVoltage_V 0054                     ___flmul@grs 001C  
                  _busVoltage_V 00BA                WriteI2C@Register 0003                  __end_of___flge 2D18  
                __end_of___fleq 334E                     vfpfcnvrt@ap 0044                     vfpfcnvrt@ct 0052  
                   vfpfcnvrt@fp 0040                  __end_of___wmul 3928                  __end_of_efgtoa 13CE  
                __end_of_floorf 26C4                      floorf@F524 00AA                    ??_ReceiveI2C 0002  
                __end_of_strcpy 34CC                  __end_of_strlen 38AE             start_initialization 38DC  
                   __end_of_LCD 3972                     __end_of_pad 313C           __end_of___fpclassifyf 2E16  
             __size_of_ReadyI2C 0026              __end_of_ReceiveI2C 38DC                     vfprintf@fmt 0058  
                      ??___flge 0030                        ??___fleq 0009                        ??___wmul 0005  
                      ??_efgtoa 003B                        ??_floorf 001E               _getBusVoltage_raw 3410  
             __size_of_StartI2C 0008                        ??_strcpy 0005                        ??_strlen 0003  
                     ___fladd@a 001E                       ___fladd@b 001A              ?_getBusVoltage_raw 000C  
             __size_of_WriteI2C 0058                       ___fldiv@a 0005                       ___fldiv@b 0001  
             __size_of_WriteLCD 0016                _RepeatedStartI2C 39BA                       ___flmul@a 0013  
                     ___flmul@b 000F                     __pbssCOMRAM 005E                       ___flsub@a 002E  
                     ___flsub@b 002A                   __pcstackBANK0 0060    __size_of_getShuntVoltage_raw 003A  
             __size_of___xxtofl 01B4             ??_getBusVoltage_raw 000E          getBusVoltage_raw@value 0012  
    __end_of_getShuntVoltage_mV 3578                        ?_ReadI2C 0004               ??_getBusVoltage_V 002C  
                      ?_SendI2C 0001                        ?_StopI2C 0001                        ?___fladd 001A  
                      ?___fldiv 0001                        ?___awdiv 0001                        ?___flneg 0001  
     __end_of_getBusVoltage_raw 3470                        ?___awmod 0001                        ?___flmul 000F  
                      ?___flsub 002A                        ?___fltol 0001               __size_of_settings 004C  
             __size_of_vfprintf 0062                     __smallconst 0800        _ina219_currentDivider_mA 00C7  
                      ?_isdigit 0001          _ina219_powerDivider_mW 00C6                        ?_isspace 0001  
                      ?_isupper 0001                    ?_SettingsLCD 0001  __size_of_setCalibration_32V_2A 0050  
                      ?_sprintf 0098                        ?_tolower 0007                  __size_of_fputc 00CA  
                __size_of_fputs 0044   __end_of_setCalibration_32V_2A 36C0                        ?_strncmp 0001  
                __size_of_putch 0002                  ___wmul@product 0005        getShuntVoltage_raw@value 0012  
                     _vfpfcnvrt 188E                 WriteI2C@Address 000A               ___wmul@multiplier 0001  
                     _voltage_V 00B2                      vfpfcnvrt@c 0055                      vfpfcnvrt@f 004E  
                      _ReadyI2C 3928                __size_of_ReadI2C 00B8                        __Hrparam 0000  
              __size_of_SendI2C 000C                      vfprintf@ap 005A                        __Lrparam 0000  
                    vfprintf@fp 0056                        _StartI2C 39B2      __size_of_getBusVoltage_raw 0060  
              __size_of_StopI2C 0008                __size_of___fladd 04C0                __size_of___fldiv 039A  
              __size_of___awdiv 00C4                __size_of___flneg 0038                __size_of___awmod 00B0  
              __size_of___flmul 042A                __size_of___flsub 0046                __size_of___fltol 0106  
                    ?_vfpfcnvrt 0040                        _WriteI2C 34CC                        _WriteLCD 3988  
         getBusVoltage_raw@temp 0010              ___fpclassifyf@F463 00AE                      sprintf@fmt 009A  
                      ___xxtofl 26C4                        _atoi$823 0010                        _atoi$824 0014  
                      _atoi$825 0012                __size_of_isdigit 0038                __size_of_isspace 0052  
                      __ptext10 3878                        __ptext11 3752                        __ptext20 2C14  
                      __ptext12 2EEC                        __ptext21 32A4                        __ptext13 39C2  
                      __ptext30 3972                        __ptext22 2118                        __ptext14 24B2  
                      __ptext31 3670                        __ptext23 31F4                        __ptext15 2D18  
                      __ptext40 399E                        __ptext32 34CC                        __ptext24 2FB6  
                      __ptext16 2B0E                        __ptext41 39BA                        __ptext33 3524  
                      __ptext25 2878                        __ptext17 370C                        __ptext42 38AE  
                      __ptext34 3796                        __ptext26 361E                        __ptext18 13CE  
                      __ptext43 3928                        __ptext35 3578                        __ptext27 3840  
                      __ptext19 3808                        __ptext44 26C4                        __ptext36 3410  
                      __ptext28 3902                        __ptext45 1CEE                        __ptext37 313C  
                      __ptext29 36C0                        __ptext46 3988                        __ptext38 39AA  
                      __ptext47 394E                        __ptext39 39B2                __size_of_isupper 0038  
              __size_of_sprintf 0052                __size_of_tolower 0060                      strcpy@dest 0001  
              __size_of_strncmp 00D6                   __size_of_atoi 0190                   __size_of_main 0106  
      __end_of_RepeatedStartI2C 39C2                        efgtoa@fp 0034                        efgtoa@ne 0076  
                      efgtoa@pp 0072                        efgtoa@ou 0060             _getShuntVoltage_raw 3796  
                      _settings 36C0                        _vfprintf 334E                     _isspace$854 0007  
          ?_getShuntVoltage_raw 000C                        isdigit@c 0001                 _getBusVoltage_V 3578  
          __size_of_SettingsLCD 0016                       sprintf@ap 00A2                        isspace@c 0001  
                     strcpy@src 0003                        isupper@c 0001                       strncmp@_l 0001  
                     strncmp@_r 0003              _getShuntVoltage_mV 3524                     efgtoa@nmode 007E  
                   ??_vfpfcnvrt 0046                   _vfpfcnvrt$352 004C                   _vfpfcnvrt$348 004A  
           ?_getShuntVoltage_mV 0028                 _shuntVoltage_mV 00B6                        sprintf@f 00A4  
           __CFG_FOSC$INTOSC_HS 000000                        tolower@c 0007                        sprintf@s 0098  
        __size_of___fpclassifyf 00FE                        strncmp@l 0008                        strncmp@n 0005  
                      strncmp@r 000A           ??_getShuntVoltage_raw 000E                 SettingsLCD@word 0002  
                 ___fladd@signs 0026            ??_getShuntVoltage_mV 002C                    ___fladd@aexp 0027  
                  ___fladd@bexp 0028     setCalibration_32V_2A@config 000B                ReceiveI2C@buffer 0003  
