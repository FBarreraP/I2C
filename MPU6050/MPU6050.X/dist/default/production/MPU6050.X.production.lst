

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Jul 19 10:37:43 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4550 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc   macro
    64                           	bcf	status,0
    65                           endm
    66  0000                     setc   macro
    67                           	bsf	status,0
    68                           endm
    69  0000                     clrz   macro
    70                           	bcf	status,2
    71                           endm
    72  0000                     setz   macro
    73                           	bsf	status,2
    74                           endm
    75  0000                     skipnz macro
    76                           	btfsc	status,2
    77                           endm
    78  0000                     skipz  macro
    79                           	btfss	status,2
    80                           endm
    81  0000                     skipnc macro
    82                           	btfsc	status,0
    83                           endm
    84  0000                     skipc  macro
    85                           	btfss	status,0
    86                           endm
    87  0000                     pushw macro
    88                           	movwf postinc1
    89                           endm
    90  0000                     pushf macro arg1
    91                           	movff arg1, postinc1
    92                           endm
    93  0000                     popw macro
    94                           	movf postdec1,f
    95                           	movf indf1,w
    96                           endm
    97  0000                     popf macro arg1
    98                           	movf postdec1,f
    99                           	movff indf1,arg1
   100                           endm
   101  0000                     popfc macro arg1
   102                           	movff plusw1,arg1
   103                           	decfsz fsr1,f
   104                           endm
   105  0000                     	global	__ramtop
   106                           	global	__accesstop
   107                           # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   108                           SPPDATA equ 0F62h ;# 
   109  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   110                           SPPCFG equ 0F63h ;# 
   111  0000                     # 151 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   112                           SPPEPS equ 0F64h ;# 
   113  0000                     # 225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   114                           SPPCON equ 0F65h ;# 
   115  0000                     # 251 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   116                           UFRM equ 0F66h ;# 
   117  0000                     # 258 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   118                           UFRML equ 0F66h ;# 
   119  0000                     # 336 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   120                           UFRMH equ 0F67h ;# 
   121  0000                     # 376 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   122                           UIR equ 0F68h ;# 
   123  0000                     # 432 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   124                           UIE equ 0F69h ;# 
   125  0000                     # 488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   126                           UEIR equ 0F6Ah ;# 
   127  0000                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   128                           UEIE equ 0F6Bh ;# 
   129  0000                     # 590 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   130                           USTAT equ 0F6Ch ;# 
   131  0000                     # 650 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   132                           UCON equ 0F6Dh ;# 
   133  0000                     # 701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   134                           UADDR equ 0F6Eh ;# 
   135  0000                     # 765 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   136                           UCFG equ 0F6Fh ;# 
   137  0000                     # 844 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   138                           UEP0 equ 0F70h ;# 
   139  0000                     # 952 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   140                           UEP1 equ 0F71h ;# 
   141  0000                     # 1060 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   142                           UEP2 equ 0F72h ;# 
   143  0000                     # 1168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   144                           UEP3 equ 0F73h ;# 
   145  0000                     # 1276 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   146                           UEP4 equ 0F74h ;# 
   147  0000                     # 1384 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   148                           UEP5 equ 0F75h ;# 
   149  0000                     # 1492 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   150                           UEP6 equ 0F76h ;# 
   151  0000                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   152                           UEP7 equ 0F77h ;# 
   153  0000                     # 1708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   154                           UEP8 equ 0F78h ;# 
   155  0000                     # 1784 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   156                           UEP9 equ 0F79h ;# 
   157  0000                     # 1860 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   158                           UEP10 equ 0F7Ah ;# 
   159  0000                     # 1936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   160                           UEP11 equ 0F7Bh ;# 
   161  0000                     # 2012 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   162                           UEP12 equ 0F7Ch ;# 
   163  0000                     # 2088 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   164                           UEP13 equ 0F7Dh ;# 
   165  0000                     # 2164 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   166                           UEP14 equ 0F7Eh ;# 
   167  0000                     # 2240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   168                           UEP15 equ 0F7Fh ;# 
   169  0000                     # 2316 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   170                           PORTA equ 0F80h ;# 
   171  0000                     # 2455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   172                           PORTB equ 0F81h ;# 
   173  0000                     # 2565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   174                           PORTC equ 0F82h ;# 
   175  0000                     # 2707 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   176                           PORTD equ 0F83h ;# 
   177  0000                     # 2828 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   178                           PORTE equ 0F84h ;# 
   179  0000                     # 2975 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   180                           LATA equ 0F89h ;# 
   181  0000                     # 3075 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   182                           LATB equ 0F8Ah ;# 
   183  0000                     # 3187 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   184                           LATC equ 0F8Bh ;# 
   185  0000                     # 3265 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   186                           LATD equ 0F8Ch ;# 
   187  0000                     # 3377 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   188                           LATE equ 0F8Dh ;# 
   189  0000                     # 3429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   190                           TRISA equ 0F92h ;# 
   191  0000                     # 3434 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   192                           DDRA equ 0F92h ;# 
   193  0000                     # 3627 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   194                           TRISB equ 0F93h ;# 
   195  0000                     # 3632 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   196                           DDRB equ 0F93h ;# 
   197  0000                     # 3849 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   198                           TRISC equ 0F94h ;# 
   199  0000                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   200                           DDRC equ 0F94h ;# 
   201  0000                     # 4003 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   202                           TRISD equ 0F95h ;# 
   203  0000                     # 4008 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   204                           DDRD equ 0F95h ;# 
   205  0000                     # 4225 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   206                           TRISE equ 0F96h ;# 
   207  0000                     # 4230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   208                           DDRE equ 0F96h ;# 
   209  0000                     # 4327 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   210                           OSCTUNE equ 0F9Bh ;# 
   211  0000                     # 4386 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   212                           PIE1 equ 0F9Dh ;# 
   213  0000                     # 4470 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   214                           PIR1 equ 0F9Eh ;# 
   215  0000                     # 4554 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   216                           IPR1 equ 0F9Fh ;# 
   217  0000                     # 4638 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   218                           PIE2 equ 0FA0h ;# 
   219  0000                     # 4709 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   220                           PIR2 equ 0FA1h ;# 
   221  0000                     # 4780 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   222                           IPR2 equ 0FA2h ;# 
   223  0000                     # 4851 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   224                           EECON1 equ 0FA6h ;# 
   225  0000                     # 4917 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   226                           EECON2 equ 0FA7h ;# 
   227  0000                     # 4924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   228                           EEDATA equ 0FA8h ;# 
   229  0000                     # 4931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   230                           EEADR equ 0FA9h ;# 
   231  0000                     # 4938 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   232                           RCSTA equ 0FABh ;# 
   233  0000                     # 4943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   234                           RCSTA1 equ 0FABh ;# 
   235  0000                     # 5148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   236                           TXSTA equ 0FACh ;# 
   237  0000                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   238                           TXSTA1 equ 0FACh ;# 
   239  0000                     # 5404 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   240                           TXREG equ 0FADh ;# 
   241  0000                     # 5409 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   242                           TXREG1 equ 0FADh ;# 
   243  0000                     # 5416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   244                           RCREG equ 0FAEh ;# 
   245  0000                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   246                           RCREG1 equ 0FAEh ;# 
   247  0000                     # 5428 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   248                           SPBRG equ 0FAFh ;# 
   249  0000                     # 5433 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   250                           SPBRG1 equ 0FAFh ;# 
   251  0000                     # 5440 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   252                           SPBRGH equ 0FB0h ;# 
   253  0000                     # 5447 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   254                           T3CON equ 0FB1h ;# 
   255  0000                     # 5568 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   256                           TMR3 equ 0FB2h ;# 
   257  0000                     # 5575 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   258                           TMR3L equ 0FB2h ;# 
   259  0000                     # 5582 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   260                           TMR3H equ 0FB3h ;# 
   261  0000                     # 5589 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   262                           CMCON equ 0FB4h ;# 
   263  0000                     # 5679 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   264                           CVRCON equ 0FB5h ;# 
   265  0000                     # 5764 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   266                           ECCP1AS equ 0FB6h ;# 
   267  0000                     # 5769 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   268                           CCP1AS equ 0FB6h ;# 
   269  0000                     # 5926 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   270                           ECCP1DEL equ 0FB7h ;# 
   271  0000                     # 5931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   272                           CCP1DEL equ 0FB7h ;# 
   273  0000                     # 6064 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   274                           BAUDCON equ 0FB8h ;# 
   275  0000                     # 6069 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   276                           BAUDCTL equ 0FB8h ;# 
   277  0000                     # 6244 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   278                           CCP2CON equ 0FBAh ;# 
   279  0000                     # 6308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   280                           CCPR2 equ 0FBBh ;# 
   281  0000                     # 6315 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   282                           CCPR2L equ 0FBBh ;# 
   283  0000                     # 6322 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   284                           CCPR2H equ 0FBCh ;# 
   285  0000                     # 6329 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   286                           CCP1CON equ 0FBDh ;# 
   287  0000                     # 6334 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   288                           ECCP1CON equ 0FBDh ;# 
   289  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   290                           CCPR1 equ 0FBEh ;# 
   291  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   292                           CCPR1L equ 0FBEh ;# 
   293  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   294                           CCPR1H equ 0FBFh ;# 
   295  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   296                           ADCON2 equ 0FC0h ;# 
   297  0000                     # 6583 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   298                           ADCON1 equ 0FC1h ;# 
   299  0000                     # 6668 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   300                           ADCON0 equ 0FC2h ;# 
   301  0000                     # 6787 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   302                           ADRES equ 0FC3h ;# 
   303  0000                     # 6794 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   304                           ADRESL equ 0FC3h ;# 
   305  0000                     # 6801 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   306                           ADRESH equ 0FC4h ;# 
   307  0000                     # 6808 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   308                           SSPCON2 equ 0FC5h ;# 
   309  0000                     # 6870 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   310                           SSPCON1 equ 0FC6h ;# 
   311  0000                     # 6940 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   312                           SSPSTAT equ 0FC7h ;# 
   313  0000                     # 7188 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   314                           SSPADD equ 0FC8h ;# 
   315  0000                     # 7195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   316                           SSPBUF equ 0FC9h ;# 
   317  0000                     # 7202 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   318                           T2CON equ 0FCAh ;# 
   319  0000                     # 7300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   320                           PR2 equ 0FCBh ;# 
   321  0000                     # 7305 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   322                           MEMCON equ 0FCBh ;# 
   323  0000                     # 7410 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   324                           TMR2 equ 0FCCh ;# 
   325  0000                     # 7417 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   326                           T1CON equ 0FCDh ;# 
   327  0000                     # 7520 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   328                           TMR1 equ 0FCEh ;# 
   329  0000                     # 7527 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   330                           TMR1L equ 0FCEh ;# 
   331  0000                     # 7534 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   332                           TMR1H equ 0FCFh ;# 
   333  0000                     # 7541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   334                           RCON equ 0FD0h ;# 
   335  0000                     # 7690 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   336                           WDTCON equ 0FD1h ;# 
   337  0000                     # 7718 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   338                           HLVDCON equ 0FD2h ;# 
   339  0000                     # 7723 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   340                           LVDCON equ 0FD2h ;# 
   341  0000                     # 7988 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   342                           OSCCON equ 0FD3h ;# 
   343  0000                     # 8071 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   344                           T0CON equ 0FD5h ;# 
   345  0000                     # 8141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   346                           TMR0 equ 0FD6h ;# 
   347  0000                     # 8148 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   348                           TMR0L equ 0FD6h ;# 
   349  0000                     # 8155 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   350                           TMR0H equ 0FD7h ;# 
   351  0000                     # 8162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   352                           STATUS equ 0FD8h ;# 
   353  0000                     # 8233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   354                           FSR2 equ 0FD9h ;# 
   355  0000                     # 8240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   356                           FSR2L equ 0FD9h ;# 
   357  0000                     # 8247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   358                           FSR2H equ 0FDAh ;# 
   359  0000                     # 8254 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   360                           PLUSW2 equ 0FDBh ;# 
   361  0000                     # 8261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   362                           PREINC2 equ 0FDCh ;# 
   363  0000                     # 8268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   364                           POSTDEC2 equ 0FDDh ;# 
   365  0000                     # 8275 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   366                           POSTINC2 equ 0FDEh ;# 
   367  0000                     # 8282 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   368                           INDF2 equ 0FDFh ;# 
   369  0000                     # 8289 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   370                           BSR equ 0FE0h ;# 
   371  0000                     # 8296 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   372                           FSR1 equ 0FE1h ;# 
   373  0000                     # 8303 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   374                           FSR1L equ 0FE1h ;# 
   375  0000                     # 8310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   376                           FSR1H equ 0FE2h ;# 
   377  0000                     # 8317 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   378                           PLUSW1 equ 0FE3h ;# 
   379  0000                     # 8324 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   380                           PREINC1 equ 0FE4h ;# 
   381  0000                     # 8331 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   382                           POSTDEC1 equ 0FE5h ;# 
   383  0000                     # 8338 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   384                           POSTINC1 equ 0FE6h ;# 
   385  0000                     # 8345 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   386                           INDF1 equ 0FE7h ;# 
   387  0000                     # 8352 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   388                           WREG equ 0FE8h ;# 
   389  0000                     # 8359 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   390                           FSR0 equ 0FE9h ;# 
   391  0000                     # 8366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   392                           FSR0L equ 0FE9h ;# 
   393  0000                     # 8373 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   394                           FSR0H equ 0FEAh ;# 
   395  0000                     # 8380 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   396                           PLUSW0 equ 0FEBh ;# 
   397  0000                     # 8387 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   398                           PREINC0 equ 0FECh ;# 
   399  0000                     # 8394 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   400                           POSTDEC0 equ 0FEDh ;# 
   401  0000                     # 8401 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   402                           POSTINC0 equ 0FEEh ;# 
   403  0000                     # 8408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   404                           INDF0 equ 0FEFh ;# 
   405  0000                     # 8415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   406                           INTCON3 equ 0FF0h ;# 
   407  0000                     # 8507 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   408                           INTCON2 equ 0FF1h ;# 
   409  0000                     # 8584 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   410                           INTCON equ 0FF2h ;# 
   411  0000                     # 8701 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   412                           PROD equ 0FF3h ;# 
   413  0000                     # 8708 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   414                           PRODL equ 0FF3h ;# 
   415  0000                     # 8715 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   416                           PRODH equ 0FF4h ;# 
   417  0000                     # 8722 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   418                           TABLAT equ 0FF5h ;# 
   419  0000                     # 8731 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   420                           TBLPTR equ 0FF6h ;# 
   421  0000                     # 8738 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   422                           TBLPTRL equ 0FF6h ;# 
   423  0000                     # 8745 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   424                           TBLPTRH equ 0FF7h ;# 
   425  0000                     # 8752 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   426                           TBLPTRU equ 0FF8h ;# 
   427  0000                     # 8761 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   428                           PCLAT equ 0FF9h ;# 
   429  0000                     # 8768 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   430                           PC equ 0FF9h ;# 
   431  0000                     # 8775 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   432                           PCL equ 0FF9h ;# 
   433  0000                     # 8782 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   434                           PCLATH equ 0FFAh ;# 
   435  0000                     # 8789 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   436                           PCLATU equ 0FFBh ;# 
   437  0000                     # 8796 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   438                           STKPTR equ 0FFCh ;# 
   439  0000                     # 8872 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   440                           TOS equ 0FFDh ;# 
   441  0000                     # 8879 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   442                           TOSL equ 0FFDh ;# 
   443  0000                     # 8886 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   444                           TOSH equ 0FFEh ;# 
   445  0000                     # 8893 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic18f4550.h"
   446                           TOSU equ 0FFFh ;# 
   447  0000                     	FNCALL	_main,_TestConnection
   448                           	FNCALL	_main,_WriteI2C
   449                           	FNCALL	_main,_settings
   450                           	FNCALL	_main,_settingsIMU
   451                           	FNCALL	_main,_start
   452                           	FNCALL	_start,_ReadI2C
   453                           	FNCALL	_start,_WriteLCD
   454                           	FNCALL	_start,_sprintf
   455                           	FNCALL	_settingsIMU,_WriteI2C
   456                           	FNCALL	_settingsIMU,_WriteLCD
   457                           	FNCALL	_settingsIMU,_clearLCD
   458                           	FNCALL	_WriteI2C,_SendI2C
   459                           	FNCALL	_WriteI2C,_StartI2C
   460                           	FNCALL	_WriteI2C,_StopI2C
   461                           	FNCALL	_settings,_LCD
   462                           	FNCALL	_TestConnection,_ReadI2C
   463                           	FNCALL	_TestConnection,_WriteLCD
   464                           	FNCALL	_TestConnection,_clearLCD
   465                           	FNCALL	_TestConnection,_sprintf
   466                           	FNCALL	_sprintf,_vfprintf
   467                           	FNCALL	_vfprintf,_vfpfcnvrt
   468                           	FNCALL	_vfpfcnvrt,_dtoa
   469                           	FNCALL	_vfpfcnvrt,_fputc
   470                           	FNCALL	_vfpfcnvrt,_xtoa
   471                           	FNCALL	_xtoa,_isalpha
   472                           	FNCALL	_xtoa,_isupper
   473                           	FNCALL	_xtoa,_pad
   474                           	FNCALL	_xtoa,_toupper
   475                           	FNCALL	_toupper,_islower
   476                           	FNCALL	_dtoa,___aodiv
   477                           	FNCALL	_dtoa,___aomod
   478                           	FNCALL	_dtoa,_abs
   479                           	FNCALL	_dtoa,_pad
   480                           	FNCALL	_pad,_fputc
   481                           	FNCALL	_pad,_fputs
   482                           	FNCALL	_pad,_strlen
   483                           	FNCALL	_fputs,_fputc
   484                           	FNCALL	_fputc,_putch
   485                           	FNCALL	_clearLCD,_LCD
   486                           	FNCALL	_WriteLCD,_LCD
   487                           	FNCALL	_ReadI2C,_ReceiveI2C
   488                           	FNCALL	_ReadI2C,_RepeatedStartI2C
   489                           	FNCALL	_ReadI2C,_SendI2C
   490                           	FNCALL	_ReadI2C,_StartI2C
   491                           	FNCALL	_ReadI2C,_StopI2C
   492                           	FNCALL	_StopI2C,_ReadyI2C
   493                           	FNCALL	_StartI2C,_ReadyI2C
   494                           	FNCALL	_SendI2C,_ReadyI2C
   495                           	FNCALL	_RepeatedStartI2C,_ReadyI2C
   496                           	FNCALL	_ReceiveI2C,_ReadyI2C
   497                           	FNROOT	_main
   498                           	global	_text3
   499                           	global	_text4
   500                           	global	_text2
   501                           	global	_text1
   502                           psect	idataBANK0,class=CODE,space=0,delta=1,noexec
   503                           global __pidataBANK0
   504                           __pidataBANK0:
   505  001DDB                     	file	"main.c"
   506                           	line	59
   507                           
   508                           ;initializer for _word
   509                           	db	low(066h)
   510  001DDB  66                 	db	low(061h)
   511  001DDC  61                 	db	low(062h)
   512  001DDD  62                 	db	low(069h)
   513  001DDE  69                 	db	low(061h)
   514  001DDF  61                 	db	low(06Eh)
   515  001DE0  6E                 
   516                           ;initializer for _text3
   517                           	db	low(043h)
   518  001DE1  43                 	db	low(06Fh)
   519  001DE2  6F                 	db	low(06Eh)
   520  001DE3  6E                 	db	low(065h)
   521  001DE4  65                 	db	low(078h)
   522  001DE5  78                 	db	low(061h)
   523  001DE6  61                 	db	low(06Fh)
   524  001DE7  6F                 	db	low(020h)
   525  001DE8  20                 	db	low(073h)
   526  001DE9  73                 	db	low(075h)
   527  001DEA  75                 	db	low(063h)
   528  001DEB  63                 	db	low(065h)
   529  001DEC  65                 	db	low(064h)
   530  001DED  64                 	db	low(069h)
   531  001DEE  69                 	db	low(064h)
   532  001DEF  64                 	db	low(061h)
   533  001DF0  61                 	db	low(0)
   534  001DF1  00                 
   535                           ;initializer for _text4
   536                           	db	low(043h)
   537  001DF2  43                 	db	low(06Fh)
   538  001DF3  6F                 	db	low(06Eh)
   539  001DF4  6E                 	db	low(066h)
   540  001DF5  66                 	db	low(069h)
   541  001DF6  69                 	db	low(067h)
   542  001DF7  67                 	db	low(075h)
   543  001DF8  75                 	db	low(072h)
   544  001DF9  72                 	db	low(061h)
   545  001DFA  61                 	db	low(063h)
   546  001DFB  63                 	db	low(061h)
   547  001DFC  61                 	db	low(06Fh)
   548  001DFD  6F                 	db	low(0)
   549  001DFE  00                 
   550                           ;initializer for _text2
   551                           psect	idataBANK1,class=CODE,space=0,delta=1,noexec
   552                           global __pidataBANK1
   553                           __pidataBANK1:
   554  001DB6                     	db	low(045h)
   555  001DB6  45                 	db	low(072h)
   556  001DB7  72                 	db	low(072h)
   557  001DB8  72                 	db	low(06Fh)
   558  001DB9  6F                 	db	low(020h)
   559  001DBA  20                 	db	low(063h)
   560  001DBB  63                 	db	low(06Fh)
   561  001DBC  6F                 	db	low(06Dh)
   562  001DBD  6D                 	db	low(020h)
   563  001DBE  20                 	db	low(061h)
   564  001DBF  61                 	db	low(020h)
   565  001DC0  20                 	db	low(04Dh)
   566  001DC1  4D                 	db	low(050h)
   567  001DC2  50                 	db	low(055h)
   568  001DC3  55                 	db	low(036h)
   569  001DC4  36                 	db	low(030h)
   570  001DC5  30                 	db	low(035h)
   571  001DC6  35                 	db	low(030h)
   572  001DC7  30                 	db	low(0)
   573  001DC8  00                 
   574                           ;initializer for _text1
   575                           	db	low(054h)
   576  001DC9  54                 	db	low(065h)
   577  001DCA  65                 	db	low(073h)
   578  001DCB  73                 	db	low(074h)
   579  001DCC  74                 	db	low(065h)
   580  001DCD  65                 	db	low(020h)
   581  001DCE  20                 	db	low(064h)
   582  001DCF  64                 	db	low(065h)
   583  001DD0  65                 	db	low(020h)
   584  001DD1  20                 	db	low(063h)
   585  001DD2  63                 	db	low(06Fh)
   586  001DD3  6F                 	db	low(06Eh)
   587  001DD4  6E                 	db	low(065h)
   588  001DD5  65                 	db	low(078h)
   589  001DD6  78                 	db	low(061h)
   590  001DD7  61                 	db	low(06Fh)
   591  001DD8  6F                 	db	low(03Ah)
   592  001DD9  3A                 	db	low(0)
   593  001DDA  00                 	global	_nout
   594                           	global	_width
   595                           	global	_prec
   596                           	global	_flags
   597                           	global	_raw_accelx
   598                           	global	_i
   599                           	global	_dbuf
   600                           	global	_text
   601                           	global	_GyrAccel
   602                           	global	_data
   603                           	global	_a
   604                           	global	_LATEbits
   605                           _LATEbits	set	0xF8D
   606  0000                     	global	_SSPBUF
   607                           _SSPBUF	set	0xFC9
   608  0000                     	global	_SSPCON2bits
   609                           _SSPCON2bits	set	0xFC5
   610  0000                     	global	_LATBbits
   611                           _LATBbits	set	0xF8A
   612  0000                     	global	_LATB
   613                           _LATB	set	0xF8A
   614  0000                     	global	_LATE
   615                           _LATE	set	0xF8D
   616  0000                     	global	_TRISE
   617                           _TRISE	set	0xF96
   618  0000                     	global	_LATD
   619                           _LATD	set	0xF8C
   620  0000                     	global	_TRISD
   621                           _TRISD	set	0xF95
   622  0000                     	global	_SSPCON2
   623                           _SSPCON2	set	0xFC5
   624  0000                     	global	_SSPCON1
   625                           _SSPCON1	set	0xFC6
   626  0000                     	global	_SSPSTAT
   627                           _SSPSTAT	set	0xFC7
   628  0000                     	global	_SSPADD
   629                           _SSPADD	set	0xFC8
   630  0000                     	global	_TRISBbits
   631                           _TRISBbits	set	0xF93
   632  0000                     psect	smallconst,class=SMALLCONST,space=0,reloc=2,noexec
   633                           global __psmallconst
   634                           __psmallconst:
   635  000800                     	db	0
   636  000800  00                 	
   637                           STR_2:
   638  000801                     	db	97	;'a'
   639  000801  61                 	db	120	;'x'
   640  000802  78                 	db	44
   641  000803  2C                 	db	32
   642  000804  20                 	db	97	;'a'
   643  000805  61                 	db	121	;'y'
   644  000806  79                 	db	44
   645  000807  2C                 	db	32
   646  000808  20                 	db	97	;'a'
   647  000809  61                 	db	122	;'z'
   648  00080A  7A                 	db	58	;':'
   649  00080B  3A                 	db	37
   650  00080C  25                 	db	100	;'d'
   651  00080D  64                 	db	0
   652  00080E  00                 	
   653                           STR_1:
   654  00080F                     	db	69	;'E'
   655  00080F  45                 	db	117	;'u'
   656  000810  75                 	db	32
   657  000811  20                 	db	115	;'s'
   658  000812  73                 	db	111	;'o'
   659  000813  6F                 	db	117	;'u'
   660  000814  75                 	db	58	;':'
   661  000815  3A                 	db	32
   662  000816  20                 	db	37
   663  000817  25                 	db	120	;'x'
   664  000818  78                 	db	0
   665  000819  00                 ; #config settings
   666                           global __CFG_FOSC$HS
   667                           __CFG_FOSC$HS equ 0x0
   668  0000                     global __CFG_WDT$OFF
   669                           __CFG_WDT$OFF equ 0x0
   670  0000                     global __CFG_LVP$OFF
   671                           __CFG_LVP$OFF equ 0x0
   672  0000                     	file	"C:\Users\USER\AppData\Local\Temp\sftg."
   673                           	line	#
   674                           psect	cinit,class=CODE,delta=1,reloc=2
   675                           global __pcinit
   676                           __pcinit:
   677  001A46                     global start_initialization
   678                           start_initialization:
   679  001A46                     
   680                           global __initialization
   681                           __initialization:
   682  001A46                     psect	bssBANK0,class=BANK0,space=1,noexec,lowdata
   683                           global __pbssBANK0
   684                           __pbssBANK0:
   685  000060                     	global	_byte
   686                           	global	_byte
   687                           _byte:
   688  000060                            ds      3
   689  000060                     _nout:
   690  000063                            ds      2
   691  000063                     _width:
   692  000065                            ds      2
   693  000065                     _prec:
   694  000067                            ds      2
   695  000067                     _flags:
   696  000069                            ds      2
   697  000069                     	global	_raw_accelx
   698                           _raw_accelx:
   699  00006B                            ds      2
   700  00006B                     	global	_i
   701                           _i:
   702  00006D                            ds      2
   703  00006D                     _dbuf:
   704  00006F                            ds      32
   705  00006F                     	global	_text
   706                           _text:
   707  00008F                            ds      20
   708  00008F                     	global	_GyrAccel
   709                           _GyrAccel:
   710  0000A3                            ds      14
   711  0000A3                     	global	_data
   712                           _data:
   713  0000B1                            ds      1
   714  0000B1                     	global	_a
   715                           _a:
   716  0000B2                            ds      1
   717  0000B2                     psect	dataBANK0,class=BANK0,space=1,noexec,lowdata
   718                           global __pdataBANK0
   719                           __pdataBANK0:
   720  0000B3                     	file	"main.c"
   721                           	line	59
   722                           	global	_word
   723                           	global	_word
   724                           _word:
   725  0000B3                            ds      6
   726  0000B3                     psect	dataBANK0
   727                           	file	"main.c"
   728                           	line	59
   729                           	global	_text3
   730                           _text3:
   731  0000B9                            ds      17
   732  0000B9                     psect	dataBANK0
   733                           	file	"main.c"
   734                           	line	59
   735                           	global	_text4
   736                           _text4:
   737  0000CA                            ds      13
   738  0000CA                     psect	dataBANK1,class=BANK1,space=1,noexec,lowdata
   739                           global __pdataBANK1
   740                           __pdataBANK1:
   741  000100                     	file	"main.c"
   742                           	line	59
   743                           	global	_text2
   744                           _text2:
   745  000100                            ds      19
   746  000100                     psect	dataBANK1
   747                           	file	"main.c"
   748                           	line	59
   749                           	global	_text1
   750                           _text1:
   751  000113                            ds      18
   752  000113                     	file	"C:\Users\USER\AppData\Local\Temp\sftg."
   753                           	line	#
   754                           psect	cinit
   755                           ; Initialize objects allocated to BANK1 (37 bytes)
   756                           	global __pidataBANK1
   757                           	; load TBLPTR registers with __pidataBANK1
   758                           	movlw	low (__pidataBANK1)
   759  001A46  0EB6               	movwf	tblptrl
   760  001A48  6EF6               	movlw	high(__pidataBANK1)
   761  001A4A  0E1D               	movwf	tblptrh
   762  001A4C  6EF7               	movlw	low highword(__pidataBANK1)
   763  001A4E  0E00               	movwf	tblptru
   764  001A50  6EF8               	lfsr	0,__pdataBANK1
   765  001A52  EE01  F000         	lfsr	1,37
   766  001A56  EE10 F025          	copy_data0:
   767  001A5A                     	tblrd	*+
   768  001A5A  0009               	movff	tablat, postinc0
   769  001A5C  CFF5 FFEE          	movf	postdec1,w
   770  001A60  50E5               	movf	fsr1l,w
   771  001A62  50E1               	bnz	copy_data0
   772  001A64  E1FA               ; Initialize objects allocated to BANK0 (36 bytes)
   773                           	global __pidataBANK0
   774                           	; load TBLPTR registers with __pidataBANK0
   775                           	movlw	low (__pidataBANK0)
   776  001A66  0EDB               	movwf	tblptrl
   777  001A68  6EF6               	movlw	high(__pidataBANK0)
   778  001A6A  0E1D               	movwf	tblptrh
   779  001A6C  6EF7               	movlw	low highword(__pidataBANK0)
   780  001A6E  0E00               	movwf	tblptru
   781  001A70  6EF8               	lfsr	0,__pdataBANK0
   782  001A72  EE00  F0B3         	lfsr	1,36
   783  001A76  EE10 F024          	copy_data1:
   784  001A7A                     	tblrd	*+
   785  001A7A  0009               	movff	tablat, postinc0
   786  001A7C  CFF5 FFEE          	movf	postdec1,w
   787  001A80  50E5               	movf	fsr1l,w
   788  001A82  50E1               	bnz	copy_data1
   789  001A84  E1FA               	line	#
   790                           ; Clear objects allocated to BANK0 (83 bytes)
   791                           	global __pbssBANK0
   792                           lfsr	0,__pbssBANK0
   793  001A86  EE00  F060         movlw	83
   794  001A8A  0E53               clear_0:
   795  001A8C                     clrf	postinc0,c
   796  001A8C  6AEE               decf	wreg
   797  001A8E  06E8               bnz	clear_0
   798  001A90  E1FD               psect cinit,class=CODE,delta=1
   799                           global end_of_initialization,__end_of__initialization
   800                           
   801                           ;End of C runtime variable initialization code
   802                           
   803                           end_of_initialization:
   804  001A92                     __end_of__initialization:
   805  001A92                     	GLOBAL	__Lsmallconst
   806                           	movlw	low highword(__Lsmallconst)
   807  001A92  0E00               	movwf	tblptru
   808  001A94  6EF8               	movlw	high(__Lsmallconst)
   809  001A96  0E08               	movwf	tblptrh
   810  001A98  6EF7               movlb 0
   811  001A9A  0100               goto _main	;jump to C main() function
   812  001A9C  EFA5  F00E         psect	cstackBANK0,class=BANK0,space=1,noexec
   813                           global __pcstackBANK0
   814                           __pcstackBANK0:
   815  0000D7                     	global	?_vfprintf
   816                           ?_vfprintf:	; 2 bytes @ 0x0
   817  0000D7                     	global	vfprintf@fp
   818                           vfprintf@fp:	; 2 bytes @ 0x0
   819  0000D7                     	ds   2
   820  0000D7                     	global	vfprintf@fmt
   821                           vfprintf@fmt:	; 2 bytes @ 0x2
   822  0000D9                     	ds   2
   823  0000D9                     	global	vfprintf@ap
   824                           vfprintf@ap:	; 2 bytes @ 0x4
   825  0000DB                     	ds   2
   826  0000DB                     	global	?_sprintf
   827                           ?_sprintf:	; 2 bytes @ 0x6
   828  0000DD                     	global	sprintf@s
   829                           sprintf@s:	; 2 bytes @ 0x6
   830  0000DD                     	ds   2
   831  0000DD                     	global	sprintf@fmt
   832                           sprintf@fmt:	; 2 bytes @ 0x8
   833  0000DF                     	ds   4
   834  0000DF                     	global	sprintf@ret
   835                           sprintf@ret:	; 2 bytes @ 0xC
   836  0000E3                     	ds   2
   837  0000E3                     	global	sprintf@ap
   838                           sprintf@ap:	; 2 bytes @ 0xE
   839  0000E5                     	ds   2
   840  0000E5                     	global	sprintf@f
   841                           sprintf@f:	; 6 bytes @ 0x10
   842  0000E7                     	ds   6
   843  0000E7                     ??_TestConnection:	; 1 bytes @ 0x16
   844  0000ED                     ??_start:	; 1 bytes @ 0x16
   845  0000ED                     	ds   2
   846  0000ED                     psect	cstackCOMRAM,class=COMRAM,space=1,noexec
   847                           global __pcstackCOMRAM
   848                           __pcstackCOMRAM:
   849  000001                     ?_settings:	; 1 bytes @ 0x0
   850  000001                     ?_TestConnection:	; 1 bytes @ 0x0
   851  000001                     ?_settingsIMU:	; 1 bytes @ 0x0
   852  000001                     ?_start:	; 1 bytes @ 0x0
   853  000001                     ?_LCD:	; 1 bytes @ 0x0
   854  000001                     ??_LCD:	; 1 bytes @ 0x0
   855  000001                     ?_clearLCD:	; 1 bytes @ 0x0
   856  000001                     ?_StartI2C:	; 1 bytes @ 0x0
   857  000001                     ?_SendI2C:	; 1 bytes @ 0x0
   858  000001                     ?_StopI2C:	; 1 bytes @ 0x0
   859  000001                     ?_RepeatedStartI2C:	; 1 bytes @ 0x0
   860  000001                     ?_ReceiveI2C:	; 1 bytes @ 0x0
   861  000001                     ?_ReadyI2C:	; 1 bytes @ 0x0
   862  000001                     ??_ReadyI2C:	; 1 bytes @ 0x0
   863  000001                     ?_putch:	; 1 bytes @ 0x0
   864  000001                     ??_putch:	; 1 bytes @ 0x0
   865  000001                     ?_main:	; 1 bytes @ 0x0
   866  000001                     ?_fputc:	; 2 bytes @ 0x0
   867  000001                     	global	?_strlen
   868                           ?_strlen:	; 2 bytes @ 0x0
   869  000001                     	global	?_isupper
   870                           ?_isupper:	; 2 bytes @ 0x0
   871  000001                     	global	?_isalpha
   872                           ?_isalpha:	; 2 bytes @ 0x0
   873  000001                     	global	?_islower
   874                           ?_islower:	; 2 bytes @ 0x0
   875  000001                     	global	?___aodiv
   876                           ?___aodiv:	; 8 bytes @ 0x0
   877  000001                     	global	?___aomod
   878                           ?___aomod:	; 8 bytes @ 0x0
   879  000001                     putch@c:	; 1 bytes @ 0x0
   880  000001                     	global	isalpha@c
   881                           isalpha@c:	; 2 bytes @ 0x0
   882  000001                     	global	isupper@c
   883                           isupper@c:	; 2 bytes @ 0x0
   884  000001                     	global	fputc@c
   885                           fputc@c:	; 2 bytes @ 0x0
   886  000001                     	global	strlen@s
   887                           strlen@s:	; 2 bytes @ 0x0
   888  000001                     	global	islower@c
   889                           islower@c:	; 2 bytes @ 0x0
   890  000001                     	global	___aodiv@dividend
   891                           ___aodiv@dividend:	; 8 bytes @ 0x0
   892  000001                     	global	___aomod@dividend
   893                           ___aomod@dividend:	; 8 bytes @ 0x0
   894  000001                     	ds   1
   895  000001                     ??_StartI2C:	; 1 bytes @ 0x1
   896  000002                     ??_SendI2C:	; 1 bytes @ 0x1
   897  000002                     ??_StopI2C:	; 1 bytes @ 0x1
   898  000002                     ??_RepeatedStartI2C:	; 1 bytes @ 0x1
   899  000002                     ??_ReceiveI2C:	; 1 bytes @ 0x1
   900  000002                     	global	SendI2C@data
   901                           SendI2C@data:	; 1 bytes @ 0x1
   902  000002                     	global	LCD@data
   903                           LCD@data:	; 1 bytes @ 0x1
   904  000002                     	ds   1
   905  000002                     ??_settings:	; 1 bytes @ 0x2
   906  000003                     ?_WriteI2C:	; 1 bytes @ 0x2
   907  000003                     ??_clearLCD:	; 1 bytes @ 0x2
   908  000003                     ?_WriteLCD:	; 1 bytes @ 0x2
   909  000003                     ??_strlen:	; 1 bytes @ 0x2
   910  000003                     ??_isupper:	; 1 bytes @ 0x2
   911  000003                     ??_isalpha:	; 1 bytes @ 0x2
   912  000003                     ??_islower:	; 1 bytes @ 0x2
   913  000003                     	global	WriteI2C@Register
   914                           WriteI2C@Register:	; 1 bytes @ 0x2
   915  000003                     	global	ReceiveI2C@flag
   916                           ReceiveI2C@flag:	; 1 bytes @ 0x2
   917  000003                     	global	WriteLCD@a
   918                           WriteLCD@a:	; 2 bytes @ 0x2
   919  000003                     	global	fputc@fp
   920                           fputc@fp:	; 2 bytes @ 0x2
   921  000003                     	ds   1
   922  000003                     	global	ReceiveI2C@buffer
   923                           ReceiveI2C@buffer:	; 1 bytes @ 0x3
   924  000004                     	global	WriteI2C@Data
   925                           WriteI2C@Data:	; 2 bytes @ 0x3
   926  000004                     	ds   1
   927  000004                     ?_ReadI2C:	; 1 bytes @ 0x4
   928  000005                     ??_fputc:	; 1 bytes @ 0x4
   929  000005                     	global	ReadI2C@Register
   930                           ReadI2C@Register:	; 1 bytes @ 0x4
   931  000005                     	global	WriteLCD@DDRAM_RAW
   932                           WriteLCD@DDRAM_RAW:	; 1 bytes @ 0x4
   933  000005                     	global	strlen@a
   934                           strlen@a:	; 2 bytes @ 0x4
   935  000005                     	ds   1
   936  000005                     	global	WriteI2C@Ndatos
   937                           WriteI2C@Ndatos:	; 2 bytes @ 0x5
   938  000006                     	global	ReadI2C@Nbytes
   939                           ReadI2C@Nbytes:	; 2 bytes @ 0x5
   940  000006                     	global	WriteLCD@Size
   941                           WriteLCD@Size:	; 2 bytes @ 0x5
   942  000006                     	ds   1
   943  000006                     	global	?_toupper
   944                           ?_toupper:	; 2 bytes @ 0x6
   945  000007                     	global	toupper@c
   946                           toupper@c:	; 2 bytes @ 0x6
   947  000007                     	ds   1
   948  000007                     ??_WriteI2C:	; 1 bytes @ 0x7
   949  000008                     ??_WriteLCD:	; 1 bytes @ 0x7
   950  000008                     	global	ReadI2C@Data
   951                           ReadI2C@Data:	; 2 bytes @ 0x7
   952  000008                     	ds   1
   953  000008                     ??_toupper:	; 1 bytes @ 0x8
   954  000009                     	global	___aodiv@divisor
   955                           ___aodiv@divisor:	; 8 bytes @ 0x8
   956  000009                     	global	___aomod@divisor
   957                           ___aomod@divisor:	; 8 bytes @ 0x8
   958  000009                     	ds   1
   959  000009                     ??_ReadI2C:	; 1 bytes @ 0x9
   960  00000A                     ?_fputs:	; 2 bytes @ 0x9
   961  00000A                     	global	WriteI2C@Address
   962                           WriteI2C@Address:	; 1 bytes @ 0x9
   963  00000A                     	global	fputs@s
   964                           fputs@s:	; 2 bytes @ 0x9
   965  00000A                     	ds   1
   966  00000A                     ??_settingsIMU:	; 1 bytes @ 0xA
   967  00000B                     	ds   1
   968  00000B                     	global	ReadI2C@Address
   969                           ReadI2C@Address:	; 1 bytes @ 0xB
   970  00000C                     	global	fputs@fp
   971                           fputs@fp:	; 2 bytes @ 0xB
   972  00000C                     	ds   1
   973  00000C                     	global	_toupper$933
   974                           _toupper$933:	; 2 bytes @ 0xC
   975  00000D                     	ds   1
   976  00000D                     ??_fputs:	; 1 bytes @ 0xD
   977  00000E                     	global	fputs@c
   978                           fputs@c:	; 1 bytes @ 0xD
   979  00000E                     	ds   1
   980  00000E                     	global	fputs@i
   981                           fputs@i:	; 2 bytes @ 0xE
   982  00000F                     	ds   2
   983  00000F                     ??___aodiv:	; 1 bytes @ 0x10
   984  000011                     ??___aomod:	; 1 bytes @ 0x10
   985  000011                     	global	?_pad
   986                           ?_pad:	; 2 bytes @ 0x10
   987  000011                     	global	___aodiv@counter
   988                           ___aodiv@counter:	; 1 bytes @ 0x10
   989  000011                     	global	___aomod@counter
   990                           ___aomod@counter:	; 1 bytes @ 0x10
   991  000011                     	global	pad@fp
   992                           pad@fp:	; 2 bytes @ 0x10
   993  000011                     	ds   1
   994  000011                     	global	___aodiv@sign
   995                           ___aodiv@sign:	; 1 bytes @ 0x11
   996  000012                     	global	___aomod@sign
   997                           ___aomod@sign:	; 1 bytes @ 0x11
   998  000012                     	ds   1
   999  000012                     	global	?_abs
  1000                           ?_abs:	; 2 bytes @ 0x12
  1001  000013                     	global	pad@buf
  1002                           pad@buf:	; 2 bytes @ 0x12
  1003  000013                     	global	abs@a
  1004                           abs@a:	; 2 bytes @ 0x12
  1005  000013                     	global	___aodiv@quotient
  1006                           ___aodiv@quotient:	; 8 bytes @ 0x12
  1007  000013                     	ds   2
  1008  000013                     ??_abs:	; 1 bytes @ 0x14
  1009  000015                     	global	pad@p
  1010                           pad@p:	; 2 bytes @ 0x14
  1011  000015                     	ds   2
  1012  000015                     ??_pad:	; 1 bytes @ 0x16
  1013  000017                     	ds   1
  1014  000017                     	global	pad@i
  1015                           pad@i:	; 2 bytes @ 0x17
  1016  000018                     	ds   2
  1017  000018                     	global	pad@w
  1018                           pad@w:	; 2 bytes @ 0x19
  1019  00001A                     	ds   2
  1020  00001A                     	global	?_dtoa
  1021                           ?_dtoa:	; 2 bytes @ 0x1B
  1022  00001C                     	global	?_xtoa
  1023                           ?_xtoa:	; 2 bytes @ 0x1B
  1024  00001C                     	global	dtoa@fp
  1025                           dtoa@fp:	; 2 bytes @ 0x1B
  1026  00001C                     	global	xtoa@fp
  1027                           xtoa@fp:	; 2 bytes @ 0x1B
  1028  00001C                     	ds   2
  1029  00001C                     	global	dtoa@d
  1030                           dtoa@d:	; 8 bytes @ 0x1D
  1031  00001E                     	global	xtoa@d
  1032                           xtoa@d:	; 8 bytes @ 0x1D
  1033  00001E                     	ds   8
  1034  00001E                     ??_dtoa:	; 1 bytes @ 0x25
  1035  000026                     	global	xtoa@x
  1036                           xtoa@x:	; 1 bytes @ 0x25
  1037  000026                     	ds   1
  1038  000026                     ??_xtoa:	; 1 bytes @ 0x26
  1039  000027                     	ds   7
  1040  000027                     	global	_dtoa$379
  1041                           _dtoa$379:	; 2 bytes @ 0x2D
  1042  00002E                     	ds   1
  1043  00002E                     	global	_xtoa$390
  1044                           _xtoa$390:	; 2 bytes @ 0x2E
  1045  00002F                     	ds   1
  1046  00002F                     	global	dtoa@p
  1047                           dtoa@p:	; 2 bytes @ 0x2F
  1048  000030                     	ds   1
  1049  000030                     	global	_xtoa$391
  1050                           _xtoa$391:	; 2 bytes @ 0x30
  1051  000031                     	ds   1
  1052  000031                     	global	dtoa@w
  1053                           dtoa@w:	; 2 bytes @ 0x31
  1054  000032                     	ds   1
  1055  000032                     	global	xtoa@p
  1056                           xtoa@p:	; 2 bytes @ 0x32
  1057  000033                     	ds   1
  1058  000033                     	global	dtoa@s
  1059                           dtoa@s:	; 2 bytes @ 0x33
  1060  000034                     	ds   1
  1061  000034                     	global	xtoa@w
  1062                           xtoa@w:	; 2 bytes @ 0x34
  1063  000035                     	ds   1
  1064  000035                     	global	dtoa@n
  1065                           dtoa@n:	; 8 bytes @ 0x35
  1066  000036                     	ds   1
  1067  000036                     	global	xtoa@n
  1068                           xtoa@n:	; 8 bytes @ 0x36
  1069  000037                     	ds   7
  1070  000037                     	global	dtoa@i
  1071                           dtoa@i:	; 2 bytes @ 0x3D
  1072  00003E                     	ds   1
  1073  00003E                     	global	xtoa@i
  1074                           xtoa@i:	; 2 bytes @ 0x3E
  1075  00003F                     	ds   2
  1076  00003F                     	global	xtoa@c
  1077                           xtoa@c:	; 2 bytes @ 0x40
  1078  000041                     	ds   2
  1079  000041                     	global	?_vfpfcnvrt
  1080                           ?_vfpfcnvrt:	; 2 bytes @ 0x42
  1081  000043                     	global	vfpfcnvrt@fp
  1082                           vfpfcnvrt@fp:	; 2 bytes @ 0x42
  1083  000043                     	ds   2
  1084  000043                     	global	vfpfcnvrt@fmt
  1085                           vfpfcnvrt@fmt:	; 2 bytes @ 0x44
  1086  000045                     	ds   2
  1087  000045                     	global	vfpfcnvrt@ap
  1088                           vfpfcnvrt@ap:	; 2 bytes @ 0x46
  1089  000047                     	ds   2
  1090  000047                     ??_vfpfcnvrt:	; 1 bytes @ 0x48
  1091  000049                     	ds   4
  1092  000049                     	global	vfpfcnvrt@ll
  1093                           vfpfcnvrt@ll:	; 8 bytes @ 0x4C
  1094  00004D                     	ds   8
  1095  00004D                     	global	vfpfcnvrt@llu
  1096                           vfpfcnvrt@llu:	; 8 bytes @ 0x54
  1097  000055                     	ds   8
  1098  000055                     	global	vfpfcnvrt@c
  1099                           vfpfcnvrt@c:	; 1 bytes @ 0x5C
  1100  00005D                     	ds   1
  1101  00005D                     ??_vfprintf:	; 1 bytes @ 0x5D
  1102  00005E                     	global	vfprintf@cfmt
  1103                           vfprintf@cfmt:	; 2 bytes @ 0x5D
  1104  00005E                     	ds   2
  1105  00005E                     ??_sprintf:	; 1 bytes @ 0x5F
  1106  000060                     ??_main:	; 1 bytes @ 0x5F
  1107  000060                     ;!
  1108                           ;!Data Sizes:
  1109                           ;!    Strings     25
  1110                           ;!    Constant    0
  1111                           ;!    Data        73
  1112                           ;!    BSS         83
  1113                           ;!    Persistent  0
  1114                           ;!    Stack       0
  1115                           ;!
  1116                           ;!Auto Spaces:
  1117                           ;!    Space          Size  Autos    Used
  1118                           ;!    COMRAM           95     95      95
  1119                           ;!    BANK0           160     24     143
  1120                           ;!    BANK1           256      0      37
  1121                           ;!    BANK2           256      0       0
  1122                           ;!    BANK3           256      0       0
  1123                           ;!    BANK4           256      0       0
  1124                           ;!    BANK5           256      0       0
  1125                           ;!    BANK6           256      0       0
  1126                           ;!    BANK7           256      0       0
  1127                           
  1128                           ;!
  1129                           ;!Pointer List with Targets:
  1130                           ;!
  1131                           ;!    strlen@s	PTR const unsigned char  size(2) Largest target is 32
  1132                           ;!		 -> dbuf(BANK0[32]), 
  1133                           ;!
  1134                           ;!    strlen@a	PTR const unsigned char  size(2) Largest target is 32
  1135                           ;!		 -> dbuf(BANK0[32]), 
  1136                           ;!
  1137                           ;!    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
  1138                           ;!		 -> STR_2(CODE[14]), STR_1(CODE[11]), 
  1139                           ;!
  1140                           ;!    sprintf@s	PTR unsigned char  size(2) Largest target is 20
  1141                           ;!		 -> text(BANK0[20]), 
  1142                           ;!
  1143                           ;!    sprintf@ap	PTR void [1] size(2) Largest target is 2
  1144                           ;!		 -> ?_sprintf(BANK0[2]), 
  1145                           ;!
  1146                           ;!    f.buffer	PTR unsigned char  size(2) Largest target is 20
  1147                           ;!		 -> text(BANK0[20]), 
  1148                           ;!
  1149                           ;!    fputs@s	PTR const unsigned char  size(2) Largest target is 32
  1150                           ;!		 -> dbuf(BANK0[32]), 
  1151                           ;!
  1152                           ;!    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
  1153                           ;!		 -> sprintf@f(BANK0[6]), 
  1154                           ;!
  1155                           ;!    S870_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
  1156                           ;!		 -> text(BANK0[20]), 
  1157                           ;!
  1158                           ;!    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
  1159                           ;!		 -> text(BANK0[20]), 
  1160                           ;!
  1161                           ;!    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
  1162                           ;!		 -> sprintf@f(BANK0[6]), 
  1163                           ;!
  1164                           ;!    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
  1165                           ;!		 -> sprintf@ap(BANK0[2]), 
  1166                           ;!
  1167                           ;!    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
  1168                           ;!		 -> sprintf@f(BANK0[6]), 
  1169                           ;!
  1170                           ;!    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
  1171                           ;!		 -> STR_2(CODE[14]), STR_1(CODE[11]), 
  1172                           ;!
  1173                           ;!    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
  1174                           ;!		 -> STR_2(CODE[14]), STR_1(CODE[11]), 
  1175                           ;!
  1176                           ;!    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
  1177                           ;!		 -> sprintf@f(BANK0[6]), 
  1178                           ;!
  1179                           ;!    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
  1180                           ;!		 -> sprintf@ap(BANK0[2]), 
  1181                           ;!
  1182                           ;!    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
  1183                           ;!		 -> vfprintf@cfmt(COMRAM[2]), 
  1184                           ;!
  1185                           ;!    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
  1186                           ;!		 -> sprintf@f(BANK0[6]), 
  1187                           ;!
  1188                           ;!    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
  1189                           ;!		 -> sprintf@f(BANK0[6]), 
  1190                           ;!
  1191                           ;!    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
  1192                           ;!		 -> sprintf@f(BANK0[6]), 
  1193                           ;!
  1194                           ;!    pad@buf	PTR unsigned char  size(2) Largest target is 32
  1195                           ;!		 -> dbuf(BANK0[32]), 
  1196                           ;!
  1197                           ;!    WriteLCD@a	PTR unsigned char  size(2) Largest target is 20
  1198                           ;!		 -> text4(BANK0[13]), text3(BANK0[17]), text(BANK0[20]), text2(BANK1[19]), 
  1199                           ;!		 -> text1(BANK1[18]), 
  1200                           ;!
  1201                           ;!    ReadI2C@Data	PTR unsigned char  size(2) Largest target is 14
  1202                           ;!		 -> GyrAccel(BANK0[14]), data(BANK0[1]), 
  1203                           ;!
  1204                           ;!    WriteI2C@Data	PTR unsigned char  size(2) Largest target is 1
  1205                           ;!		 -> a(BANK0[1]), 
  1206                           ;!
  1207                           
  1208                           
  1209                           ;!
  1210                           ;!Critical Paths under _main in COMRAM
  1211                           ;!
  1212                           ;!    _settingsIMU->_WriteI2C
  1213                           ;!    _WriteI2C->_SendI2C
  1214                           ;!    _settings->_LCD
  1215                           ;!    _sprintf->_vfprintf
  1216                           ;!    _vfprintf->_vfpfcnvrt
  1217                           ;!    _vfpfcnvrt->_xtoa
  1218                           ;!    _xtoa->_pad
  1219                           ;!    _toupper->_islower
  1220                           ;!    _dtoa->_pad
  1221                           ;!    _pad->_fputs
  1222                           ;!    _fputs->_fputc
  1223                           ;!    _abs->___aomod
  1224                           ;!    _clearLCD->_LCD
  1225                           ;!    _WriteLCD->_LCD
  1226                           ;!    _ReadI2C->_ReceiveI2C
  1227                           ;!    _StopI2C->_ReadyI2C
  1228                           ;!    _StartI2C->_ReadyI2C
  1229                           ;!    _SendI2C->_ReadyI2C
  1230                           ;!    _RepeatedStartI2C->_ReadyI2C
  1231                           ;!    _ReceiveI2C->_ReadyI2C
  1232                           ;!
  1233                           ;!Critical Paths under _main in BANK0
  1234                           ;!
  1235                           ;!    _main->_TestConnection
  1236                           ;!    _main->_start
  1237                           ;!    _start->_sprintf
  1238                           ;!    _TestConnection->_sprintf
  1239                           ;!    _sprintf->_vfprintf
  1240                           ;!
  1241                           ;!Critical Paths under _main in BANK1
  1242                           ;!
  1243                           ;!    None.
  1244                           ;!
  1245                           ;!Critical Paths under _main in BANK2
  1246                           ;!
  1247                           ;!    None.
  1248                           ;!
  1249                           ;!Critical Paths under _main in BANK3
  1250                           ;!
  1251                           ;!    None.
  1252                           ;!
  1253                           ;!Critical Paths under _main in BANK4
  1254                           ;!
  1255                           ;!    None.
  1256                           ;!
  1257                           ;!Critical Paths under _main in BANK5
  1258                           ;!
  1259                           ;!    None.
  1260                           ;!
  1261                           ;!Critical Paths under _main in BANK6
  1262                           ;!
  1263                           ;!    None.
  1264                           ;!
  1265                           ;!Critical Paths under _main in BANK7
  1266                           ;!
  1267                           ;!    None.
  1268                           
  1269 ;;
  1270 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1271 ;;
  1272                           
  1273                           ;!
  1274                           ;!Call Graph Tables:
  1275                           ;!
  1276                           ;! ---------------------------------------------------------------------------------
  1277                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1278                           ;! ---------------------------------------------------------------------------------
  1279                           ;! (0) _main                                                 0     0      0   30407
  1280                           ;!                     _TestConnection
  1281                           ;!                           _WriteI2C
  1282                           ;!                           _settings
  1283                           ;!                        _settingsIMU
  1284                           ;!                              _start
  1285                           ;! ---------------------------------------------------------------------------------
  1286                           ;! (1) _start                                                2     2      0   13647
  1287                           ;!                                             22 BANK0      2     2      0
  1288                           ;!                            _ReadI2C
  1289                           ;!                           _WriteLCD
  1290                           ;!                            _sprintf
  1291                           ;! ---------------------------------------------------------------------------------
  1292                           ;! (1) _settingsIMU                                          0     0      0    2274
  1293                           ;!                           _WriteI2C
  1294                           ;!                           _WriteLCD
  1295                           ;!                           _clearLCD
  1296                           ;! ---------------------------------------------------------------------------------
  1297                           ;! (2) _WriteI2C                                             8     3      5     795
  1298                           ;!                                              2 COMRAM     8     3      5
  1299                           ;!                            _SendI2C
  1300                           ;!                           _StartI2C
  1301                           ;!                            _StopI2C
  1302                           ;! ---------------------------------------------------------------------------------
  1303                           ;! (1) _settings                                             0     0      0      22
  1304                           ;!                                _LCD
  1305                           ;! ---------------------------------------------------------------------------------
  1306                           ;! (1) _TestConnection                                       2     2      0   13669
  1307                           ;!                                             22 BANK0      2     2      0
  1308                           ;!                            _ReadI2C
  1309                           ;!                           _WriteLCD
  1310                           ;!                           _clearLCD
  1311                           ;!                            _sprintf
  1312                           ;! ---------------------------------------------------------------------------------
  1313                           ;! (2) _sprintf                                             16    10      6   11512
  1314                           ;!                                              6 BANK0     16    10      6
  1315                           ;!                           _vfprintf
  1316                           ;! ---------------------------------------------------------------------------------
  1317                           ;! (3) _vfprintf                                             8     2      6   11007
  1318                           ;!                                             93 COMRAM     2     2      0
  1319                           ;!                                              0 BANK0      6     0      6
  1320                           ;!                          _vfpfcnvrt
  1321                           ;! ---------------------------------------------------------------------------------
  1322                           ;! (4) _vfpfcnvrt                                           44    38      6   10648
  1323                           ;!                                             66 COMRAM    27    21      6
  1324                           ;!                               _dtoa
  1325                           ;!                              _fputc
  1326                           ;!                               _xtoa
  1327                           ;! ---------------------------------------------------------------------------------
  1328                           ;! (5) _xtoa                                                39    28     11    4491
  1329                           ;!                                             27 COMRAM    39    28     11
  1330                           ;!                            _isalpha
  1331                           ;!                            _isupper
  1332                           ;!                                _pad
  1333                           ;!                            _toupper
  1334                           ;! ---------------------------------------------------------------------------------
  1335                           ;! (6) _toupper                                              8     6      2     412
  1336                           ;!                                              6 COMRAM     8     6      2
  1337                           ;!                            _islower
  1338                           ;! ---------------------------------------------------------------------------------
  1339                           ;! (7) _islower                                              6     4      2     161
  1340                           ;!                                              0 COMRAM     6     4      2
  1341                           ;! ---------------------------------------------------------------------------------
  1342                           ;! (6) _isupper                                              6     4      2     161
  1343                           ;!                                              0 COMRAM     6     4      2
  1344                           ;! ---------------------------------------------------------------------------------
  1345                           ;! (6) _isalpha                                              6     4      2     161
  1346                           ;!                                              0 COMRAM     6     4      2
  1347                           ;! ---------------------------------------------------------------------------------
  1348                           ;! (5) _dtoa                                                36    26     10    4586
  1349                           ;!                                             27 COMRAM    36    26     10
  1350                           ;!                            ___aodiv
  1351                           ;!                            ___aomod
  1352                           ;!                                _abs
  1353                           ;!                                _pad
  1354                           ;! ---------------------------------------------------------------------------------
  1355                           ;! (6) _pad                                                 11     5      6    2937
  1356                           ;!                                             16 COMRAM    11     5      6
  1357                           ;!                              _fputc
  1358                           ;!                              _fputs
  1359                           ;!                             _strlen
  1360                           ;! ---------------------------------------------------------------------------------
  1361                           ;! (7) _strlen                                               6     4      2     166
  1362                           ;!                                              0 COMRAM     6     4      2
  1363                           ;! ---------------------------------------------------------------------------------
  1364                           ;! (7) _fputs                                                7     3      4    1235
  1365                           ;!                                              9 COMRAM     7     3      4
  1366                           ;!                              _fputc
  1367                           ;! ---------------------------------------------------------------------------------
  1368                           ;! (8) _fputc                                                9     5      4     834
  1369                           ;!                                              0 COMRAM     9     5      4
  1370                           ;!                              _putch
  1371                           ;! ---------------------------------------------------------------------------------
  1372                           ;! (9) _putch                                                1     1      0       0
  1373                           ;! ---------------------------------------------------------------------------------
  1374                           ;! (6) _abs                                                  4     2      2     142
  1375                           ;!                                             18 COMRAM     4     2      2
  1376                           ;!                            ___aomod (ARG)
  1377                           ;! ---------------------------------------------------------------------------------
  1378                           ;! (6) ___aomod                                             18     2     16     448
  1379                           ;!                                              0 COMRAM    18     2     16
  1380                           ;! ---------------------------------------------------------------------------------
  1381                           ;! (6) ___aodiv                                             26    10     16     452
  1382                           ;!                                              0 COMRAM    26    10     16
  1383                           ;! ---------------------------------------------------------------------------------
  1384                           ;! (2) _clearLCD                                             0     0      0      22
  1385                           ;!                                _LCD
  1386                           ;! ---------------------------------------------------------------------------------
  1387                           ;! (2) _WriteLCD                                             6     1      5    1457
  1388                           ;!                                              2 COMRAM     6     1      5
  1389                           ;!                                _LCD
  1390                           ;! ---------------------------------------------------------------------------------
  1391                           ;! (3) _LCD                                                  2     2      0      22
  1392                           ;!                                              0 COMRAM     2     2      0
  1393                           ;! ---------------------------------------------------------------------------------
  1394                           ;! (2) _ReadI2C                                              8     3      5     678
  1395                           ;!                                              4 COMRAM     8     3      5
  1396                           ;!                         _ReceiveI2C
  1397                           ;!                   _RepeatedStartI2C
  1398                           ;!                            _SendI2C
  1399                           ;!                           _StartI2C
  1400                           ;!                            _StopI2C
  1401                           ;! ---------------------------------------------------------------------------------
  1402                           ;! (3) _StopI2C                                              0     0      0       0
  1403                           ;!                           _ReadyI2C
  1404                           ;! ---------------------------------------------------------------------------------
  1405                           ;! (3) _StartI2C                                             0     0      0       0
  1406                           ;!                           _ReadyI2C
  1407                           ;! ---------------------------------------------------------------------------------
  1408                           ;! (3) _SendI2C                                              1     1      0      22
  1409                           ;!                                              1 COMRAM     1     1      0
  1410                           ;!                           _ReadyI2C
  1411                           ;! ---------------------------------------------------------------------------------
  1412                           ;! (3) _RepeatedStartI2C                                     0     0      0       0
  1413                           ;!                           _ReadyI2C
  1414                           ;! ---------------------------------------------------------------------------------
  1415                           ;! (3) _ReceiveI2C                                           3     3      0      45
  1416                           ;!                                              1 COMRAM     3     3      0
  1417                           ;!                           _ReadyI2C
  1418                           ;! ---------------------------------------------------------------------------------
  1419                           ;! (4) _ReadyI2C                                             1     1      0       0
  1420                           ;!                                              0 COMRAM     1     1      0
  1421                           ;! ---------------------------------------------------------------------------------
  1422                           ;! Estimated maximum stack depth 9
  1423                           ;! ---------------------------------------------------------------------------------
  1424                           ;!
  1425                           ;! Call Graph Graphs:
  1426                           ;!
  1427                           ;! _main (ROOT)
  1428                           ;!   _TestConnection
  1429                           ;!     _ReadI2C
  1430                           ;!       _ReceiveI2C
  1431                           ;!         _ReadyI2C
  1432                           ;!       _RepeatedStartI2C
  1433                           ;!         _ReadyI2C
  1434                           ;!       _SendI2C
  1435                           ;!         _ReadyI2C
  1436                           ;!       _StartI2C
  1437                           ;!         _ReadyI2C
  1438                           ;!       _StopI2C
  1439                           ;!         _ReadyI2C
  1440                           ;!     _WriteLCD
  1441                           ;!       _LCD
  1442                           ;!     _clearLCD
  1443                           ;!       _LCD
  1444                           ;!     _sprintf
  1445                           ;!       _vfprintf
  1446                           ;!         _vfpfcnvrt
  1447                           ;!           _dtoa
  1448                           ;!             ___aodiv
  1449                           ;!             ___aomod
  1450                           ;!             _abs
  1451                           ;!               ___aomod (ARG)
  1452                           ;!             _pad
  1453                           ;!               _fputc
  1454                           ;!                 _putch
  1455                           ;!               _fputs
  1456                           ;!                 _fputc
  1457                           ;!                   _putch
  1458                           ;!               _strlen
  1459                           ;!           _fputc
  1460                           ;!             _putch
  1461                           ;!           _xtoa
  1462                           ;!             _isalpha
  1463                           ;!             _isupper
  1464                           ;!             _pad
  1465                           ;!               _fputc
  1466                           ;!                 _putch
  1467                           ;!               _fputs
  1468                           ;!                 _fputc
  1469                           ;!                   _putch
  1470                           ;!               _strlen
  1471                           ;!             _toupper
  1472                           ;!               _islower
  1473                           ;!   _WriteI2C
  1474                           ;!     _SendI2C
  1475                           ;!       _ReadyI2C
  1476                           ;!     _StartI2C
  1477                           ;!       _ReadyI2C
  1478                           ;!     _StopI2C
  1479                           ;!       _ReadyI2C
  1480                           ;!   _settings
  1481                           ;!     _LCD
  1482                           ;!   _settingsIMU
  1483                           ;!     _WriteI2C
  1484                           ;!       _SendI2C
  1485                           ;!         _ReadyI2C
  1486                           ;!       _StartI2C
  1487                           ;!         _ReadyI2C
  1488                           ;!       _StopI2C
  1489                           ;!         _ReadyI2C
  1490                           ;!     _WriteLCD
  1491                           ;!       _LCD
  1492                           ;!     _clearLCD
  1493                           ;!       _LCD
  1494                           ;!   _start
  1495                           ;!     _ReadI2C
  1496                           ;!       _ReceiveI2C
  1497                           ;!         _ReadyI2C
  1498                           ;!       _RepeatedStartI2C
  1499                           ;!         _ReadyI2C
  1500                           ;!       _SendI2C
  1501                           ;!         _ReadyI2C
  1502                           ;!       _StartI2C
  1503                           ;!         _ReadyI2C
  1504                           ;!       _StopI2C
  1505                           ;!         _ReadyI2C
  1506                           ;!     _WriteLCD
  1507                           ;!       _LCD
  1508                           ;!     _sprintf
  1509                           ;!       _vfprintf
  1510                           ;!         _vfpfcnvrt
  1511                           ;!           _dtoa
  1512                           ;!             ___aodiv
  1513                           ;!             ___aomod
  1514                           ;!             _abs
  1515                           ;!               ___aomod (ARG)
  1516                           ;!             _pad
  1517                           ;!               _fputc
  1518                           ;!                 _putch
  1519                           ;!               _fputs
  1520                           ;!                 _fputc
  1521                           ;!                   _putch
  1522                           ;!               _strlen
  1523                           ;!           _fputc
  1524                           ;!             _putch
  1525                           ;!           _xtoa
  1526                           ;!             _isalpha
  1527                           ;!             _isupper
  1528                           ;!             _pad
  1529                           ;!               _fputc
  1530                           ;!                 _putch
  1531                           ;!               _fputs
  1532                           ;!                 _fputc
  1533                           ;!                   _putch
  1534                           ;!               _strlen
  1535                           ;!             _toupper
  1536                           ;!               _islower
  1537                           ;!
  1538                           
  1539                           ;! Address spaces:
  1540                           
  1541                           ;!Name               Size   Autos  Total    Cost      Usage
  1542                           ;!BIGRAM             7FF      0       0      21        0.0%
  1543                           ;!EEDATA             100      0       0       0        0.0%
  1544                           ;!BITBANK7           100      0       0      18        0.0%
  1545                           ;!BANK7              100      0       0      19        0.0%
  1546                           ;!BITBANK6           100      0       0      16        0.0%
  1547                           ;!BANK6              100      0       0      17        0.0%
  1548                           ;!BITBANK5           100      0       0      14        0.0%
  1549                           ;!BANK5              100      0       0      15        0.0%
  1550                           ;!BITBANK4           100      0       0      12        0.0%
  1551                           ;!BANK4              100      0       0      13        0.0%
  1552                           ;!BITBANK3           100      0       0      10        0.0%
  1553                           ;!BANK3              100      0       0      11        0.0%
  1554                           ;!BITBANK2           100      0       0       8        0.0%
  1555                           ;!BANK2              100      0       0       9        0.0%
  1556                           ;!BITBANK1           100      0       0       6        0.0%
  1557                           ;!BANK1              100      0      25       7       14.5%
  1558                           ;!BITBANK0            A0      0       0       4        0.0%
  1559                           ;!BANK0               A0     18      8F       5       89.4%
  1560                           ;!BITCOMRAM           5F      0       0       0        0.0%
  1561                           ;!COMRAM              5F     5F      5F       1      100.0%
  1562                           ;!BITSFR               0      0       0     200        0.0%
  1563                           ;!SFR                  0      0       0     200        0.0%
  1564                           ;!STACK                0      0       0       2        0.0%
  1565                           ;!NULL                 0      0       0       0        0.0%
  1566                           ;!ABS                  0      0     113      20        0.0%
  1567                           ;!DATA                 0      0     113       3        0.0%
  1568                           ;!CODE                 0      0       0       0        0.0%
  1569                           
  1570                           	global	_main
  1571                           
  1572 ;; *************** function _main *****************
  1573 ;; Defined at:
  1574 ;;		line 61 in file "main.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;		None
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;		None
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  1    wreg      void 
  1581 ;; Registers used:
  1582 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1588 ;;      Params:         0       0       0       0       0       0       0       0       0
  1589 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1590 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1591 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1592 ;;Total ram usage:        0 bytes
  1593 ;; Hardware stack levels required when called:    9
  1594 ;; This function calls:
  1595 ;;		_TestConnection
  1596 ;;		_WriteI2C
  1597 ;;		_settings
  1598 ;;		_settingsIMU
  1599 ;;		_start
  1600 ;; This function is called by:
  1601 ;;		Startup code after reset
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           psect	text0,class=CODE,space=0,reloc=2,group=0
  1605                           	file	"main.c"
  1606                           	line	61
  1607                           global __ptext0
  1608                           __ptext0:
  1609  001D4A                     psect	text0
  1610                           	file	"main.c"
  1611                           	line	61
  1612                           	global	__size_of_main
  1613                           	__size_of_main	equ	__end_of_main-_main
  1614  0000                     	
  1615                           _main:
  1616  001D4A                     ;incstack = 0
  1617                           	opt	stack 22
  1618                           	line	62
  1619                           	
  1620                           l2074:
  1621  001D4A                     ;main.c: 62:     settings();
  1622                           	call	_settings	;wreg free
  1623  001D4A  EC0B  F00E         	line	63
  1624                           	
  1625                           l2076:
  1626  001D4E                     ;main.c: 63:     WriteI2C(0xA0,0x6B,&a,1);
  1627                           	movlw	low(06Bh)
  1628  001D4E  0E6B               	movwf	((c:WriteI2C@Register)),c
  1629  001D50  6E03               		movlw	low(_a)
  1630  001D52  0EB2               	movwf	((c:WriteI2C@Data)),c
  1631  001D54  6E04               	movlw	high(_a)
  1632  001D56  0E00               	movwf	((c:WriteI2C@Data+1)),c
  1633  001D58  6E05               
  1634                           	movlw	high(01h)
  1635  001D5A  0E00               	movwf	((c:WriteI2C@Ndatos+1)),c
  1636  001D5C  6E07               	movlw	low(01h)
  1637  001D5E  0E01               	movwf	((c:WriteI2C@Ndatos)),c
  1638  001D60  6E06               	movlw	(0A0h)&0ffh
  1639  001D62  0EA0               	
  1640                           	call	_WriteI2C
  1641  001D64  EC1B  F00C         	line	64
  1642                           	
  1643                           l2078:
  1644  001D68                     ;main.c: 64:     TestConnection();
  1645                           	call	_TestConnection	;wreg free
  1646  001D68  ECA3  F00A         	line	65
  1647                           	
  1648                           l2080:
  1649  001D6C                     ;main.c: 65:     settingsIMU();
  1650                           	call	_settingsIMU	;wreg free
  1651  001D6C  EC50  F00D         	goto	l2082
  1652  001D70  EFBA  F00E         	line	66
  1653                           ;main.c: 66:     while(1){
  1654                           	
  1655                           l91:
  1656  001D74                     	line	67
  1657                           	
  1658                           l2082:
  1659  001D74                     ;main.c: 67:         start();
  1660                           	call	_start	;wreg free
  1661  001D74  EC59  F00C         	goto	l2082
  1662  001D78  EFBA  F00E         	line	68
  1663                           ;main.c: 68:     }
  1664                           	
  1665                           l92:
  1666  001D7C                     	goto	l2082
  1667  001D7C  EFBA  F00E         	
  1668                           l93:
  1669  001D80                     	line	69
  1670                           	
  1671                           l94:
  1672  001D80                     	global	start
  1673                           	goto	start
  1674  001D80  EF00  F000         	opt stack 0
  1675                           GLOBAL	__end_of_main
  1676                           	__end_of_main:
  1677  001D84                     	signat	_main,89
  1678                           	global	_start
  1679                           
  1680 ;; *************** function _start *****************
  1681 ;; Defined at:
  1682 ;;		line 117 in file "main.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;		None
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;		None
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  1    wreg      void 
  1689 ;; Registers used:
  1690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1696 ;;      Params:         0       0       0       0       0       0       0       0       0
  1697 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1698 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1699 ;;      Totals:         0       2       0       0       0       0       0       0       0
  1700 ;;Total ram usage:        2 bytes
  1701 ;; Hardware stack levels used:    1
  1702 ;; Hardware stack levels required when called:    8
  1703 ;; This function calls:
  1704 ;;		_ReadI2C
  1705 ;;		_WriteLCD
  1706 ;;		_sprintf
  1707 ;; This function is called by:
  1708 ;;		_main
  1709 ;; This function uses a non-reentrant model
  1710 ;;
  1711                           psect	text1,class=CODE,space=0,reloc=2,group=0
  1712                           	line	117
  1713                           global __ptext1
  1714                           __ptext1:
  1715  0018B2                     psect	text1
  1716                           	file	"main.c"
  1717                           	line	117
  1718                           	global	__size_of_start
  1719                           	__size_of_start	equ	__end_of_start-_start
  1720  0000                     	
  1721                           _start:
  1722  0018B2                     ;incstack = 0
  1723                           	opt	stack 22
  1724                           	line	118
  1725                           	
  1726                           l2066:
  1727  0018B2                     ;main.c: 118:     ReadI2C(0xA0,0x3B,14,GyrAccel);
  1728                           	movlw	low(03Bh)
  1729  0018B2  0E3B               	movwf	((c:ReadI2C@Register)),c
  1730  0018B4  6E05               	movlw	high(0Eh)
  1731  0018B6  0E00               	movwf	((c:ReadI2C@Nbytes+1)),c
  1732  0018B8  6E07               	movlw	low(0Eh)
  1733  0018BA  0E0E               	movwf	((c:ReadI2C@Nbytes)),c
  1734  0018BC  6E06               		movlw	low(_GyrAccel)
  1735  0018BE  0EA3               	movwf	((c:ReadI2C@Data)),c
  1736  0018C0  6E08               	movlw	high(_GyrAccel)
  1737  0018C2  0E00               	movwf	((c:ReadI2C@Data+1)),c
  1738  0018C4  6E09               
  1739                           	movlw	(0A0h)&0ffh
  1740  0018C6  0EA0               	
  1741                           	call	_ReadI2C
  1742  0018C8  EC79  F00B         	line	119
  1743                           	
  1744                           l2068:
  1745  0018CC                     ;main.c: 119:     raw_accelx = (GyrAccel[0]<<8|GyrAccel[1]);
  1746                           	movlb	0	; () banked
  1747  0018CC  0100               	movf	(0+(_GyrAccel+01h))&0ffh,w
  1748  0018CE  51A4               	movff	(_GyrAccel),??_start+0+0
  1749  0018D0  C0A3  F0ED         	clrf	(??_start+0+0+1)&0ffh
  1750  0018D4  6BEE               	movff	??_start+0+0,??_start+0+1
  1751  0018D6  C0ED  F0EE         	clrf	(??_start+0+0)&0ffh
  1752  0018DA  6BED               	iorwf	(??_start+0+0)&0ffh,w
  1753  0018DC  11ED               	movwf	((_raw_accelx))&0ffh
  1754  0018DE  6F6B               	movf	(??_start+0+1)&0ffh,w
  1755  0018E0  51EE               	movwf	1+((_raw_accelx))&0ffh
  1756  0018E2  6F6C               	line	120
  1757                           	
  1758                           l2070:; BSR set to: 0
  1759  0018E4                     
  1760                           ;main.c: 120:     sprintf(text,"ax, ay, az:%d",-32767);
  1761                           		movlw	low(_text)
  1762  0018E4  0E8F               	movwf	((sprintf@s))&0ffh
  1763  0018E6  6FDD               	movlw	high(_text)
  1764  0018E8  0E00               	movwf	((sprintf@s+1))&0ffh
  1765  0018EA  6FDE               
  1766                           		movlw	low(STR_2)
  1767  0018EC  0E01               	movwf	((sprintf@fmt))&0ffh
  1768  0018EE  6FDF               	movlw	high(STR_2)
  1769  0018F0  0E08               	movwf	((sprintf@fmt+1))&0ffh
  1770  0018F2  6FE0               
  1771                           	movlw	high(-32767)
  1772  0018F4  0E80               	movwf	(1+(?_sprintf+04h))&0ffh
  1773  0018F6  6FE2               	movlw	low(-32767)
  1774  0018F8  0E01               	movwf	(0+(?_sprintf+04h))&0ffh
  1775  0018FA  6FE1               	call	_sprintf	;wreg free
  1776  0018FC  ECF4  F00C         	line	121
  1777                           	
  1778                           l2072:
  1779  001900                     ;main.c: 121:     WriteLCD(text,0xC0,sizeof(text));
  1780                           		movlw	low(_text)
  1781  001900  0E8F               	movwf	((c:WriteLCD@a)),c
  1782  001902  6E03               	movlw	high(_text)
  1783  001904  0E00               	movwf	((c:WriteLCD@a+1)),c
  1784  001906  6E04               
  1785                           	movlw	low(0C0h)
  1786  001908  0EC0               	movwf	((c:WriteLCD@DDRAM_RAW)),c
  1787  00190A  6E05               	movlw	high(014h)
  1788  00190C  0E00               	movwf	((c:WriteLCD@Size+1)),c
  1789  00190E  6E07               	movlw	low(014h)
  1790  001910  0E14               	movwf	((c:WriteLCD@Size)),c
  1791  001912  6E06               	call	_WriteLCD	;wreg free
  1792  001914  EC8D  F00C         	line	125
  1793                           	
  1794                           l108:
  1795  001918                     	return	;funcret
  1796  001918  0012               	opt stack 0
  1797                           GLOBAL	__end_of_start
  1798                           	__end_of_start:
  1799  00191A                     	signat	_start,89
  1800                           	global	_settingsIMU
  1801                           
  1802 ;; *************** function _settingsIMU *****************
  1803 ;; Defined at:
  1804 ;;		line 110 in file "main.c"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;		None
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;		None
  1809 ;; Return value:  Size  Location     Type
  1810 ;;                  1    wreg      void 
  1811 ;; Registers used:
  1812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1818 ;;      Params:         0       0       0       0       0       0       0       0       0
  1819 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1820 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1821 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1822 ;;Total ram usage:        0 bytes
  1823 ;; Hardware stack levels used:    1
  1824 ;; Hardware stack levels required when called:    3
  1825 ;; This function calls:
  1826 ;;		_WriteI2C
  1827 ;;		_WriteLCD
  1828 ;;		_clearLCD
  1829 ;; This function is called by:
  1830 ;;		_main
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           psect	text2,class=CODE,space=0,reloc=2,group=0
  1834                           	line	110
  1835                           global __ptext2
  1836                           __ptext2:
  1837  001AA0                     psect	text2
  1838                           	file	"main.c"
  1839                           	line	110
  1840                           	global	__size_of_settingsIMU
  1841                           	__size_of_settingsIMU	equ	__end_of_settingsIMU-_settingsIMU
  1842  0000                     	
  1843                           _settingsIMU:
  1844  001AA0                     ;incstack = 0
  1845                           	opt	stack 27
  1846                           	line	111
  1847                           	
  1848                           l2058:
  1849  001AA0                     ;main.c: 111:     clearLCD();
  1850                           	call	_clearLCD	;wreg free
  1851  001AA0  EC06  F00F         	line	112
  1852                           	
  1853                           l2060:
  1854  001AA4                     ;main.c: 112:     WriteLCD(text4,0x80,sizeof(text4));
  1855                           		movlw	low(_text4)
  1856  001AA4  0ECA               	movwf	((c:WriteLCD@a)),c
  1857  001AA6  6E03               	movlw	high(_text4)
  1858  001AA8  0E00               	movwf	((c:WriteLCD@a+1)),c
  1859  001AAA  6E04               
  1860                           	movlw	low(080h)
  1861  001AAC  0E80               	movwf	((c:WriteLCD@DDRAM_RAW)),c
  1862  001AAE  6E05               	movlw	high(0Dh)
  1863  001AB0  0E00               	movwf	((c:WriteLCD@Size+1)),c
  1864  001AB2  6E07               	movlw	low(0Dh)
  1865  001AB4  0E0D               	movwf	((c:WriteLCD@Size)),c
  1866  001AB6  6E06               	call	_WriteLCD	;wreg free
  1867  001AB8  EC8D  F00C         	line	113
  1868                           	
  1869                           l2062:
  1870  001ABC                     ;main.c: 113:     WriteI2C(0xA0,0x1B,&a,1);
  1871                           	movlw	low(01Bh)
  1872  001ABC  0E1B               	movwf	((c:WriteI2C@Register)),c
  1873  001ABE  6E03               		movlw	low(_a)
  1874  001AC0  0EB2               	movwf	((c:WriteI2C@Data)),c
  1875  001AC2  6E04               	movlw	high(_a)
  1876  001AC4  0E00               	movwf	((c:WriteI2C@Data+1)),c
  1877  001AC6  6E05               
  1878                           	movlw	high(01h)
  1879  001AC8  0E00               	movwf	((c:WriteI2C@Ndatos+1)),c
  1880  001ACA  6E07               	movlw	low(01h)
  1881  001ACC  0E01               	movwf	((c:WriteI2C@Ndatos)),c
  1882  001ACE  6E06               	movlw	(0A0h)&0ffh
  1883  001AD0  0EA0               	
  1884                           	call	_WriteI2C
  1885  001AD2  EC1B  F00C         	line	114
  1886                           	
  1887                           l2064:
  1888  001AD6                     ;main.c: 114:     WriteI2C(0xA0,0x1C,&a,1);
  1889                           	movlw	low(01Ch)
  1890  001AD6  0E1C               	movwf	((c:WriteI2C@Register)),c
  1891  001AD8  6E03               		movlw	low(_a)
  1892  001ADA  0EB2               	movwf	((c:WriteI2C@Data)),c
  1893  001ADC  6E04               	movlw	high(_a)
  1894  001ADE  0E00               	movwf	((c:WriteI2C@Data+1)),c
  1895  001AE0  6E05               
  1896                           	movlw	high(01h)
  1897  001AE2  0E00               	movwf	((c:WriteI2C@Ndatos+1)),c
  1898  001AE4  6E07               	movlw	low(01h)
  1899  001AE6  0E01               	movwf	((c:WriteI2C@Ndatos)),c
  1900  001AE8  6E06               	movlw	(0A0h)&0ffh
  1901  001AEA  0EA0               	
  1902                           	call	_WriteI2C
  1903  001AEC  EC1B  F00C         	line	115
  1904                           	
  1905                           l105:
  1906  001AF0                     	return	;funcret
  1907  001AF0  0012               	opt stack 0
  1908                           GLOBAL	__end_of_settingsIMU
  1909                           	__end_of_settingsIMU:
  1910  001AF2                     	signat	_settingsIMU,89
  1911                           	global	_WriteI2C
  1912                           
  1913 ;; *************** function _WriteI2C *****************
  1914 ;; Defined at:
  1915 ;;		line 127 in file "main.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;  Address         1    wreg     unsigned char 
  1918 ;;  Register        1    2[COMRAM] unsigned char 
  1919 ;;  Data            2    3[COMRAM] PTR unsigned char 
  1920 ;;		 -> a(1), 
  1921 ;;  Ndatos          2    5[COMRAM] int 
  1922 ;; Auto vars:     Size  Location     Type
  1923 ;;  Address         1    9[COMRAM] unsigned char 
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  1    wreg      void 
  1926 ;; Registers used:
  1927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1933 ;;      Params:         5       0       0       0       0       0       0       0       0
  1934 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1935 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1936 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1937 ;;Total ram usage:        8 bytes
  1938 ;; Hardware stack levels used:    1
  1939 ;; Hardware stack levels required when called:    2
  1940 ;; This function calls:
  1941 ;;		_SendI2C
  1942 ;;		_StartI2C
  1943 ;;		_StopI2C
  1944 ;; This function is called by:
  1945 ;;		_main
  1946 ;;		_settingsIMU
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           psect	text3,class=CODE,space=0,reloc=2,group=0
  1950                           	line	127
  1951                           global __ptext3
  1952                           __ptext3:
  1953  001836                     psect	text3
  1954                           	file	"main.c"
  1955                           	line	127
  1956                           	global	__size_of_WriteI2C
  1957                           	__size_of_WriteI2C	equ	__end_of_WriteI2C-_WriteI2C
  1958  0000                     	
  1959                           _WriteI2C:
  1960  001836                     ;incstack = 0
  1961                           	opt	stack 27
  1962                           ;WriteI2C@Address stored from wreg
  1963                           	movwf	((c:WriteI2C@Address)),c
  1964  001836  6E0A               	line	129
  1965                           	
  1966                           l1950:
  1967  001838                     ;main.c: 129:     StartI2C();
  1968                           	call	_StartI2C	;wreg free
  1969  001838  EC0F  F00F         	line	130
  1970                           ;main.c: 130:     SendI2C(Address);
  1971                           	movf	((c:WriteI2C@Address)),c,w
  1972  00183C  500A               	
  1973                           	call	_SendI2C
  1974  00183E  EC00  F00F         	line	131
  1975                           ;main.c: 131:     SendI2C(Register);
  1976                           	movf	((c:WriteI2C@Register)),c,w
  1977  001842  5003               	
  1978                           	call	_SendI2C
  1979  001844  EC00  F00F         	line	132
  1980                           	
  1981                           l1952:
  1982  001848                     ;main.c: 132:     for(i=0; i<Ndatos; i++){
  1983                           	movlw	high(0)
  1984  001848  0E00               	movlb	0	; () banked
  1985  00184A  0100               	movwf	((_i+1))&0ffh
  1986  00184C  6F6E               	movlw	low(0)
  1987  00184E  0E00               	movwf	((_i))&0ffh
  1988  001850  6F6D               	goto	l1960
  1989  001852  EF39  F00C         	
  1990                           l112:; BSR set to: 0
  1991  001856                     
  1992                           	line	133
  1993                           	
  1994                           l1954:; BSR set to: 0
  1995  001856                     
  1996                           ;main.c: 133:         SendI2C(*Data);
  1997                           	movff	(c:WriteI2C@Data),fsr2l
  1998  001856  C004  FFD9         	movff	(c:WriteI2C@Data+1),fsr2h
  1999  00185A  C005  FFDA         	movf	indf2,w
  2000  00185E  50DF               	
  2001                           	call	_SendI2C
  2002  001860  EC00  F00F         	line	134
  2003                           	
  2004                           l1956:
  2005  001864                     ;main.c: 134:         Data++;
  2006                           	infsnz	((c:WriteI2C@Data)),c
  2007  001864  4A04               	incf	((c:WriteI2C@Data+1)),c
  2008  001866  2A05               	line	135
  2009                           	
  2010                           l1958:
  2011  001868                     ;main.c: 135:     }
  2012                           	movlb	0	; () banked
  2013  001868  0100               	infsnz	((_i))&0ffh
  2014  00186A  4B6D               	incf	((_i+1))&0ffh
  2015  00186C  2B6E               	goto	l1960
  2016  00186E  EF39  F00C         	
  2017                           l111:; BSR set to: 0
  2018  001872                     
  2019                           	
  2020                           l1960:; BSR set to: 0
  2021  001872                     
  2022                           		movf	((c:WriteI2C@Ndatos)),c,w
  2023  001872  5006               	subwf	((_i))&0ffh,w
  2024  001874  5D6D               	movf	((_i+1))&0ffh,w
  2025  001876  516E               	xorlw	80h
  2026  001878  0A80               	movwf	(??_WriteI2C+0+0)&0ffh,c
  2027  00187A  6E08               	movf	((c:WriteI2C@Ndatos+1)),c,w
  2028  00187C  5007               	xorlw	80h
  2029  00187E  0A80               	subwfb	(??_WriteI2C+0+0)&0ffh,c,w
  2030  001880  5808               	btfss	status,0
  2031  001882  A0D8               	goto	u1581
  2032  001884  EF46  F00C         	goto	u1580
  2033  001888  EF48  F00C         
  2034                           u1581:
  2035  00188C                     	goto	l1954
  2036  00188C  EF2B  F00C         u1580:
  2037  001890                     	goto	l1962
  2038  001890  EF4A  F00C         	
  2039                           l113:; BSR set to: 0
  2040  001894                     
  2041                           	line	136
  2042                           	
  2043                           l1962:; BSR set to: 0
  2044  001894                     
  2045                           ;main.c: 136:     StopI2C();
  2046                           	call	_StopI2C	;wreg free
  2047  001894  EC0B  F00F         	line	137
  2048                           	
  2049                           l1964:
  2050  001898                     ;main.c: 137:     _delay((unsigned long)((1000)*(20000000/4000.0)));
  2051                           	opt asmopt_push
  2052                           opt asmopt_off
  2053                           movlw  26
  2054  001898  0E1A               movwf	(??_WriteI2C+0+0+1)&0ffh,c,f
  2055  00189A  6E09               movlw	94
  2056  00189C  0E5E               movwf	(??_WriteI2C+0+0)&0ffh,c,f
  2057  00189E  6E08               	movlw	110
  2058  0018A0  0E6E               u1637:
  2059  0018A2                     decfsz	wreg,f
  2060  0018A2  2EE8               	bra	u1637
  2061  0018A4  D7FE               	decfsz	(??_WriteI2C+0+0)&0ffh,c,f
  2062  0018A6  2E08               	bra	u1637
  2063  0018A8  D7FC               	decfsz	(??_WriteI2C+0+0+1)&0ffh,c,f
  2064  0018AA  2E09               	bra	u1637
  2065  0018AC  D7FA               	nop2
  2066  0018AE  D000               opt asmopt_pop
  2067                           
  2068                           	line	139
  2069                           	
  2070                           l114:
  2071  0018B0                     	return	;funcret
  2072  0018B0  0012               	opt stack 0
  2073                           GLOBAL	__end_of_WriteI2C
  2074                           	__end_of_WriteI2C:
  2075  0018B2                     	signat	_WriteI2C,16505
  2076                           	global	_settings
  2077                           
  2078 ;; *************** function _settings *****************
  2079 ;; Defined at:
  2080 ;;		line 71 in file "main.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;		None
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;		None
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  1    wreg      void 
  2087 ;; Registers used:
  2088 ;;		wreg, status,2, cstack
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2094 ;;      Params:         0       0       0       0       0       0       0       0       0
  2095 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2096 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2097 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2098 ;;Total ram usage:        0 bytes
  2099 ;; Hardware stack levels used:    1
  2100 ;; Hardware stack levels required when called:    1
  2101 ;; This function calls:
  2102 ;;		_LCD
  2103 ;; This function is called by:
  2104 ;;		_main
  2105 ;; This function uses a non-reentrant model
  2106 ;;
  2107                           psect	text4,class=CODE,space=0,reloc=2,group=0
  2108                           	line	71
  2109                           global __ptext4
  2110                           __ptext4:
  2111  001C16                     psect	text4
  2112                           	file	"main.c"
  2113                           	line	71
  2114                           	global	__size_of_settings
  2115                           	__size_of_settings	equ	__end_of_settings-_settings
  2116  0000                     	
  2117                           _settings:
  2118  001C16                     ;incstack = 0
  2119                           	opt	stack 29
  2120                           	line	73
  2121                           	
  2122                           l2020:
  2123  001C16                     ;main.c: 73:     TRISBbits.RB0 = 1;
  2124                           	bsf	((c:3987)),c,0	;volatile
  2125  001C16  8093               	line	74
  2126                           ;main.c: 74:     TRISBbits.RB1 = 1;
  2127                           	bsf	((c:3987)),c,1	;volatile
  2128  001C18  8293               	line	75
  2129                           	
  2130                           l2022:
  2131  001C1A                     ;main.c: 75:     SSPADD = 0x31;
  2132                           	movlw	low(031h)
  2133  001C1A  0E31               	movwf	((c:4040)),c	;volatile
  2134  001C1C  6EC8               	line	76
  2135                           ;main.c: 76:     SSPSTAT = 0x80;
  2136                           	movlw	low(080h)
  2137  001C1E  0E80               	movwf	((c:4039)),c	;volatile
  2138  001C20  6EC7               	line	77
  2139                           ;main.c: 77:     SSPCON1 = 0x28;
  2140                           	movlw	low(028h)
  2141  001C22  0E28               	movwf	((c:4038)),c	;volatile
  2142  001C24  6EC6               	line	78
  2143                           ;main.c: 78:     SSPCON2 = 0x00;
  2144                           	movlw	low(0)
  2145  001C26  0E00               	movwf	((c:4037)),c	;volatile
  2146  001C28  6EC5               	line	80
  2147                           ;main.c: 80:     TRISD = 0x00;
  2148                           	movlw	low(0)
  2149  001C2A  0E00               	movwf	((c:3989)),c	;volatile
  2150  001C2C  6E95               	line	81
  2151                           ;main.c: 81:     LATD = 0x00;
  2152                           	movlw	low(0)
  2153  001C2E  0E00               	movwf	((c:3980)),c	;volatile
  2154  001C30  6E8C               	line	82
  2155                           ;main.c: 82:     TRISE = 0x01;
  2156                           	movlw	low(01h)
  2157  001C32  0E01               	movwf	((c:3990)),c	;volatile
  2158  001C34  6E96               	line	83
  2159                           ;main.c: 83:     LATE = 0x00;
  2160                           	movlw	low(0)
  2161  001C36  0E00               	movwf	((c:3981)),c	;volatile
  2162  001C38  6E8D               	line	84
  2163                           	
  2164                           l2024:
  2165  001C3A                     ;main.c: 84:     LCD(0x06);
  2166                           	movlw	(06h)&0ffh
  2167  001C3A  0E06               	
  2168                           	call	_LCD
  2169  001C3C  EC87  F00E         	line	85
  2170                           	
  2171                           l2026:
  2172  001C40                     ;main.c: 85:     LCD(0x0F);
  2173                           	movlw	(0Fh)&0ffh
  2174  001C40  0E0F               	
  2175                           	call	_LCD
  2176  001C42  EC87  F00E         	line	86
  2177                           	
  2178                           l2028:
  2179  001C46                     ;main.c: 86:     LCD(0x38);
  2180                           	movlw	(038h)&0ffh
  2181  001C46  0E38               	
  2182                           	call	_LCD
  2183  001C48  EC87  F00E         	line	88
  2184                           	
  2185                           l2030:
  2186  001C4C                     ;main.c: 88:     TRISBbits.RB6 = 0;
  2187                           	bcf	((c:3987)),c,6	;volatile
  2188  001C4C  9C93               	line	89
  2189                           	
  2190                           l2032:
  2191  001C4E                     ;main.c: 89:     TRISBbits.RB7 = 0;
  2192                           	bcf	((c:3987)),c,7	;volatile
  2193  001C4E  9E93               	line	90
  2194                           	
  2195                           l2034:
  2196  001C50                     ;main.c: 90:     LATB = 0;
  2197                           	movlw	low(0)
  2198  001C50  0E00               	movwf	((c:3978)),c	;volatile
  2199  001C52  6E8A               	line	91
  2200                           	
  2201                           l97:
  2202  001C54                     	return	;funcret
  2203  001C54  0012               	opt stack 0
  2204                           GLOBAL	__end_of_settings
  2205                           	__end_of_settings:
  2206  001C56                     	signat	_settings,89
  2207                           	global	_TestConnection
  2208                           
  2209 ;; *************** function _TestConnection *****************
  2210 ;; Defined at:
  2211 ;;		line 93 in file "main.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;		None
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;		None
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  1    wreg      void 
  2218 ;; Registers used:
  2219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2225 ;;      Params:         0       0       0       0       0       0       0       0       0
  2226 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2227 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2228 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2229 ;;Total ram usage:        2 bytes
  2230 ;; Hardware stack levels used:    1
  2231 ;; Hardware stack levels required when called:    8
  2232 ;; This function calls:
  2233 ;;		_ReadI2C
  2234 ;;		_WriteLCD
  2235 ;;		_clearLCD
  2236 ;;		_sprintf
  2237 ;; This function is called by:
  2238 ;;		_main
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           psect	text5,class=CODE,space=0,reloc=2,group=0
  2242                           	line	93
  2243                           global __ptext5
  2244                           __ptext5:
  2245  001546                     psect	text5
  2246                           	file	"main.c"
  2247                           	line	93
  2248                           	global	__size_of_TestConnection
  2249                           	__size_of_TestConnection	equ	__end_of_TestConnection-_TestConnection
  2250  0000                     	
  2251                           _TestConnection:
  2252  001546                     ;incstack = 0
  2253                           	opt	stack 22
  2254                           	line	94
  2255                           	
  2256                           l2036:
  2257  001546                     ;main.c: 94:     clearLCD();
  2258                           	call	_clearLCD	;wreg free
  2259  001546  EC06  F00F         	line	95
  2260                           	
  2261                           l2038:
  2262  00154A                     ;main.c: 95:     WriteLCD(text1,0x80,sizeof(text1));
  2263                           		movlw	low(_text1)
  2264  00154A  0E13               	movwf	((c:WriteLCD@a)),c
  2265  00154C  6E03               	movlw	high(_text1)
  2266  00154E  0E01               	movwf	((c:WriteLCD@a+1)),c
  2267  001550  6E04               
  2268                           	movlw	low(080h)
  2269  001552  0E80               	movwf	((c:WriteLCD@DDRAM_RAW)),c
  2270  001554  6E05               	movlw	high(012h)
  2271  001556  0E00               	movwf	((c:WriteLCD@Size+1)),c
  2272  001558  6E07               	movlw	low(012h)
  2273  00155A  0E12               	movwf	((c:WriteLCD@Size)),c
  2274  00155C  6E06               	call	_WriteLCD	;wreg free
  2275  00155E  EC8D  F00C         	line	96
  2276                           	
  2277                           l2040:
  2278  001562                     ;main.c: 96:     ReadI2C(0xA0,0x75,1,&data);
  2279                           	movlw	low(075h)
  2280  001562  0E75               	movwf	((c:ReadI2C@Register)),c
  2281  001564  6E05               	movlw	high(01h)
  2282  001566  0E00               	movwf	((c:ReadI2C@Nbytes+1)),c
  2283  001568  6E07               	movlw	low(01h)
  2284  00156A  0E01               	movwf	((c:ReadI2C@Nbytes)),c
  2285  00156C  6E06               		movlw	low(_data)
  2286  00156E  0EB1               	movwf	((c:ReadI2C@Data)),c
  2287  001570  6E08               	movlw	high(_data)
  2288  001572  0E00               	movwf	((c:ReadI2C@Data+1)),c
  2289  001574  6E09               
  2290                           	movlw	(0A0h)&0ffh
  2291  001576  0EA0               	
  2292                           	call	_ReadI2C
  2293  001578  EC79  F00B         	line	97
  2294                           	
  2295                           l2042:
  2296  00157C                     ;main.c: 97:     if (data != 0x68){
  2297                           		movlw	104
  2298  00157C  0E68               	movlb	0	; () banked
  2299  00157E  0100               	xorwf	((_data))&0ffh,w
  2300  001580  19B1               	btfsc	status,2
  2301  001582  B4D8               	goto	u1621
  2302  001584  EFC6  F00A         	goto	u1620
  2303  001588  EFC8  F00A         
  2304                           u1621:
  2305  00158C                     	goto	l2052
  2306  00158C  EFF1  F00A         u1620:
  2307  001590                     	line	98
  2308                           	
  2309                           l2044:; BSR set to: 0
  2310  001590                     
  2311                           ;main.c: 98:         WriteLCD(text2,0xC0,sizeof(text2));
  2312                           		movlw	low(_text2)
  2313  001590  0E00               	movwf	((c:WriteLCD@a)),c
  2314  001592  6E03               	movlw	high(_text2)
  2315  001594  0E01               	movwf	((c:WriteLCD@a+1)),c
  2316  001596  6E04               
  2317                           	movlw	low(0C0h)
  2318  001598  0EC0               	movwf	((c:WriteLCD@DDRAM_RAW)),c
  2319  00159A  6E05               	movlw	high(013h)
  2320  00159C  0E00               	movwf	((c:WriteLCD@Size+1)),c
  2321  00159E  6E07               	movlw	low(013h)
  2322  0015A0  0E13               	movwf	((c:WriteLCD@Size)),c
  2323  0015A2  6E06               	call	_WriteLCD	;wreg free
  2324  0015A4  EC8D  F00C         	line	99
  2325                           	
  2326                           l2046:
  2327  0015A8                     ;main.c: 99:         sprintf(text,"Eu sou: %x",data);
  2328                           		movlw	low(_text)
  2329  0015A8  0E8F               	movlb	0	; () banked
  2330  0015AA  0100               	movwf	((sprintf@s))&0ffh
  2331  0015AC  6FDD               	movlw	high(_text)
  2332  0015AE  0E00               	movwf	((sprintf@s+1))&0ffh
  2333  0015B0  6FDE               
  2334                           		movlw	low(STR_1)
  2335  0015B2  0E0F               	movwf	((sprintf@fmt))&0ffh
  2336  0015B4  6FDF               	movlw	high(STR_1)
  2337  0015B6  0E08               	movwf	((sprintf@fmt+1))&0ffh
  2338  0015B8  6FE0               
  2339                           	movff	(_data),0+(?_sprintf+04h)
  2340  0015BA  C0B1  F0E1         	clrf	(1+(?_sprintf+04h))&0ffh
  2341  0015BE  6BE2               	call	_sprintf	;wreg free
  2342  0015C0  ECF4  F00C         	line	100
  2343                           	
  2344                           l2048:
  2345  0015C4                     ;main.c: 100:         WriteLCD(text,0xC0,sizeof(text));
  2346                           		movlw	low(_text)
  2347  0015C4  0E8F               	movwf	((c:WriteLCD@a)),c
  2348  0015C6  6E03               	movlw	high(_text)
  2349  0015C8  0E00               	movwf	((c:WriteLCD@a+1)),c
  2350  0015CA  6E04               
  2351                           	movlw	low(0C0h)
  2352  0015CC  0EC0               	movwf	((c:WriteLCD@DDRAM_RAW)),c
  2353  0015CE  6E05               	movlw	high(014h)
  2354  0015D0  0E00               	movwf	((c:WriteLCD@Size+1)),c
  2355  0015D2  6E07               	movlw	low(014h)
  2356  0015D4  0E14               	movwf	((c:WriteLCD@Size)),c
  2357  0015D6  6E06               	call	_WriteLCD	;wreg free
  2358  0015D8  EC8D  F00C         	line	101
  2359                           	
  2360                           l2050:
  2361  0015DC                     ;main.c: 101:         LATBbits.LATB6 = 1;
  2362                           	bsf	((c:3978)),c,6	;volatile
  2363  0015DC  8C8A               	line	103
  2364                           ;main.c: 103:     }else{
  2365                           	goto	l2056
  2366  0015DE  EF00  F00B         	
  2367                           l100:
  2368  0015E2                     	line	104
  2369                           	
  2370                           l2052:
  2371  0015E2                     ;main.c: 104:         WriteLCD(text3,0xC0,sizeof(text3));
  2372                           		movlw	low(_text3)
  2373  0015E2  0EB9               	movwf	((c:WriteLCD@a)),c
  2374  0015E4  6E03               	movlw	high(_text3)
  2375  0015E6  0E00               	movwf	((c:WriteLCD@a+1)),c
  2376  0015E8  6E04               
  2377                           	movlw	low(0C0h)
  2378  0015EA  0EC0               	movwf	((c:WriteLCD@DDRAM_RAW)),c
  2379  0015EC  6E05               	movlw	high(011h)
  2380  0015EE  0E00               	movwf	((c:WriteLCD@Size+1)),c
  2381  0015F0  6E07               	movlw	low(011h)
  2382  0015F2  0E11               	movwf	((c:WriteLCD@Size)),c
  2383  0015F4  6E06               	call	_WriteLCD	;wreg free
  2384  0015F6  EC8D  F00C         	line	105
  2385                           	
  2386                           l2054:
  2387  0015FA                     ;main.c: 105:         LATBbits.LATB7 = 1;
  2388                           	bsf	((c:3978)),c,7	;volatile
  2389  0015FA  8E8A               	goto	l2056
  2390  0015FC  EF00  F00B         	line	106
  2391                           ;main.c: 106:     }
  2392                           	
  2393                           l101:
  2394  001600                     	line	107
  2395                           	
  2396                           l2056:
  2397  001600                     ;main.c: 107:     _delay((unsigned long)((10*5)*(20000000/4000.0)));
  2398                           	opt asmopt_push
  2399                           opt asmopt_off
  2400                           movlw  2
  2401  001600  0E02               	movlb	0	; () banked
  2402  001602  0100               movwf	(??_TestConnection+0+0+1)&0ffh,f
  2403  001604  6FEE               movlw	69
  2404  001606  0E45               movwf	(??_TestConnection+0+0)&0ffh,f
  2405  001608  6FED               	movlw	169
  2406  00160A  0EA9               u1647:
  2407  00160C                     decfsz	wreg,f
  2408  00160C  2EE8               	bra	u1647
  2409  00160E  D7FE               	decfsz	(??_TestConnection+0+0)&0ffh,f
  2410  001610  2FED               	bra	u1647
  2411  001612  D7FC               	decfsz	(??_TestConnection+0+0+1)&0ffh,f
  2412  001614  2FEE               	bra	u1647
  2413  001616  D7FA               	nop2
  2414  001618  D000               opt asmopt_pop
  2415                           
  2416                           	line	108
  2417                           	
  2418                           l102:
  2419  00161A                     	return	;funcret
  2420  00161A  0012               	opt stack 0
  2421                           GLOBAL	__end_of_TestConnection
  2422                           	__end_of_TestConnection:
  2423  00161C                     	signat	_TestConnection,89
  2424                           	global	_sprintf
  2425                           
  2426 ;; *************** function _sprintf *****************
  2427 ;; Defined at:
  2428 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;  s               2    6[BANK0 ] PTR unsigned char 
  2431 ;;		 -> text(20), 
  2432 ;;  fmt             2    8[BANK0 ] PTR const unsigned char 
  2433 ;;		 -> STR_2(14), STR_1(11), 
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;  f               6   16[BANK0 ] struct _IO_FILE
  2436 ;;  ap              2   14[BANK0 ] PTR void [1]
  2437 ;;		 -> ?_sprintf(2), 
  2438 ;;  ret             2   12[BANK0 ] int 
  2439 ;; Return value:  Size  Location     Type
  2440 ;;                  2    6[BANK0 ] int 
  2441 ;; Registers used:
  2442 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2443 ;; Tracked objects:
  2444 ;;		On entry : 0/0
  2445 ;;		On exit  : 0/0
  2446 ;;		Unchanged: 0/0
  2447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2448 ;;      Params:         0       6       0       0       0       0       0       0       0
  2449 ;;      Locals:         0      10       0       0       0       0       0       0       0
  2450 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2451 ;;      Totals:         0      16       0       0       0       0       0       0       0
  2452 ;;Total ram usage:       16 bytes
  2453 ;; Hardware stack levels used:    1
  2454 ;; Hardware stack levels required when called:    7
  2455 ;; This function calls:
  2456 ;;		_vfprintf
  2457 ;; This function is called by:
  2458 ;;		_TestConnection
  2459 ;;		_start
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           psect	text6,class=CODE,space=0,reloc=2,group=2
  2463                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
  2464                           	line	9
  2465                           global __ptext6
  2466                           __ptext6:
  2467  0019E8                     psect	text6
  2468                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_sprintf.c"
  2469                           	line	9
  2470                           	global	__size_of_sprintf
  2471                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  2472  0000                     	
  2473                           _sprintf:
  2474  0019E8                     ;incstack = 0
  2475                           	opt	stack 22
  2476                           	line	15
  2477                           	
  2478                           l2008:
  2479  0019E8                     		movlw	low(?_sprintf+04h)
  2480  0019E8  0EE1               	movlb	0	; () banked
  2481  0019EA  0100               	movwf	((sprintf@ap))&0ffh
  2482  0019EC  6FE5               	movlw	high(?_sprintf+04h)
  2483  0019EE  0E00               	movwf	((sprintf@ap+1))&0ffh
  2484  0019F0  6FE6               
  2485                           	line	16
  2486                           		movff	(sprintf@s),(sprintf@f)
  2487  0019F2  C0DD  F0E7         	movff	(sprintf@s+1),(sprintf@f+1)
  2488  0019F6  C0DE  F0E8         
  2489                           	line	17
  2490                           	
  2491                           l2010:; BSR set to: 0
  2492  0019FA                     
  2493                           	movlw	high(0)
  2494  0019FA  0E00               	movwf	(1+(sprintf@f+02h))&0ffh
  2495  0019FC  6FEA               	movlw	low(0)
  2496  0019FE  0E00               	movwf	(0+(sprintf@f+02h))&0ffh
  2497  001A00  6FE9               	line	18
  2498                           	
  2499                           l2012:; BSR set to: 0
  2500  001A02                     
  2501                           	movlw	high(0)
  2502  001A02  0E00               	movwf	(1+(sprintf@f+04h))&0ffh
  2503  001A04  6FEC               	movlw	low(0)
  2504  001A06  0E00               	movwf	(0+(sprintf@f+04h))&0ffh
  2505  001A08  6FEB               	line	19
  2506                           	
  2507                           l2014:; BSR set to: 0
  2508  001A0A                     
  2509                           		movlw	low(sprintf@f)
  2510  001A0A  0EE7               	movwf	((vfprintf@fp))&0ffh
  2511  001A0C  6FD7               	movlw	high(sprintf@f)
  2512  001A0E  0E00               	movwf	((vfprintf@fp+1))&0ffh
  2513  001A10  6FD8               
  2514                           		movff	(sprintf@fmt),(vfprintf@fmt)
  2515  001A12  C0DF  F0D9         	movff	(sprintf@fmt+1),(vfprintf@fmt+1)
  2516  001A16  C0E0  F0DA         
  2517                           		movlw	low(sprintf@ap)
  2518  001A1A  0EE5               	movwf	((vfprintf@ap))&0ffh
  2519  001A1C  6FDB               	movlw	high(sprintf@ap)
  2520  001A1E  0E00               	movwf	((vfprintf@ap+1))&0ffh
  2521  001A20  6FDC               
  2522                           	call	_vfprintf	;wreg free
  2523  001A22  ECC1  F00C         	movff	0+?_vfprintf,(sprintf@ret)
  2524  001A26  C0D7  F0E3         	movff	1+?_vfprintf,(sprintf@ret+1)
  2525  001A2A  C0D8  F0E4         	line	20
  2526                           	
  2527                           l2016:
  2528  001A2E                     	movlb	0	; () banked
  2529  001A2E  0100               	movf	(0+(sprintf@f+02h))&0ffh,w
  2530  001A30  51E9               	addwf	((sprintf@s))&0ffh,w
  2531  001A32  25DD               	movwf	c:fsr2l
  2532  001A34  6ED9               	movf	(1+(sprintf@f+02h))&0ffh,w
  2533  001A36  51EA               	addwfc	((sprintf@s+1))&0ffh,w
  2534  001A38  21DE               	movwf	1+c:fsr2l
  2535  001A3A  6EDA               	movlw	low(0)
  2536  001A3C  0E00               	movwf	indf2
  2537  001A3E  6EDF               	goto	l986
  2538  001A40  EF22  F00D         	line	22
  2539                           	
  2540                           l2018:; BSR set to: 0
  2541  001A44                     
  2542                           	line	23
  2543                           ;	Return value of _sprintf is never used
  2544                           	
  2545                           l986:; BSR set to: 0
  2546  001A44                     
  2547                           	return	;funcret
  2548  001A44  0012               	opt stack 0
  2549                           GLOBAL	__end_of_sprintf
  2550                           	__end_of_sprintf:
  2551  001A46                     	signat	_sprintf,4698
  2552                           	global	_vfprintf
  2553                           
  2554 ;; *************** function _vfprintf *****************
  2555 ;; Defined at:
  2556 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  2557 ;; Parameters:    Size  Location     Type
  2558 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  2559 ;;		 -> sprintf@f(6), 
  2560 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  2561 ;;		 -> STR_2(14), STR_1(11), 
  2562 ;;  ap              2    4[BANK0 ] PTR PTR void 
  2563 ;;		 -> sprintf@ap(2), 
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;  cfmt            2   93[COMRAM] PTR unsigned char 
  2566 ;;		 -> STR_2(14), STR_1(11), 
  2567 ;; Return value:  Size  Location     Type
  2568 ;;                  2    0[BANK0 ] int 
  2569 ;; Registers used:
  2570 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2576 ;;      Params:         0       6       0       0       0       0       0       0       0
  2577 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2578 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2579 ;;      Totals:         2       6       0       0       0       0       0       0       0
  2580 ;;Total ram usage:        8 bytes
  2581 ;; Hardware stack levels used:    1
  2582 ;; Hardware stack levels required when called:    6
  2583 ;; This function calls:
  2584 ;;		_vfpfcnvrt
  2585 ;; This function is called by:
  2586 ;;		_sprintf
  2587 ;; This function uses a non-reentrant model
  2588 ;;
  2589                           psect	text7,class=CODE,space=0,reloc=2,group=0
  2590                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  2591                           	line	1368
  2592                           global __ptext7
  2593                           __ptext7:
  2594  001982                     psect	text7
  2595                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  2596                           	line	1368
  2597                           	global	__size_of_vfprintf
  2598                           	__size_of_vfprintf	equ	__end_of_vfprintf-_vfprintf
  2599  0000                     	
  2600                           _vfprintf:; BSR set to: 0
  2601  001982                     
  2602                           ;incstack = 0
  2603                           	opt	stack 22
  2604                           	line	1373
  2605                           	
  2606                           l1942:
  2607  001982                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1368: int v
                                 fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.0
                                 0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pi
                                 c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
                                 8\v2.00\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2608                           		movff	(vfprintf@fmt),(c:vfprintf@cfmt)
  2609  001982  C0D9  F05E         	movff	(vfprintf@fmt+1),(c:vfprintf@cfmt+1)
  2610  001986  C0DA  F05F         
  2611                           	line	1374
  2612                           	
  2613                           l1944:
  2614  00198A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1374:     n
                                 out = 0;
  2615                           	movlw	high(0)
  2616  00198A  0E00               	movlb	0	; () banked
  2617  00198C  0100               	movwf	((_nout+1))&0ffh
  2618  00198E  6F64               	movlw	low(0)
  2619  001990  0E00               	movwf	((_nout))&0ffh
  2620  001992  6F63               	line	1375
  2621                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1375:     w
                                 hile (*cfmt) {
  2622                           	goto	l1948
  2623  001994  EFE1  F00C         	
  2624                           l264:; BSR set to: 0
  2625  001998                     
  2626                           	line	1376
  2627                           	
  2628                           l1946:; BSR set to: 0
  2629  001998                     
  2630                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1376:      
                                    nout += vfpfcnvrt(fp, &cfmt, ap);
  2631                           		movff	(vfprintf@fp),(c:vfpfcnvrt@fp)
  2632  001998  C0D7  F043         	movff	(vfprintf@fp+1),(c:vfpfcnvrt@fp+1)
  2633  00199C  C0D8  F044         
  2634                           		movlw	low(vfprintf@cfmt)
  2635  0019A0  0E5E               	movwf	((c:vfpfcnvrt@fmt)),c
  2636  0019A2  6E45               	movlw	high(vfprintf@cfmt)
  2637  0019A4  0E00               	movwf	((c:vfpfcnvrt@fmt+1)),c
  2638  0019A6  6E46               
  2639                           		movff	(vfprintf@ap),(c:vfpfcnvrt@ap)
  2640  0019A8  C0DB  F047         	movff	(vfprintf@ap+1),(c:vfpfcnvrt@ap+1)
  2641  0019AC  C0DC  F048         
  2642                           	call	_vfpfcnvrt	;wreg free
  2643  0019B0  EC3A  F007         	movf	(0+?_vfpfcnvrt),c,w
  2644  0019B4  5043               	movlb	0	; () banked
  2645  0019B6  0100               	addwf	((_nout))&0ffh
  2646  0019B8  2763               	movf	(1+?_vfpfcnvrt),c,w
  2647  0019BA  5044               	addwfc	((_nout+1))&0ffh
  2648  0019BC  2364               
  2649                           	goto	l1948
  2650  0019BE  EFE1  F00C         	line	1377
  2651                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1377:     }
                                 
  2652                           	
  2653                           l263:; BSR set to: 0
  2654  0019C2                     
  2655                           	line	1375
  2656                           	
  2657                           l1948:; BSR set to: 0
  2658  0019C2                     
  2659                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1375:     w
                                 hile (*cfmt) {
  2660                           	movff	(c:vfprintf@cfmt),tblptrl
  2661  0019C2  C05E  FFF6         	movff	(c:vfprintf@cfmt+1),tblptrh
  2662  0019C6  C05F  FFF7         	if	0	;tblptru may be non-zero
  2663  0019CA                     	clrf	tblptru
  2665  0019CA                     	if	0	;tblptru may be non-zero
  2666  0019CA                     	global __mediumconst
  2667                           movlw	low highword(__mediumconst)
  2670  0019CA                     	tblrd	*
  2671  0019CA  0008               	
  2672                           	movf	tablat,w
  2673  0019CC  50F5               	iorlw	0
  2674  0019CE  0900               	btfss	status,2
  2675  0019D0  A4D8               	goto	u1571
  2676  0019D2  EFED  F00C         	goto	u1570
  2677  0019D6  EFEF  F00C         u1571:
  2678  0019DA                     	goto	l1946
  2679  0019DA  EFCC  F00C         u1570:
  2680  0019DE                     	
  2681                           l265:; BSR set to: 0
  2682  0019DE                     
  2683                           	line	1378
  2684                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1378:     r
                                 eturn nout;
  2685                           	movff	(_nout),(?_vfprintf)
  2686  0019DE  C063  F0D7         	movff	(_nout+1),(?_vfprintf+1)
  2687  0019E2  C064  F0D8         	line	1382
  2688                           	
  2689                           l266:; BSR set to: 0
  2690  0019E6                     
  2691                           	return	;funcret
  2692  0019E6  0012               	opt stack 0
  2693                           GLOBAL	__end_of_vfprintf
  2694                           	__end_of_vfprintf:
  2695  0019E8                     	signat	_vfprintf,12410
  2696                           	global	_vfpfcnvrt
  2697                           
  2698 ;; *************** function _vfpfcnvrt *****************
  2699 ;; Defined at:
  2700 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  2703 ;;		 -> sprintf@f(6), 
  2704 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  2705 ;;		 -> vfprintf@cfmt(2), 
  2706 ;;  ap              2   70[COMRAM] PTR PTR void 
  2707 ;;		 -> sprintf@ap(2), 
  2708 ;; Auto vars:     Size  Location     Type
  2709 ;;  llu             8   84[COMRAM] unsigned long long 
  2710 ;;  ll              8   76[COMRAM] long long 
  2711 ;;  f               4    0        long long 
  2712 ;;  vp              3    0        PTR void 
  2713 ;;  ct              3    0        unsigned char [3]
  2714 ;;  cp              3    0        PTR unsigned char 
  2715 ;;  i               2    0        int 
  2716 ;;  done            2    0        int 
  2717 ;;  c               1   92[COMRAM] unsigned char 
  2718 ;; Return value:  Size  Location     Type
  2719 ;;                  2   66[COMRAM] int 
  2720 ;; Registers used:
  2721 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2727 ;;      Params:         6       0       0       0       0       0       0       0       0
  2728 ;;      Locals:        17       0       0       0       0       0       0       0       0
  2729 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2730 ;;      Totals:        27       0       0       0       0       0       0       0       0
  2731 ;;Total ram usage:       27 bytes
  2732 ;; Hardware stack levels used:    1
  2733 ;; Hardware stack levels required when called:    5
  2734 ;; This function calls:
  2735 ;;		_dtoa
  2736 ;;		_fputc
  2737 ;;		_xtoa
  2738 ;; This function is called by:
  2739 ;;		_vfprintf
  2740 ;; This function uses a non-reentrant model
  2741 ;;
  2742                           psect	text8,class=CODE,space=0,reloc=2,group=0
  2743                           	line	670
  2744                           global __ptext8
  2745                           __ptext8:
  2746  000E74                     psect	text8
  2747                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  2748                           	line	670
  2749                           	global	__size_of_vfpfcnvrt
  2750                           	__size_of_vfpfcnvrt	equ	__end_of_vfpfcnvrt-_vfpfcnvrt
  2751  0000                     	
  2752                           _vfpfcnvrt:; BSR set to: 0
  2753  000E74                     
  2754                           ;incstack = 0
  2755                           	opt	stack 22
  2756                           	line	680
  2757                           	
  2758                           l1844:
  2759  000E74                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 670: static
                                  int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
                                 2.00\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.00\
                                 pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
                                 rochip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
                                  (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  2760                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  2761  000E74  C045  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  2762  000E78  C046  FFDA         	movff	postinc2,tblptrl
  2763  000E7C  CFDE FFF6          	movff	postdec2,tblptrh
  2764  000E80  CFDD FFF7          	if	0	;tblptru may be non-zero
  2765  000E84                     	clrf	tblptru
  2767  000E84                     	if	0	;tblptru may be non-zero
  2768  000E84                     	global __mediumconst
  2769                           movlw	low highword(__mediumconst)
  2772  000E84                     	tblrd	*
  2773  000E84  0008               	
  2774                           	movf	tablat,w
  2775  000E86  50F5               	xorlw	025h
  2776  000E88  0A25               	btfss	status,2
  2777  000E8A  A4D8               	goto	u1491
  2778  000E8C  EF4A  F007         	goto	u1490
  2779  000E90  EF4C  F007         u1491:
  2780  000E94                     	goto	l1892
  2781  000E94  EF76  F008         u1490:
  2782  000E98                     	line	681
  2783                           	
  2784                           l1846:
  2785  000E98                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 681:       
                                   ++*fmt;
  2786                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  2787  000E98  C045  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  2788  000E9C  C046  FFDA         	incf	postinc2
  2789  000EA0  2ADE               	movlw	0
  2790  000EA2  0E00               	addwfc	postdec2
  2791  000EA4  22DD               	line	683
  2792                           	
  2793                           l1848:
  2794  000EA6                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 683:       
                                   flags = width = 0;
  2795                           	movlw	high(0)
  2796  000EA6  0E00               	movlb	0	; () banked
  2797  000EA8  0100               	movwf	((_width+1))&0ffh
  2798  000EAA  6F66               	movlw	low(0)
  2799  000EAC  0E00               	movwf	((_width))&0ffh
  2800  000EAE  6F65               	movff	(_width),(_flags)
  2801  000EB0  C065  F069         	movff	(_width+1),(_flags+1)
  2802  000EB4  C066  F06A         	line	684
  2803                           	
  2804                           l1850:; BSR set to: 0
  2805  000EB8                     
  2806                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 684:       
                                   prec = -1;
  2807                           	setf	((_prec))&0ffh
  2808  000EB8  6967               	setf	((_prec+1))&0ffh
  2809  000EBA  6968               	line	825
  2810                           	
  2811                           l1852:; BSR set to: 0
  2812  000EBC                     
  2813                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 825:       
                                   if ((*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  2814                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  2815  000EBC  C045  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  2816  000EC0  C046  FFDA         	movff	postinc2,tblptrl
  2817  000EC4  CFDE FFF6          	movff	postdec2,tblptrh
  2818  000EC8  CFDD FFF7          	if	0	;tblptru may be non-zero
  2819  000ECC                     	clrf	tblptru
  2821  000ECC                     	if	0	;tblptru may be non-zero
  2822  000ECC                     	global __mediumconst
  2823                           movlw	low highword(__mediumconst)
  2826  000ECC                     	tblrd	*
  2827  000ECC  0008               	
  2828                           	movf	tablat,w
  2829  000ECE  50F5               	xorlw	064h
  2830  000ED0  0A64               	btfsc	status,2
  2831  000ED2  B4D8               	goto	u1501
  2832  000ED4  EF6E  F007         	goto	u1500
  2833  000ED8  EF70  F007         u1501:
  2834  000EDC                     	goto	l1856
  2835  000EDC  EF84  F007         u1500:
  2836  000EE0                     	
  2837                           l1854:; BSR set to: 0
  2838  000EE0                     
  2839                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  2840  000EE0  C045  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  2841  000EE4  C046  FFDA         	movff	postinc2,tblptrl
  2842  000EE8  CFDE FFF6          	movff	postdec2,tblptrh
  2843  000EEC  CFDD FFF7          	if	0	;tblptru may be non-zero
  2844  000EF0                     	clrf	tblptru
  2846  000EF0                     	if	0	;tblptru may be non-zero
  2847  000EF0                     	global __mediumconst
  2848                           movlw	low highword(__mediumconst)
  2851  000EF0                     	tblrd	*
  2852  000EF0  0008               	
  2853                           	movf	tablat,w
  2854  000EF2  50F5               	xorlw	069h
  2855  000EF4  0A69               	btfss	status,2
  2856  000EF6  A4D8               	goto	u1511
  2857  000EF8  EF80  F007         	goto	u1510
  2858  000EFC  EF82  F007         u1511:
  2859  000F00                     	goto	l1862
  2860  000F00  EFC6  F007         u1510:
  2861  000F04                     	goto	l1856
  2862  000F04  EF84  F007         	
  2863                           l255:; BSR set to: 0
  2864  000F08                     
  2865                           	line	827
  2866                           	
  2867                           l1856:; BSR set to: 0
  2868  000F08                     
  2869                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 827:       
                                       ++*fmt;
  2870                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  2871  000F08  C045  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  2872  000F0C  C046  FFDA         	incf	postinc2
  2873  000F10  2ADE               	movlw	0
  2874  000F12  0E00               	addwfc	postdec2
  2875  000F14  22DD               	line	828
  2876                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 828:       
                                       ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  2877                           	movff	(c:vfpfcnvrt@ap),fsr2l
  2878  000F16  C047  FFD9         	movff	(c:vfpfcnvrt@ap+1),fsr2h
  2879  000F1A  C048  FFDA         	movff	indf2,??_vfpfcnvrt+0+0
  2880  000F1E  CFDF F049          	movlw	low(02h)
  2881  000F22  0E02               	addwf	postinc2
  2882  000F24  26DE               	movff	indf2,??_vfpfcnvrt+0+0+1
  2883  000F26  CFDF F04A          	movlw	high(02h)
  2884  000F2A  0E00               	addwfc	postdec2
  2885  000F2C  22DD               	movff	??_vfpfcnvrt+0+0,fsr2l
  2886  000F2E  C049  FFD9         	movff	??_vfpfcnvrt+0+1,fsr2h
  2887  000F32  C04A  FFDA         	movff	postinc2,(c:vfpfcnvrt@ll)
  2888  000F36  CFDE F04D          	movff	postdec2,(c:vfpfcnvrt@ll+1)
  2889  000F3A  CFDD F04E          	movlw	0
  2890  000F3E  0E00               	btfsc	((c:vfpfcnvrt@ll+1)),c,7
  2891  000F40  BE4E               	movlw	-1
  2892  000F42  0EFF               	movwf	((c:vfpfcnvrt@ll+2)),c
  2893  000F44  6E4F               	movwf	((c:vfpfcnvrt@ll+3)),c
  2894  000F46  6E50               	movwf	((c:vfpfcnvrt@ll+4)),c
  2895  000F48  6E51               	movwf	((c:vfpfcnvrt@ll+5)),c
  2896  000F4A  6E52               	movwf	((c:vfpfcnvrt@ll+6)),c
  2897  000F4C  6E53               	movwf	((c:vfpfcnvrt@ll+7)),c
  2898  000F4E  6E54               	line	830
  2899                           	
  2900                           l1858:; BSR set to: 0
  2901  000F50                     
  2902                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 830:       
                                       return dtoa(fp, ll);
  2903                           		movff	(c:vfpfcnvrt@fp),(c:dtoa@fp)
  2904  000F50  C043  F01C         	movff	(c:vfpfcnvrt@fp+1),(c:dtoa@fp+1)
  2905  000F54  C044  F01D         
  2906                           	movff	(c:vfpfcnvrt@ll),(c:dtoa@d)
  2907  000F58  C04D  F01E         	movff	(c:vfpfcnvrt@ll+1),(c:dtoa@d+1)
  2908  000F5C  C04E  F01F         	movff	(c:vfpfcnvrt@ll+2),(c:dtoa@d+2)
  2909  000F60  C04F  F020         	movff	(c:vfpfcnvrt@ll+3),(c:dtoa@d+3)
  2910  000F64  C050  F021         	movff	(c:vfpfcnvrt@ll+4),(c:dtoa@d+4)
  2911  000F68  C051  F022         	movff	(c:vfpfcnvrt@ll+5),(c:dtoa@d+5)
  2912  000F6C  C052  F023         	movff	(c:vfpfcnvrt@ll+6),(c:dtoa@d+6)
  2913  000F70  C053  F024         	movff	(c:vfpfcnvrt@ll+7),(c:dtoa@d+7)
  2914  000F74  C054  F025         	call	_dtoa	;wreg free
  2915  000F78  ECAB  F005         	movff	0+?_dtoa,(c:?_vfpfcnvrt)
  2916  000F7C  C01C  F043         	movff	1+?_dtoa,(c:?_vfpfcnvrt+1)
  2917  000F80  C01D  F044         	goto	l256
  2918  000F84  EF95  F008         	
  2919                           l1860:
  2920  000F88                     	goto	l256
  2921  000F88  EF95  F008         	line	831
  2922                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 831:       
                                   }
  2923                           	
  2924                           l253:
  2925  000F8C                     	line	1274
  2926                           	
  2927                           l1862:
  2928  000F8C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1274:      
                                    if ((*fmt[0] == 'x') || (*fmt[0] == 'X')) {
  2929                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  2930  000F8C  C045  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  2931  000F90  C046  FFDA         	movff	postinc2,tblptrl
  2932  000F94  CFDE FFF6          	movff	postdec2,tblptrh
  2933  000F98  CFDD FFF7          	if	0	;tblptru may be non-zero
  2934  000F9C                     	clrf	tblptru
  2936  000F9C                     	if	0	;tblptru may be non-zero
  2937  000F9C                     	global __mediumconst
  2938                           movlw	low highword(__mediumconst)
  2941  000F9C                     	tblrd	*
  2942  000F9C  0008               	
  2943                           	movf	tablat,w
  2944  000F9E  50F5               	xorlw	078h
  2945  000FA0  0A78               	btfsc	status,2
  2946  000FA2  B4D8               	goto	u1521
  2947  000FA4  EFD6  F007         	goto	u1520
  2948  000FA8  EFD8  F007         u1521:
  2949  000FAC                     	goto	l1866
  2950  000FAC  EFEC  F007         u1520:
  2951  000FB0                     	
  2952                           l1864:
  2953  000FB0                     	movff	(c:vfpfcnvrt@fmt),fsr2l
  2954  000FB0  C045  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  2955  000FB4  C046  FFDA         	movff	postinc2,tblptrl
  2956  000FB8  CFDE FFF6          	movff	postdec2,tblptrh
  2957  000FBC  CFDD FFF7          	if	0	;tblptru may be non-zero
  2958  000FC0                     	clrf	tblptru
  2960  000FC0                     	if	0	;tblptru may be non-zero
  2961  000FC0                     	global __mediumconst
  2962                           movlw	low highword(__mediumconst)
  2965  000FC0                     	tblrd	*
  2966  000FC0  0008               	
  2967                           	movf	tablat,w
  2968  000FC2  50F5               	xorlw	058h
  2969  000FC4  0A58               	btfss	status,2
  2970  000FC6  A4D8               	goto	u1531
  2971  000FC8  EFE8  F007         	goto	u1530
  2972  000FCC  EFEA  F007         u1531:
  2973  000FD0                     	goto	l1876
  2974  000FD0  EF3C  F008         u1530:
  2975  000FD4                     	goto	l1866
  2976  000FD4  EFEC  F007         	
  2977                           l259:
  2978  000FD8                     	line	1276
  2979                           	
  2980                           l1866:
  2981  000FD8                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1276:      
                                        c = (*fmt)[0];
  2982                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  2983  000FD8  C045  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  2984  000FDC  C046  FFDA         	movff	postinc2,tblptrl
  2985  000FE0  CFDE FFF6          	movff	postdec2,tblptrh
  2986  000FE4  CFDD FFF7          	if	0	;tblptru may be non-zero
  2987  000FE8                     	clrf	tblptru
  2989  000FE8                     	if	0	;tblptru may be non-zero
  2990  000FE8                     	global __mediumconst
  2991                           movlw	low highword(__mediumconst)
  2994  000FE8                     	tblrd	*
  2995  000FE8  0008               	
  2996                           	movff	tablat,(c:vfpfcnvrt@c)
  2997  000FEA  CFF5 F05D          	line	1277
  2998                           	
  2999                           l1868:
  3000  000FEE                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1277:      
                                        ++*fmt;
  3001                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  3002  000FEE  C045  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  3003  000FF2  C046  FFDA         	incf	postinc2
  3004  000FF6  2ADE               	movlw	0
  3005  000FF8  0E00               	addwfc	postdec2
  3006  000FFA  22DD               	line	1278
  3007                           	
  3008                           l1870:
  3009  000FFC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1278:      
                                        llu = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsig
                                 ned int)0));
  3010                           	movff	(c:vfpfcnvrt@ap),fsr2l
  3011  000FFC  C047  FFD9         	movff	(c:vfpfcnvrt@ap+1),fsr2h
  3012  001000  C048  FFDA         	movff	indf2,??_vfpfcnvrt+0+0
  3013  001004  CFDF F049          	movlw	low(02h)
  3014  001008  0E02               	addwf	postinc2
  3015  00100A  26DE               	movff	indf2,??_vfpfcnvrt+0+0+1
  3016  00100C  CFDF F04A          	movlw	high(02h)
  3017  001010  0E00               	addwfc	postdec2
  3018  001012  22DD               	movff	??_vfpfcnvrt+0+0,fsr2l
  3019  001014  C049  FFD9         	movff	??_vfpfcnvrt+0+1,fsr2h
  3020  001018  C04A  FFDA         	movff	postinc2,??_vfpfcnvrt+2+0
  3021  00101C  CFDE F04B          	movff	postdec2,??_vfpfcnvrt+2+0+1
  3022  001020  CFDD F04C          	movff	??_vfpfcnvrt+2+0,(c:vfpfcnvrt@llu)
  3023  001024  C04B  F055         	movff	??_vfpfcnvrt+2+1,(c:vfpfcnvrt@llu+1)
  3024  001028  C04C  F056         	clrf	((c:vfpfcnvrt@llu+2)),c
  3025  00102C  6A57               	clrf	((c:vfpfcnvrt@llu+3)),c
  3026  00102E  6A58               	clrf	((c:vfpfcnvrt@llu+4)),c
  3027  001030  6A59               	clrf	((c:vfpfcnvrt@llu+5)),c
  3028  001032  6A5A               	clrf	((c:vfpfcnvrt@llu+6)),c
  3029  001034  6A5B               	clrf	((c:vfpfcnvrt@llu+7)),c
  3030  001036  6A5C               
  3031                           	line	1280
  3032                           	
  3033                           l1872:
  3034  001038                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1280:      
                                        return xtoa(fp, llu, c);
  3035                           		movff	(c:vfpfcnvrt@fp),(c:xtoa@fp)
  3036  001038  C043  F01C         	movff	(c:vfpfcnvrt@fp+1),(c:xtoa@fp+1)
  3037  00103C  C044  F01D         
  3038                           	movff	(c:vfpfcnvrt@llu),(c:xtoa@d)
  3039  001040  C055  F01E         	movff	(c:vfpfcnvrt@llu+1),(c:xtoa@d+1)
  3040  001044  C056  F01F         	movff	(c:vfpfcnvrt@llu+2),(c:xtoa@d+2)
  3041  001048  C057  F020         	movff	(c:vfpfcnvrt@llu+3),(c:xtoa@d+3)
  3042  00104C  C058  F021         	movff	(c:vfpfcnvrt@llu+4),(c:xtoa@d+4)
  3043  001050  C059  F022         	movff	(c:vfpfcnvrt@llu+5),(c:xtoa@d+5)
  3044  001054  C05A  F023         	movff	(c:vfpfcnvrt@llu+6),(c:xtoa@d+6)
  3045  001058  C05B  F024         	movff	(c:vfpfcnvrt@llu+7),(c:xtoa@d+7)
  3046  00105C  C05C  F025         	movff	(c:vfpfcnvrt@c),(c:xtoa@x)
  3047  001060  C05D  F026         	call	_xtoa	;wreg free
  3048  001064  EC0E  F004         	movff	0+?_xtoa,(c:?_vfpfcnvrt)
  3049  001068  C01C  F043         	movff	1+?_xtoa,(c:?_vfpfcnvrt+1)
  3050  00106C  C01D  F044         	goto	l256
  3051  001070  EF95  F008         	
  3052                           l1874:
  3053  001074                     	goto	l256
  3054  001074  EF95  F008         	line	1281
  3055                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1281:      
                                    }
  3056                           	
  3057                           l257:
  3058  001078                     	line	1350
  3059                           	
  3060                           l1876:
  3061  001078                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1350:      
                                    if ((*fmt)[0] == '%') {
  3062                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  3063  001078  C045  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  3064  00107C  C046  FFDA         	movff	postinc2,tblptrl
  3065  001080  CFDE FFF6          	movff	postdec2,tblptrh
  3066  001084  CFDD FFF7          	if	0	;tblptru may be non-zero
  3067  001088                     	clrf	tblptru
  3069  001088                     	if	0	;tblptru may be non-zero
  3070  001088                     	global __mediumconst
  3071                           movlw	low highword(__mediumconst)
  3074  001088                     	tblrd	*
  3075  001088  0008               	
  3076                           	movf	tablat,w
  3077  00108A  50F5               	xorlw	025h
  3078  00108C  0A25               	btfss	status,2
  3079  00108E  A4D8               	goto	u1541
  3080  001090  EF4C  F008         	goto	u1540
  3081  001094  EF4E  F008         u1541:
  3082  001098                     	goto	l1886
  3083  001098  EF67  F008         u1540:
  3084  00109C                     	line	1351
  3085                           	
  3086                           l1878:
  3087  00109C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1351:      
                                        ++*fmt;
  3088                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  3089  00109C  C045  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  3090  0010A0  C046  FFDA         	incf	postinc2
  3091  0010A4  2ADE               	movlw	0
  3092  0010A6  0E00               	addwfc	postdec2
  3093  0010A8  22DD               	line	1352
  3094                           	
  3095                           l1880:
  3096  0010AA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1352:      
                                        fputc((int)'%', fp);
  3097                           	movlw	high(025h)
  3098  0010AA  0E00               	movwf	((c:fputc@c+1)),c
  3099  0010AC  6E02               	movlw	low(025h)
  3100  0010AE  0E25               	movwf	((c:fputc@c)),c
  3101  0010B0  6E01               		movff	(c:vfpfcnvrt@fp),(c:fputc@fp)
  3102  0010B2  C043  F003         	movff	(c:vfpfcnvrt@fp+1),(c:fputc@fp+1)
  3103  0010B6  C044  F004         
  3104                           	call	_fputc	;wreg free
  3105  0010BA  EC34  F00A         	line	1353
  3106                           	
  3107                           l1882:
  3108  0010BE                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1353:      
                                        return 1;
  3109                           	movlw	high(01h)
  3110  0010BE  0E00               	movwf	((c:?_vfpfcnvrt+1)),c
  3111  0010C0  6E44               	movlw	low(01h)
  3112  0010C2  0E01               	movwf	((c:?_vfpfcnvrt)),c
  3113  0010C4  6E43               	goto	l256
  3114  0010C6  EF95  F008         	
  3115                           l1884:
  3116  0010CA                     	goto	l256
  3117  0010CA  EF95  F008         	line	1354
  3118                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1354:      
                                    }
  3119                           	
  3120                           l260:
  3121  0010CE                     	line	1357
  3122                           	
  3123                           l1886:
  3124  0010CE                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1357:      
                                    ++*fmt;
  3125                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  3126  0010CE  C045  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  3127  0010D2  C046  FFDA         	incf	postinc2
  3128  0010D6  2ADE               	movlw	0
  3129  0010D8  0E00               	addwfc	postdec2
  3130  0010DA  22DD               	line	1358
  3131                           	
  3132                           l1888:
  3133  0010DC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1358:      
                                    return 0;
  3134                           	movlw	high(0)
  3135  0010DC  0E00               	movwf	((c:?_vfpfcnvrt+1)),c
  3136  0010DE  6E44               	movlw	low(0)
  3137  0010E0  0E00               	movwf	((c:?_vfpfcnvrt)),c
  3138  0010E2  6E43               	goto	l256
  3139  0010E4  EF95  F008         	
  3140                           l1890:
  3141  0010E8                     	goto	l256
  3142  0010E8  EF95  F008         	line	1359
  3143                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1359:     }
                                 
  3144                           	
  3145                           l252:
  3146  0010EC                     	line	1362
  3147                           	
  3148                           l1892:
  3149  0010EC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1362:     f
                                 putc((int)(*fmt)[0], fp);
  3150                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  3151  0010EC  C045  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  3152  0010F0  C046  FFDA         	movff	postinc2,tblptrl
  3153  0010F4  CFDE FFF6          	movff	postdec2,tblptrh
  3154  0010F8  CFDD FFF7          	if	0	;tblptru may be non-zero
  3155  0010FC                     	clrf	tblptru
  3157  0010FC                     	if	0	;tblptru may be non-zero
  3158  0010FC                     	global __mediumconst
  3159                           movlw	low highword(__mediumconst)
  3162  0010FC                     	tblrd	*
  3163  0010FC  0008               	
  3164                           	movf	tablat,w
  3165  0010FE  50F5               
  3166                           	movwf	((c:fputc@c)),c
  3167  001100  6E01               	clrf	((c:fputc@c+1)),c
  3168  001102  6A02               		movff	(c:vfpfcnvrt@fp),(c:fputc@fp)
  3169  001104  C043  F003         	movff	(c:vfpfcnvrt@fp+1),(c:fputc@fp+1)
  3170  001108  C044  F004         
  3171                           	call	_fputc	;wreg free
  3172  00110C  EC34  F00A         	line	1363
  3173                           	
  3174                           l1894:
  3175  001110                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1363:     +
                                 +*fmt;
  3176                           	movff	(c:vfpfcnvrt@fmt),fsr2l
  3177  001110  C045  FFD9         	movff	(c:vfpfcnvrt@fmt+1),fsr2h
  3178  001114  C046  FFDA         	incf	postinc2
  3179  001118  2ADE               	movlw	0
  3180  00111A  0E00               	addwfc	postdec2
  3181  00111C  22DD               	line	1364
  3182                           	
  3183                           l1896:
  3184  00111E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 1364:     r
                                 eturn 1;
  3185                           	movlw	high(01h)
  3186  00111E  0E00               	movwf	((c:?_vfpfcnvrt+1)),c
  3187  001120  6E44               	movlw	low(01h)
  3188  001122  0E01               	movwf	((c:?_vfpfcnvrt)),c
  3189  001124  6E43               	goto	l256
  3190  001126  EF95  F008         	
  3191                           l1898:
  3192  00112A                     	line	1365
  3193                           	
  3194                           l256:
  3195  00112A                     	return	;funcret
  3196  00112A  0012               	opt stack 0
  3197                           GLOBAL	__end_of_vfpfcnvrt
  3198                           	__end_of_vfpfcnvrt:
  3199  00112C                     	signat	_vfpfcnvrt,12410
  3200                           	global	_xtoa
  3201                           
  3202 ;; *************** function _xtoa *****************
  3203 ;; Defined at:
  3204 ;;		line 623 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  3205 ;; Parameters:    Size  Location     Type
  3206 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3207 ;;		 -> sprintf@f(6), 
  3208 ;;  d               8   29[COMRAM] unsigned long long 
  3209 ;;  x               1   37[COMRAM] unsigned char 
  3210 ;; Auto vars:     Size  Location     Type
  3211 ;;  n               8   54[COMRAM] unsigned long long 
  3212 ;;  c               2   64[COMRAM] int 
  3213 ;;  i               2   62[COMRAM] int 
  3214 ;;  w               2   52[COMRAM] int 
  3215 ;;  p               2   50[COMRAM] int 
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  2   27[COMRAM] int 
  3218 ;; Registers used:
  3219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3225 ;;      Params:        11       0       0       0       0       0       0       0       0
  3226 ;;      Locals:        20       0       0       0       0       0       0       0       0
  3227 ;;      Temps:          8       0       0       0       0       0       0       0       0
  3228 ;;      Totals:        39       0       0       0       0       0       0       0       0
  3229 ;;Total ram usage:       39 bytes
  3230 ;; Hardware stack levels used:    1
  3231 ;; Hardware stack levels required when called:    4
  3232 ;; This function calls:
  3233 ;;		_isalpha
  3234 ;;		_isupper
  3235 ;;		_pad
  3236 ;;		_toupper
  3237 ;; This function is called by:
  3238 ;;		_vfpfcnvrt
  3239 ;; This function uses a non-reentrant model
  3240 ;;
  3241                           psect	text9,class=CODE,space=0,reloc=2,group=0
  3242                           	line	623
  3243                           global __ptext9
  3244                           __ptext9:
  3245  00081C                     psect	text9
  3246                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  3247                           	line	623
  3248                           	global	__size_of_xtoa
  3249                           	__size_of_xtoa	equ	__end_of_xtoa-_xtoa
  3250  0000                     	
  3251                           _xtoa:
  3252  00081C                     ;incstack = 0
  3253                           	opt	stack 22
  3254                           	line	629
  3255                           	
  3256                           l1772:
  3257  00081C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 623: static
                                  int xtoa(FILE *fp, unsigned long long d, char x);C:\Program Files (x86)\Microchip\xc8\v
                                 2.00\pic\sources\c99\common\doprnt.c: 624: {;C:\Program Files (x86)\Microchip\xc8\v2.00\
                                 pic\sources\c99\common\doprnt.c: 625:     int c, i, p, w;;C:\Program Files (x86)\Microch
                                 ip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 626:     unsigned long long n;;C:\Program 
                                 Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 629:     if (!(prec < 0
                                 )) {
  3258                           	movlb	0	; () banked
  3259  00081C  0100               	btfsc	((_prec+1))&0ffh,7
  3260  00081E  BF68               	goto	u1301
  3261  000820  EF14  F004         	goto	u1300
  3262  000824  EF16  F004         
  3263                           u1301:
  3264  000828                     	goto	l1776
  3265  000828  EF19  F004         u1300:
  3266  00082C                     	line	630
  3267                           	
  3268                           l1774:; BSR set to: 0
  3269  00082C                     
  3270                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 630:       
                                   flags &= ~(1 << 1);
  3271                           	bcf	(0+(1/8)+(_flags))&0ffh,(1)&7
  3272  00082C  9369               	goto	l1776
  3273  00082E  EF19  F004         	line	631
  3274                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 631:     }

  3275                           	
  3276                           l222:; BSR set to: 0
  3277  000832                     
  3278                           	line	632
  3279                           	
  3280                           l1776:; BSR set to: 0
  3281  000832                     
  3282                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 632:     p 
                                 = (0 < prec) ? prec : 1;
  3283                           	btfsc	((_prec+1))&0ffh,7
  3284  000832  BF68               	goto	u1310
  3285  000834  EF26  F004         	movf	((_prec+1))&0ffh,w
  3286  000838  5168               	bnz	u1311
  3287  00083A  E106               	decf	((_prec))&0ffh,w
  3288  00083C  0567               	btfsc	status,0
  3289  00083E  B0D8               	goto	u1311
  3290  000840  EF24  F004         	goto	u1310
  3291  000844  EF26  F004         
  3292                           u1311:
  3293  000848                     	goto	l224
  3294  000848  EF2C  F004         u1310:
  3295  00084C                     	
  3296                           l1778:; BSR set to: 0
  3297  00084C                     
  3298                           	movlw	high(01h)
  3299  00084C  0E00               	movwf	((c:xtoa@p+1)),c
  3300  00084E  6E34               	movlw	low(01h)
  3301  000850  0E01               	movwf	((c:xtoa@p)),c
  3302  000852  6E33               	goto	l226
  3303  000854  EF30  F004         	
  3304                           l224:; BSR set to: 0
  3305  000858                     
  3306                           	movff	(_prec),(c:xtoa@p)
  3307  000858  C067  F033         	movff	(_prec+1),(c:xtoa@p+1)
  3308  00085C  C068  F034         	
  3309                           l226:; BSR set to: 0
  3310  000860                     
  3311                           	line	633
  3312                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 633:     w 
                                 = width;
  3313                           	movff	(_width),(c:xtoa@w)
  3314  000860  C065  F035         	movff	(_width+1),(c:xtoa@w+1)
  3315  000864  C066  F036         	line	634
  3316                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 634:     if
                                  (flags & (1 << 4)) {
  3317                           	
  3318                           	btfss	((_flags))&0ffh,(4)&7
  3319  000868  A969               	goto	u1321
  3320  00086A  EF39  F004         	goto	u1320
  3321  00086E  EF3B  F004         u1321:
  3322  000872                     	goto	l1782
  3323  000872  EF41  F004         u1320:
  3324  000876                     	line	635
  3325                           	
  3326                           l1780:; BSR set to: 0
  3327  000876                     
  3328                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 635:       
                                   w -= 2;
  3329                           	movlw	low(-2)
  3330  000876  0EFE               	addwf	((c:xtoa@w)),c
  3331  000878  2635               	movlw	high(-2)
  3332  00087A  0EFF               	addwfc	((c:xtoa@w+1)),c
  3333  00087C  2236               	goto	l1782
  3334  00087E  EF41  F004         	line	636
  3335                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 636:     }

  3336                           	
  3337                           l227:; BSR set to: 0
  3338  000882                     
  3339                           	line	639
  3340                           	
  3341                           l1782:; BSR set to: 0
  3342  000882                     
  3343                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 639:     n 
                                 = d;
  3344                           	movff	(c:xtoa@d),(c:xtoa@n)
  3345  000882  C01E  F037         	movff	(c:xtoa@d+1),(c:xtoa@n+1)
  3346  000886  C01F  F038         	movff	(c:xtoa@d+2),(c:xtoa@n+2)
  3347  00088A  C020  F039         	movff	(c:xtoa@d+3),(c:xtoa@n+3)
  3348  00088E  C021  F03A         	movff	(c:xtoa@d+4),(c:xtoa@n+4)
  3349  000892  C022  F03B         	movff	(c:xtoa@d+5),(c:xtoa@n+5)
  3350  000896  C023  F03C         	movff	(c:xtoa@d+6),(c:xtoa@n+6)
  3351  00089A  C024  F03D         	movff	(c:xtoa@d+7),(c:xtoa@n+7)
  3352  00089E  C025  F03E         	line	640
  3353                           	
  3354                           l1784:; BSR set to: 0
  3355  0008A2                     
  3356                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 640:     i 
                                 = sizeof(dbuf) - 1;
  3357                           	movlw	high(01Fh)
  3358  0008A2  0E00               	movwf	((c:xtoa@i+1)),c
  3359  0008A4  6E40               	movlw	low(01Fh)
  3360  0008A6  0E1F               	movwf	((c:xtoa@i)),c
  3361  0008A8  6E3F               	line	641
  3362                           	
  3363                           l1786:; BSR set to: 0
  3364  0008AA                     
  3365                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 641:     db
                                 uf[i] = '\0';
  3366                           	movlw	low(_dbuf)
  3367  0008AA  0E6F               	addwf	((c:xtoa@i)),c,w
  3368  0008AC  243F               	movwf	c:fsr2l
  3369  0008AE  6ED9               	movlw	high(_dbuf)
  3370  0008B0  0E00               	addwfc	((c:xtoa@i+1)),c,w
  3371  0008B2  2040               	movwf	1+c:fsr2l
  3372  0008B4  6EDA               	movlw	low(0)
  3373  0008B6  0E00               	movwf	indf2
  3374  0008B8  6EDF               	line	642
  3375                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 642:     wh
                                 ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3376                           	goto	l1818
  3377  0008BA  EF31  F005         	
  3378                           l229:; BSR set to: 0
  3379  0008BE                     
  3380                           	line	643
  3381                           	
  3382                           l1788:
  3383  0008BE                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 643:       
                                   --i;
  3384                           	decf	((c:xtoa@i)),c
  3385  0008BE  063F               	btfss	status,0
  3386  0008C0  A0D8               	decf	((c:xtoa@i+1)),c
  3387  0008C2  0640               	line	644
  3388                           	
  3389                           l1790:
  3390  0008C4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 644:       
                                   c = n & 0x0f;
  3391                           	movlw	0Fh
  3392  0008C4  0E0F               	andwf	((c:xtoa@n)),c,w
  3393  0008C6  1437               	movwf	((c:xtoa@c)),c
  3394  0008C8  6E41               	clrf	1+((c:xtoa@c)),c
  3395  0008CA  6A42               	line	645
  3396                           	
  3397                           l1792:
  3398  0008CC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 645:       
                                   c = (c < 10) ? '0' + c : 'a' + (c - 10);
  3399                           	btfsc	((c:xtoa@c+1)),c,7
  3400  0008CC  BE42               	goto	u1331
  3401  0008CE  EF72  F004         	movf	((c:xtoa@c+1)),c,w
  3402  0008D2  5042               	bnz	u1330
  3403  0008D4  E109               	movlw	10
  3404  0008D6  0E0A               	subwf	 ((c:xtoa@c)),c,w
  3405  0008D8  5C41               	btfss	status,0
  3406  0008DA  A0D8               	goto	u1331
  3407  0008DC  EF72  F004         	goto	u1330
  3408  0008E0  EF74  F004         
  3409                           u1331:
  3410  0008E4                     	goto	l1796
  3411  0008E4  EF7C  F004         u1330:
  3412  0008E8                     	
  3413                           l1794:
  3414  0008E8                     	movlw	low(057h)
  3415  0008E8  0E57               	addwf	((c:xtoa@c)),c,w
  3416  0008EA  2441               	movwf	((c:xtoa@c)),c
  3417  0008EC  6E41               	movlw	high(057h)
  3418  0008EE  0E00               	addwfc	((c:xtoa@c+1)),c,w
  3419  0008F0  2042               	movwf	1+((c:xtoa@c)),c
  3420  0008F2  6E42               	goto	l233
  3421  0008F4  EF82  F004         	
  3422                           l231:
  3423  0008F8                     	
  3424                           l1796:
  3425  0008F8                     	movlw	low(030h)
  3426  0008F8  0E30               	addwf	((c:xtoa@c)),c,w
  3427  0008FA  2441               	movwf	((c:xtoa@c)),c
  3428  0008FC  6E41               	movlw	high(030h)
  3429  0008FE  0E00               	addwfc	((c:xtoa@c+1)),c,w
  3430  000900  2042               	movwf	1+((c:xtoa@c)),c
  3431  000902  6E42               ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 646:       
                                   if ((0 ? isupper((int)x) : ((unsigned)((int)x)-'A') < 26) && (0 ? isalpha(c) : (((unsi
                                 gned)(c)|32)-'a') < 26)) {
  3432                           	
  3433                           l233:
  3434  000904                     	line	646
  3435                           	movlw	low(0FFBFh)
  3436  000904  0EBF               	movwf	(??_xtoa+0+0)&0ffh,c
  3437  000906  6E27               	movlw	high(0FFBFh)
  3438  000908  0EFF               	movwf	1+(??_xtoa+0+0)&0ffh,c
  3439  00090A  6E28               	movf	((c:xtoa@x)),c,w
  3440  00090C  5026               	movwf	(??_xtoa+2+0)&0ffh,c
  3441  00090E  6E29               	clrf	(??_xtoa+2+0+1)&0ffh,c
  3442  000910  6A2A               
  3443                           	movf	(??_xtoa+0+0),c,w
  3444  000912  5027               	addwf	(??_xtoa+2+0),c
  3445  000914  2629               	movf	(??_xtoa+0+1),c,w
  3446  000916  5028               	addwfc	(??_xtoa+2+1),c
  3447  000918  222A               		movf	(??_xtoa+2+1),c,w
  3448  00091A  502A               	bnz	u1340
  3449  00091C  E10A               	movlw	26
  3450  00091E  0E1A               	subwf	 (??_xtoa+2+0),c,w
  3451  000920  5C29               	btfss	status,0
  3452  000922  A0D8               	goto	u1341
  3453  000924  EF96  F004         	goto	u1340
  3454  000928  EF99  F004         
  3455                           u1341:
  3456  00092C                     	movlw	1
  3457  00092C  0E01               	goto	u1350
  3458  00092E  EF9A  F004         u1340:
  3459  000932                     	movlw	0
  3460  000932  0E00               u1350:
  3461  000934                     	movwf	((c:_xtoa$390)),c
  3462  000934  6E2F               	clrf	((c:_xtoa$390+1)),c
  3463  000936  6A30               	goto	l1800
  3464  000938  EFA9  F004         	
  3465                           l236:
  3466  00093C                     	
  3467                           l1798:
  3468  00093C                     	movff	(c:xtoa@x),(c:isupper@c)
  3469  00093C  C026  F001         	clrf	((c:isupper@c+1)),c
  3470  000940  6A02               	call	_isupper	;wreg free
  3471  000942  EC69  F00E         	movff	0+?_isupper,(c:_xtoa$390)
  3472  000946  C001  F02F         	movff	1+?_isupper,(c:_xtoa$390+1)
  3473  00094A  C002  F030         	goto	l1800
  3474  00094E  EFA9  F004         	
  3475                           l238:
  3476  000952                     	
  3477                           l1800:
  3478  000952                     	movf	((c:_xtoa$390)),c,w
  3479  000952  502F               iorwf	((c:_xtoa$390+1)),c,w
  3480  000954  1030               	btfsc	status,2
  3481  000956  B4D8               	goto	u1361
  3482  000958  EFB0  F004         	goto	u1360
  3483  00095C  EFB2  F004         
  3484                           u1361:
  3485  000960                     	goto	l1810
  3486  000960  EFF2  F004         u1360:
  3487  000964                     	
  3488                           l1802:
  3489  000964                     	movlw	low(0FF9Fh)
  3490  000964  0E9F               	movwf	(??_xtoa+0+0)&0ffh,c
  3491  000966  6E27               	movlw	high(0FF9Fh)
  3492  000968  0EFF               	movwf	1+(??_xtoa+0+0)&0ffh,c
  3493  00096A  6E28               	movlw	020h
  3494  00096C  0E20               	iorwf	((c:xtoa@c)),c,w
  3495  00096E  1041               	movwf	(??_xtoa+2+0)&0ffh,c
  3496  000970  6E29               	movlw	0
  3497  000972  0E00               	iorwf	((c:xtoa@c+1)),c,w
  3498  000974  1042               	movwf	(??_xtoa+2+0+1)&0ffh,c
  3499  000976  6E2A               	movf	(??_xtoa+0+0),c,w
  3500  000978  5027               	addwf	(??_xtoa+2+0),c
  3501  00097A  2629               	movf	(??_xtoa+0+1),c,w
  3502  00097C  5028               	addwfc	(??_xtoa+2+1),c
  3503  00097E  222A               		movf	(??_xtoa+2+1),c,w
  3504  000980  502A               	bnz	u1370
  3505  000982  E10A               	movlw	26
  3506  000984  0E1A               	subwf	 (??_xtoa+2+0),c,w
  3507  000986  5C29               	btfss	status,0
  3508  000988  A0D8               	goto	u1371
  3509  00098A  EFC9  F004         	goto	u1370
  3510  00098E  EFCC  F004         
  3511                           u1371:
  3512  000992                     	movlw	1
  3513  000992  0E01               	goto	u1380
  3514  000994  EFCD  F004         u1370:
  3515  000998                     	movlw	0
  3516  000998  0E00               u1380:
  3517  00099A                     	movwf	((c:_xtoa$391)),c
  3518  00099A  6E31               	clrf	((c:_xtoa$391+1)),c
  3519  00099C  6A32               	goto	l1806
  3520  00099E  EFDD  F004         	
  3521                           l240:
  3522  0009A2                     	
  3523                           l1804:
  3524  0009A2                     	movff	(c:xtoa@c),(c:isalpha@c)
  3525  0009A2  C041  F001         	movff	(c:xtoa@c+1),(c:isalpha@c+1)
  3526  0009A6  C042  F002         	call	_isalpha	;wreg free
  3527  0009AA  EC2B  F00E         	movff	0+?_isalpha,(c:_xtoa$391)
  3528  0009AE  C001  F031         	movff	1+?_isalpha,(c:_xtoa$391+1)
  3529  0009B2  C002  F032         	goto	l1806
  3530  0009B6  EFDD  F004         	
  3531                           l242:
  3532  0009BA                     	
  3533                           l1806:
  3534  0009BA                     	movf	((c:_xtoa$391)),c,w
  3535  0009BA  5031               iorwf	((c:_xtoa$391+1)),c,w
  3536  0009BC  1032               	btfsc	status,2
  3537  0009BE  B4D8               	goto	u1391
  3538  0009C0  EFE4  F004         	goto	u1390
  3539  0009C4  EFE6  F004         
  3540                           u1391:
  3541  0009C8                     	goto	l1810
  3542  0009C8  EFF2  F004         u1390:
  3543  0009CC                     	line	647
  3544                           	
  3545                           l1808:
  3546  0009CC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 647:       
                                       c = toupper(c);
  3547                           	movff	(c:xtoa@c),(c:toupper@c)
  3548  0009CC  C041  F007         	movff	(c:xtoa@c+1),(c:toupper@c+1)
  3549  0009D0  C042  F008         	call	_toupper	;wreg free
  3550  0009D4  ECDC  F00B         	movff	0+?_toupper,(c:xtoa@c)
  3551  0009D8  C007  F041         	movff	1+?_toupper,(c:xtoa@c+1)
  3552  0009DC  C008  F042         	goto	l1810
  3553  0009E0  EFF2  F004         	line	648
  3554                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 648:       
                                   }
  3555                           	
  3556                           l234:
  3557  0009E4                     	line	649
  3558                           	
  3559                           l1810:
  3560  0009E4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 649:       
                                   dbuf[i] = (char)c;
  3561                           	movlw	low(_dbuf)
  3562  0009E4  0E6F               	addwf	((c:xtoa@i)),c,w
  3563  0009E6  243F               	movwf	c:fsr2l
  3564  0009E8  6ED9               	movlw	high(_dbuf)
  3565  0009EA  0E00               	addwfc	((c:xtoa@i+1)),c,w
  3566  0009EC  2040               	movwf	1+c:fsr2l
  3567  0009EE  6EDA               	movff	(c:xtoa@c),indf2
  3568  0009F0  C041  FFDF         
  3569                           	line	650
  3570                           	
  3571                           l1812:
  3572  0009F4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 650:       
                                   --p;
  3573                           	decf	((c:xtoa@p)),c
  3574  0009F4  0633               	btfss	status,0
  3575  0009F6  A0D8               	decf	((c:xtoa@p+1)),c
  3576  0009F8  0634               	line	651
  3577                           	
  3578                           l1814:
  3579  0009FA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 651:       
                                   --w;
  3580                           	decf	((c:xtoa@w)),c
  3581  0009FA  0635               	btfss	status,0
  3582  0009FC  A0D8               	decf	((c:xtoa@w+1)),c
  3583  0009FE  0636               	line	652
  3584                           	
  3585                           l1816:
  3586  000A00                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 652:       
                                   n = n >> 4;
  3587                           	movff	(c:xtoa@n),??_xtoa+0+0
  3588  000A00  C037  F027         	movff	(c:xtoa@n+1),??_xtoa+0+0+1
  3589  000A04  C038  F028         	movff	(c:xtoa@n+2),??_xtoa+0+0+2
  3590  000A08  C039  F029         	movff	(c:xtoa@n+3),??_xtoa+0+0+3
  3591  000A0C  C03A  F02A         	movff	(c:xtoa@n+4),??_xtoa+0+0+4
  3592  000A10  C03B  F02B         	movff	(c:xtoa@n+5),??_xtoa+0+0+5
  3593  000A14  C03C  F02C         	movff	(c:xtoa@n+6),??_xtoa+0+0+6
  3594  000A18  C03D  F02D         	movff	(c:xtoa@n+7),??_xtoa+0+0+7
  3595  000A1C  C03E  F02E         	movlw	04h+1
  3596  000A20  0E05               	goto	u1400
  3597  000A22  EF1C  F005         u1405:
  3598  000A26                     	bcf	status,0
  3599  000A26  90D8               	rrcf	(??_xtoa+0+7),c
  3600  000A28  322E               	rrcf	(??_xtoa+0+6),c
  3601  000A2A  322D               	rrcf	(??_xtoa+0+5),c
  3602  000A2C  322C               	rrcf	(??_xtoa+0+4),c
  3603  000A2E  322B               	rrcf	(??_xtoa+0+3),c
  3604  000A30  322A               	rrcf	(??_xtoa+0+2),c
  3605  000A32  3229               	rrcf	(??_xtoa+0+1),c
  3606  000A34  3228               	rrcf	(??_xtoa+0+0),c
  3607  000A36  3227               u1400:
  3608  000A38                     	decfsz	wreg
  3609  000A38  2EE8               	goto	u1405
  3610  000A3A  EF13  F005         	movff	??_xtoa+0+0,(c:xtoa@n)
  3611  000A3E  C027  F037         	movff	??_xtoa+0+1,(c:xtoa@n+1)
  3612  000A42  C028  F038         	movff	??_xtoa+0+2,(c:xtoa@n+2)
  3613  000A46  C029  F039         	movff	??_xtoa+0+3,(c:xtoa@n+3)
  3614  000A4A  C02A  F03A         	movff	??_xtoa+0+4,(c:xtoa@n+4)
  3615  000A4E  C02B  F03B         	movff	??_xtoa+0+5,(c:xtoa@n+5)
  3616  000A52  C02C  F03C         	movff	??_xtoa+0+6,(c:xtoa@n+6)
  3617  000A56  C02D  F03D         	movff	??_xtoa+0+7,(c:xtoa@n+7)
  3618  000A5A  C02E  F03E         	goto	l1818
  3619  000A5E  EF31  F005         	line	653
  3620                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 653:     }

  3621                           	
  3622                           l228:
  3623  000A62                     	line	642
  3624                           	
  3625                           l1818:
  3626  000A62                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 642:     wh
                                 ile (!(i < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  3627                           	btfsc	((c:xtoa@i+1)),c,7
  3628  000A62  BE40               	goto	u1411
  3629  000A64  EF3D  F005         	movf	((c:xtoa@i+1)),c,w
  3630  000A68  5040               	bnz	u1410
  3631  000A6A  E109               	movlw	2
  3632  000A6C  0E02               	subwf	 ((c:xtoa@i)),c,w
  3633  000A6E  5C3F               	btfss	status,0
  3634  000A70  A0D8               	goto	u1411
  3635  000A72  EF3D  F005         	goto	u1410
  3636  000A76  EF3F  F005         
  3637                           u1411:
  3638  000A7A                     	goto	l247
  3639  000A7A  EF74  F005         u1410:
  3640  000A7E                     	
  3641                           l1820:
  3642  000A7E                     	movf	((c:xtoa@n)),c,w
  3643  000A7E  5037               iorwf	((c:xtoa@n+1)),c,w
  3644  000A80  1038               iorwf	((c:xtoa@n+2)),c,w
  3645  000A82  1039               iorwf	((c:xtoa@n+3)),c,w
  3646  000A84  103A               iorwf	((c:xtoa@n+4)),c,w
  3647  000A86  103B               iorwf	((c:xtoa@n+5)),c,w
  3648  000A88  103C               iorwf	((c:xtoa@n+6)),c,w
  3649  000A8A  103D               iorwf	((c:xtoa@n+7)),c,w
  3650  000A8C  103E               	btfss	status,2
  3651  000A8E  A4D8               	goto	u1421
  3652  000A90  EF4C  F005         	goto	u1420
  3653  000A94  EF4E  F005         
  3654                           u1421:
  3655  000A98                     	goto	l1788
  3656  000A98  EF5F  F004         u1420:
  3657  000A9C                     	
  3658                           l1822:
  3659  000A9C                     	btfsc	((c:xtoa@p+1)),c,7
  3660  000A9C  BE34               	goto	u1430
  3661  000A9E  EF5B  F005         	movf	((c:xtoa@p+1)),c,w
  3662  000AA2  5034               	bnz	u1431
  3663  000AA4  E106               	decf	((c:xtoa@p)),c,w
  3664  000AA6  0433               	btfsc	status,0
  3665  000AA8  B0D8               	goto	u1431
  3666  000AAA  EF59  F005         	goto	u1430
  3667  000AAE  EF5B  F005         
  3668                           u1431:
  3669  000AB2                     	goto	l1788
  3670  000AB2  EF5F  F004         u1430:
  3671  000AB6                     	
  3672                           l1824:
  3673  000AB6                     	btfsc	((c:xtoa@w+1)),c,7
  3674  000AB6  BE36               	goto	u1441
  3675  000AB8  EF66  F005         	movf	((c:xtoa@w+1)),c,w
  3676  000ABC  5036               	bnz	u1440
  3677  000ABE  E108               	decf	((c:xtoa@w)),c,w
  3678  000AC0  0435               	btfss	status,0
  3679  000AC2  A0D8               	goto	u1441
  3680  000AC4  EF66  F005         	goto	u1440
  3681  000AC8  EF68  F005         
  3682                           u1441:
  3683  000ACC                     	goto	l247
  3684  000ACC  EF74  F005         u1440:
  3685  000AD0                     	
  3686                           l1826:
  3687  000AD0                     	movlb	0	; () banked
  3688  000AD0  0100               	
  3689                           	btfsc	((_flags))&0ffh,(1)&7
  3690  000AD2  B369               	goto	u1451
  3691  000AD4  EF6E  F005         	goto	u1450
  3692  000AD8  EF70  F005         u1451:
  3693  000ADC                     	goto	l1788
  3694  000ADC  EF5F  F004         u1450:
  3695  000AE0                     	goto	l247
  3696  000AE0  EF74  F005         	
  3697                           l246:; BSR set to: 0
  3698  000AE4                     
  3699                           	goto	l247
  3700  000AE4  EF74  F005         	
  3701                           l244:; BSR set to: 0
  3702  000AE8                     
  3703                           	
  3704                           l247:
  3705  000AE8                     	line	656
  3706                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 656:     if
                                  (flags & (1 << 4)) {
  3707                           	movlb	0	; () banked
  3708  000AE8  0100               	
  3709                           	btfss	((_flags))&0ffh,(4)&7
  3710  000AEA  A969               	goto	u1461
  3711  000AEC  EF7A  F005         	goto	u1460
  3712  000AF0  EF7C  F005         u1461:
  3713  000AF4                     	goto	l1834
  3714  000AF4  EF94  F005         u1460:
  3715  000AF8                     	line	657
  3716                           	
  3717                           l1828:; BSR set to: 0
  3718  000AF8                     
  3719                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 657:       
                                   --i;
  3720                           	decf	((c:xtoa@i)),c
  3721  000AF8  063F               	btfss	status,0
  3722  000AFA  A0D8               	decf	((c:xtoa@i+1)),c
  3723  000AFC  0640               	line	658
  3724                           	
  3725                           l1830:; BSR set to: 0
  3726  000AFE                     
  3727                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 658:       
                                   dbuf[i] = x;
  3728                           	movlw	low(_dbuf)
  3729  000AFE  0E6F               	addwf	((c:xtoa@i)),c,w
  3730  000B00  243F               	movwf	c:fsr2l
  3731  000B02  6ED9               	movlw	high(_dbuf)
  3732  000B04  0E00               	addwfc	((c:xtoa@i+1)),c,w
  3733  000B06  2040               	movwf	1+c:fsr2l
  3734  000B08  6EDA               	movff	(c:xtoa@x),indf2
  3735  000B0A  C026  FFDF         
  3736                           	line	659
  3737                           	
  3738                           l1832:; BSR set to: 0
  3739  000B0E                     
  3740                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 659:       
                                   --i;
  3741                           	decf	((c:xtoa@i)),c
  3742  000B0E  063F               	btfss	status,0
  3743  000B10  A0D8               	decf	((c:xtoa@i+1)),c
  3744  000B12  0640               	line	660
  3745                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 660:       
                                   dbuf[i] = '0';
  3746                           	movlw	low(_dbuf)
  3747  000B14  0E6F               	addwf	((c:xtoa@i)),c,w
  3748  000B16  243F               	movwf	c:fsr2l
  3749  000B18  6ED9               	movlw	high(_dbuf)
  3750  000B1A  0E00               	addwfc	((c:xtoa@i+1)),c,w
  3751  000B1C  2040               	movwf	1+c:fsr2l
  3752  000B1E  6EDA               	movlw	low(030h)
  3753  000B20  0E30               	movwf	indf2
  3754  000B22  6EDF               	goto	l1834
  3755  000B24  EF94  F005         	line	661
  3756                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 661:     }

  3757                           	
  3758                           l248:; BSR set to: 0
  3759  000B28                     
  3760                           	line	664
  3761                           	
  3762                           l1834:; BSR set to: 0
  3763  000B28                     
  3764                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 664:     re
                                 turn pad(fp, &dbuf[i], w);
  3765                           		movff	(c:xtoa@fp),(c:pad@fp)
  3766  000B28  C01C  F011         	movff	(c:xtoa@fp+1),(c:pad@fp+1)
  3767  000B2C  C01D  F012         
  3768                           	movlw	low(_dbuf)
  3769  000B30  0E6F               	addwf	((c:xtoa@i)),c,w
  3770  000B32  243F               	movwf	((c:pad@buf)),c
  3771  000B34  6E13               	movlw	high(_dbuf)
  3772  000B36  0E00               	addwfc	((c:xtoa@i+1)),c,w
  3773  000B38  2040               	movwf	1+((c:pad@buf)),c
  3774  000B3A  6E14               	movff	(c:xtoa@w),(c:pad@p)
  3775  000B3C  C035  F015         	movff	(c:xtoa@w+1),(c:pad@p+1)
  3776  000B40  C036  F016         	call	_pad	;wreg free
  3777  000B44  EC0E  F00B         	movff	0+?_pad,(c:?_xtoa)
  3778  000B48  C011  F01C         	movff	1+?_pad,(c:?_xtoa+1)
  3779  000B4C  C012  F01D         	goto	l249
  3780  000B50  EFAA  F005         	
  3781                           l1836:
  3782  000B54                     	line	665
  3783                           	
  3784                           l249:
  3785  000B54                     	return	;funcret
  3786  000B54  0012               	opt stack 0
  3787                           GLOBAL	__end_of_xtoa
  3788                           	__end_of_xtoa:
  3789  000B56                     	signat	_xtoa,12410
  3790                           	global	_toupper
  3791                           
  3792 ;; *************** function _toupper *****************
  3793 ;; Defined at:
  3794 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\toupper.c"
  3795 ;; Parameters:    Size  Location     Type
  3796 ;;  c               2    6[COMRAM] int 
  3797 ;; Auto vars:     Size  Location     Type
  3798 ;;		None
  3799 ;; Return value:  Size  Location     Type
  3800 ;;                  2    6[COMRAM] int 
  3801 ;; Registers used:
  3802 ;;		wreg, status,2, status,0, cstack
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 0/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3808 ;;      Params:         2       0       0       0       0       0       0       0       0
  3809 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3810 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3811 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3812 ;;Total ram usage:        8 bytes
  3813 ;; Hardware stack levels used:    1
  3814 ;; Hardware stack levels required when called:    1
  3815 ;; This function calls:
  3816 ;;		_islower
  3817 ;; This function is called by:
  3818 ;;		_xtoa
  3819 ;; This function uses a non-reentrant model
  3820 ;;
  3821                           psect	text10,class=CODE,space=0,reloc=2,group=2
  3822                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\toupper.c"
  3823                           	line	4
  3824                           global __ptext10
  3825                           __ptext10:
  3826  0017B8                     psect	text10
  3827                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\toupper.c"
  3828                           	line	4
  3829                           	global	__size_of_toupper
  3830                           	__size_of_toupper	equ	__end_of_toupper-_toupper
  3831  0000                     	
  3832                           _toupper:
  3833  0017B8                     ;incstack = 0
  3834                           	opt	stack 24
  3835                           	line	6
  3836                           	
  3837                           l1620:
  3838  0017B8                     	movlw	low(0FF9Fh)
  3839  0017B8  0E9F               	movwf	(??_toupper+0+0)&0ffh,c
  3840  0017BA  6E09               	movlw	high(0FF9Fh)
  3841  0017BC  0EFF               	movwf	1+(??_toupper+0+0)&0ffh,c
  3842  0017BE  6E0A               	movff	(c:toupper@c),??_toupper+2+0
  3843  0017C0  C007  F00B         	movff	(c:toupper@c+1),??_toupper+2+0+1
  3844  0017C4  C008  F00C         	movf	(??_toupper+0+0),c,w
  3845  0017C8  5009               	addwf	(??_toupper+2+0),c
  3846  0017CA  260B               	movf	(??_toupper+0+1),c,w
  3847  0017CC  500A               	addwfc	(??_toupper+2+1),c
  3848  0017CE  220C               		movf	(??_toupper+2+1),c,w
  3849  0017D0  500C               	bnz	u990
  3850  0017D2  E10A               	movlw	26
  3851  0017D4  0E1A               	subwf	 (??_toupper+2+0),c,w
  3852  0017D6  5C0B               	btfss	status,0
  3853  0017D8  A0D8               	goto	u991
  3854  0017DA  EFF1  F00B         	goto	u990
  3855  0017DE  EFF4  F00B         
  3856                           u991:
  3857  0017E2                     	movlw	1
  3858  0017E2  0E01               	goto	u1000
  3859  0017E4  EFF5  F00B         u990:
  3860  0017E8                     	movlw	0
  3861  0017E8  0E00               u1000:
  3862  0017EA                     	movwf	((c:_toupper$933)),c
  3863  0017EA  6E0D               	clrf	((c:_toupper$933+1)),c
  3864  0017EC  6A0E               	goto	l1624
  3865  0017EE  EF05  F00C         	
  3866                           l1002:
  3867  0017F2                     	
  3868                           l1622:
  3869  0017F2                     	movff	(c:toupper@c),(c:islower@c)
  3870  0017F2  C007  F001         	movff	(c:toupper@c+1),(c:islower@c+1)
  3871  0017F6  C008  F002         	call	_islower	;wreg free
  3872  0017FA  EC4B  F00E         	movff	0+?_islower,(c:_toupper$933)
  3873  0017FE  C001  F00D         	movff	1+?_islower,(c:_toupper$933+1)
  3874  001802  C002  F00E         	goto	l1624
  3875  001806  EF05  F00C         	
  3876                           l1004:
  3877  00180A                     	
  3878                           l1624:
  3879  00180A                     	movf	((c:_toupper$933)),c,w
  3880  00180A  500D               iorwf	((c:_toupper$933+1)),c,w
  3881  00180C  100E               	btfsc	status,2
  3882  00180E  B4D8               	goto	u1011
  3883  001810  EF0C  F00C         	goto	u1010
  3884  001814  EF0E  F00C         
  3885                           u1011:
  3886  001818                     	goto	l1000
  3887  001818  EF16  F00C         u1010:
  3888  00181C                     	
  3889                           l1626:
  3890  00181C                     	movlw	05Fh
  3891  00181C  0E5F               	andwf	((c:toupper@c)),c,w
  3892  00181E  1407               	movwf	((c:?_toupper)),c
  3893  001820  6E07               	clrf	1+((c:?_toupper)),c
  3894  001822  6A08               	goto	l1005
  3895  001824  EF1A  F00C         	
  3896                           l1628:
  3897  001828                     	goto	l1005
  3898  001828  EF1A  F00C         	
  3899                           l1000:
  3900  00182C                     	line	7
  3901                           	movff	(c:toupper@c),(c:?_toupper)
  3902  00182C  C007  F007         	movff	(c:toupper@c+1),(c:?_toupper+1)
  3903  001830  C008  F008         	line	8
  3904                           	
  3905                           l1005:
  3906  001834                     	return	;funcret
  3907  001834  0012               	opt stack 0
  3908                           GLOBAL	__end_of_toupper
  3909                           	__end_of_toupper:
  3910  001836                     	signat	_toupper,4218
  3911                           	global	_islower
  3912                           
  3913 ;; *************** function _islower *****************
  3914 ;; Defined at:
  3915 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\islower.c"
  3916 ;; Parameters:    Size  Location     Type
  3917 ;;  c               2    0[COMRAM] int 
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;		None
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  2    0[COMRAM] int 
  3922 ;; Registers used:
  3923 ;;		wreg, status,2, status,0
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3929 ;;      Params:         2       0       0       0       0       0       0       0       0
  3930 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3931 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3932 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3933 ;;Total ram usage:        6 bytes
  3934 ;; Hardware stack levels used:    1
  3935 ;; This function calls:
  3936 ;;		Nothing
  3937 ;; This function is called by:
  3938 ;;		_toupper
  3939 ;; This function uses a non-reentrant model
  3940 ;;
  3941                           psect	text11,class=CODE,space=0,reloc=2,group=2
  3942                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\islower.c"
  3943                           	line	5
  3944                           global __ptext11
  3945                           __ptext11:
  3946  001C96                     psect	text11
  3947                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\islower.c"
  3948                           	line	5
  3949                           	global	__size_of_islower
  3950                           	__size_of_islower	equ	__end_of_islower-_islower
  3951  0000                     	
  3952                           _islower:
  3953  001C96                     ;incstack = 0
  3954                           	opt	stack 24
  3955                           	line	7
  3956                           	
  3957                           l1582:
  3958  001C96                     	movlw	low(0FF9Fh)
  3959  001C96  0E9F               	movwf	(??_islower+0+0)&0ffh,c
  3960  001C98  6E03               	movlw	high(0FF9Fh)
  3961  001C9A  0EFF               	movwf	1+(??_islower+0+0)&0ffh,c
  3962  001C9C  6E04               	movff	(c:islower@c),??_islower+2+0
  3963  001C9E  C001  F005         	movff	(c:islower@c+1),??_islower+2+0+1
  3964  001CA2  C002  F006         	movf	(??_islower+0+0),c,w
  3965  001CA6  5003               	addwf	(??_islower+2+0),c
  3966  001CA8  2605               	movf	(??_islower+0+1),c,w
  3967  001CAA  5004               	addwfc	(??_islower+2+1),c
  3968  001CAC  2206               		movf	(??_islower+2+1),c,w
  3969  001CAE  5006               	bnz	u880
  3970  001CB0  E10A               	movlw	26
  3971  001CB2  0E1A               	subwf	 (??_islower+2+0),c,w
  3972  001CB4  5C05               	btfss	status,0
  3973  001CB6  A0D8               	goto	u881
  3974  001CB8  EF60  F00E         	goto	u880
  3975  001CBC  EF63  F00E         
  3976                           u881:
  3977  001CC0                     	movlw	1
  3978  001CC0  0E01               	goto	u890
  3979  001CC2  EF64  F00E         u880:
  3980  001CC6                     	movlw	0
  3981  001CC6  0E00               u890:
  3982  001CC8                     	movwf	((c:?_islower)),c
  3983  001CC8  6E01               	clrf	((c:?_islower+1)),c
  3984  001CCA  6A02               	goto	l1011
  3985  001CCC  EF68  F00E         	
  3986                           l1584:
  3987  001CD0                     	line	8
  3988                           	
  3989                           l1011:
  3990  001CD0                     	return	;funcret
  3991  001CD0  0012               	opt stack 0
  3992                           GLOBAL	__end_of_islower
  3993                           	__end_of_islower:
  3994  001CD2                     	signat	_islower,4218
  3995                           	global	_isupper
  3996                           
  3997 ;; *************** function _isupper *****************
  3998 ;; Defined at:
  3999 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isupper.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;  c               2    0[COMRAM] int 
  4002 ;; Auto vars:     Size  Location     Type
  4003 ;;		None
  4004 ;; Return value:  Size  Location     Type
  4005 ;;                  2    0[COMRAM] int 
  4006 ;; Registers used:
  4007 ;;		wreg, status,2, status,0
  4008 ;; Tracked objects:
  4009 ;;		On entry : 0/0
  4010 ;;		On exit  : 0/0
  4011 ;;		Unchanged: 0/0
  4012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4013 ;;      Params:         2       0       0       0       0       0       0       0       0
  4014 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4015 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4016 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4017 ;;Total ram usage:        6 bytes
  4018 ;; Hardware stack levels used:    1
  4019 ;; This function calls:
  4020 ;;		Nothing
  4021 ;; This function is called by:
  4022 ;;		_xtoa
  4023 ;; This function uses a non-reentrant model
  4024 ;;
  4025                           psect	text12,class=CODE,space=0,reloc=2,group=2
  4026                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isupper.c"
  4027                           	line	5
  4028                           global __ptext12
  4029                           __ptext12:
  4030  001CD2                     psect	text12
  4031                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isupper.c"
  4032                           	line	5
  4033                           	global	__size_of_isupper
  4034                           	__size_of_isupper	equ	__end_of_isupper-_isupper
  4035  0000                     	
  4036                           _isupper:
  4037  001CD2                     ;incstack = 0
  4038                           	opt	stack 25
  4039                           	line	7
  4040                           	
  4041                           l1612:
  4042  001CD2                     	movlw	low(0FFBFh)
  4043  001CD2  0EBF               	movwf	(??_isupper+0+0)&0ffh,c
  4044  001CD4  6E03               	movlw	high(0FFBFh)
  4045  001CD6  0EFF               	movwf	1+(??_isupper+0+0)&0ffh,c
  4046  001CD8  6E04               	movff	(c:isupper@c),??_isupper+2+0
  4047  001CDA  C001  F005         	movff	(c:isupper@c+1),??_isupper+2+0+1
  4048  001CDE  C002  F006         	movf	(??_isupper+0+0),c,w
  4049  001CE2  5003               	addwf	(??_isupper+2+0),c
  4050  001CE4  2605               	movf	(??_isupper+0+1),c,w
  4051  001CE6  5004               	addwfc	(??_isupper+2+1),c
  4052  001CE8  2206               		movf	(??_isupper+2+1),c,w
  4053  001CEA  5006               	bnz	u950
  4054  001CEC  E10A               	movlw	26
  4055  001CEE  0E1A               	subwf	 (??_isupper+2+0),c,w
  4056  001CF0  5C05               	btfss	status,0
  4057  001CF2  A0D8               	goto	u951
  4058  001CF4  EF7E  F00E         	goto	u950
  4059  001CF8  EF81  F00E         
  4060                           u951:
  4061  001CFC                     	movlw	1
  4062  001CFC  0E01               	goto	u960
  4063  001CFE  EF82  F00E         u950:
  4064  001D02                     	movlw	0
  4065  001D02  0E00               u960:
  4066  001D04                     	movwf	((c:?_isupper)),c
  4067  001D04  6E01               	clrf	((c:?_isupper+1)),c
  4068  001D06  6A02               	goto	l956
  4069  001D08  EF86  F00E         	
  4070                           l1614:
  4071  001D0C                     	line	8
  4072                           	
  4073                           l956:
  4074  001D0C                     	return	;funcret
  4075  001D0C  0012               	opt stack 0
  4076                           GLOBAL	__end_of_isupper
  4077                           	__end_of_isupper:
  4078  001D0E                     	signat	_isupper,4218
  4079                           	global	_isalpha
  4080                           
  4081 ;; *************** function _isalpha *****************
  4082 ;; Defined at:
  4083 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isalpha.c"
  4084 ;; Parameters:    Size  Location     Type
  4085 ;;  c               2    0[COMRAM] int 
  4086 ;; Auto vars:     Size  Location     Type
  4087 ;;		None
  4088 ;; Return value:  Size  Location     Type
  4089 ;;                  2    0[COMRAM] int 
  4090 ;; Registers used:
  4091 ;;		wreg, status,2, status,0
  4092 ;; Tracked objects:
  4093 ;;		On entry : 0/0
  4094 ;;		On exit  : 0/0
  4095 ;;		Unchanged: 0/0
  4096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4097 ;;      Params:         2       0       0       0       0       0       0       0       0
  4098 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4099 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4100 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4101 ;;Total ram usage:        6 bytes
  4102 ;; Hardware stack levels used:    1
  4103 ;; This function calls:
  4104 ;;		Nothing
  4105 ;; This function is called by:
  4106 ;;		_xtoa
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           psect	text13,class=CODE,space=0,reloc=2,group=2
  4110                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isalpha.c"
  4111                           	line	5
  4112                           global __ptext13
  4113                           __ptext13:
  4114  001C56                     psect	text13
  4115                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\isalpha.c"
  4116                           	line	5
  4117                           	global	__size_of_isalpha
  4118                           	__size_of_isalpha	equ	__end_of_isalpha-_isalpha
  4119  0000                     	
  4120                           _isalpha:
  4121  001C56                     ;incstack = 0
  4122                           	opt	stack 25
  4123                           	line	7
  4124                           	
  4125                           l1616:
  4126  001C56                     	movlw	low(0FF9Fh)
  4127  001C56  0E9F               	movwf	(??_isalpha+0+0)&0ffh,c
  4128  001C58  6E03               	movlw	high(0FF9Fh)
  4129  001C5A  0EFF               	movwf	1+(??_isalpha+0+0)&0ffh,c
  4130  001C5C  6E04               	movlw	020h
  4131  001C5E  0E20               	iorwf	((c:isalpha@c)),c,w
  4132  001C60  1001               	movwf	(??_isalpha+2+0)&0ffh,c
  4133  001C62  6E05               	movlw	0
  4134  001C64  0E00               	iorwf	((c:isalpha@c+1)),c,w
  4135  001C66  1002               	movwf	(??_isalpha+2+0+1)&0ffh,c
  4136  001C68  6E06               	movf	(??_isalpha+0+0),c,w
  4137  001C6A  5003               	addwf	(??_isalpha+2+0),c
  4138  001C6C  2605               	movf	(??_isalpha+0+1),c,w
  4139  001C6E  5004               	addwfc	(??_isalpha+2+1),c
  4140  001C70  2206               		movf	(??_isalpha+2+1),c,w
  4141  001C72  5006               	bnz	u970
  4142  001C74  E10A               	movlw	26
  4143  001C76  0E1A               	subwf	 (??_isalpha+2+0),c,w
  4144  001C78  5C05               	btfss	status,0
  4145  001C7A  A0D8               	goto	u971
  4146  001C7C  EF42  F00E         	goto	u970
  4147  001C80  EF45  F00E         
  4148                           u971:
  4149  001C84                     	movlw	1
  4150  001C84  0E01               	goto	u980
  4151  001C86  EF46  F00E         u970:
  4152  001C8A                     	movlw	0
  4153  001C8A  0E00               u980:
  4154  001C8C                     	movwf	((c:?_isalpha)),c
  4155  001C8C  6E01               	clrf	((c:?_isalpha+1)),c
  4156  001C8E  6A02               	goto	l950
  4157  001C90  EF4A  F00E         	
  4158                           l1618:
  4159  001C94                     	line	8
  4160                           	
  4161                           l950:
  4162  001C94                     	return	;funcret
  4163  001C94  0012               	opt stack 0
  4164                           GLOBAL	__end_of_isalpha
  4165                           	__end_of_isalpha:
  4166  001C96                     	signat	_isalpha,4218
  4167                           	global	_dtoa
  4168                           
  4169 ;; *************** function _dtoa *****************
  4170 ;; Defined at:
  4171 ;;		line 274 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  4172 ;; Parameters:    Size  Location     Type
  4173 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4174 ;;		 -> sprintf@f(6), 
  4175 ;;  d               8   29[COMRAM] long long 
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;  n               8   53[COMRAM] long long 
  4178 ;;  i               2   61[COMRAM] int 
  4179 ;;  s               2   51[COMRAM] int 
  4180 ;;  w               2   49[COMRAM] int 
  4181 ;;  p               2   47[COMRAM] int 
  4182 ;; Return value:  Size  Location     Type
  4183 ;;                  2   27[COMRAM] int 
  4184 ;; Registers used:
  4185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4186 ;; Tracked objects:
  4187 ;;		On entry : 0/0
  4188 ;;		On exit  : 0/0
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4191 ;;      Params:        10       0       0       0       0       0       0       0       0
  4192 ;;      Locals:        18       0       0       0       0       0       0       0       0
  4193 ;;      Temps:          8       0       0       0       0       0       0       0       0
  4194 ;;      Totals:        36       0       0       0       0       0       0       0       0
  4195 ;;Total ram usage:       36 bytes
  4196 ;; Hardware stack levels used:    1
  4197 ;; Hardware stack levels required when called:    4
  4198 ;; This function calls:
  4199 ;;		___aodiv
  4200 ;;		___aomod
  4201 ;;		_abs
  4202 ;;		_pad
  4203 ;; This function is called by:
  4204 ;;		_vfpfcnvrt
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           psect	text14,class=CODE,space=0,reloc=2,group=0
  4208                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  4209                           	line	274
  4210                           global __ptext14
  4211                           __ptext14:
  4212  000B56                     psect	text14
  4213                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  4214                           	line	274
  4215                           	global	__size_of_dtoa
  4216                           	__size_of_dtoa	equ	__end_of_dtoa-_dtoa
  4217  0000                     	
  4218                           _dtoa:
  4219  000B56                     ;incstack = 0
  4220                           	opt	stack 22
  4221                           	line	280
  4222                           	
  4223                           l1710:
  4224  000B56                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 274: static
                                  int dtoa(FILE *fp, long long d);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\
                                 c99\common\doprnt.c: 275: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\c
                                 ommon\doprnt.c: 276:     int i, p, s, w;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\
                                 sources\c99\common\doprnt.c: 277:     long long n;;C:\Program Files (x86)\Microchip\xc8\
                                 v2.00\pic\sources\c99\common\doprnt.c: 280:     n = d;
  4225                           	movff	(c:dtoa@d),(c:dtoa@n)
  4226  000B56  C01E  F036         	movff	(c:dtoa@d+1),(c:dtoa@n+1)
  4227  000B5A  C01F  F037         	movff	(c:dtoa@d+2),(c:dtoa@n+2)
  4228  000B5E  C020  F038         	movff	(c:dtoa@d+3),(c:dtoa@n+3)
  4229  000B62  C021  F039         	movff	(c:dtoa@d+4),(c:dtoa@n+4)
  4230  000B66  C022  F03A         	movff	(c:dtoa@d+5),(c:dtoa@n+5)
  4231  000B6A  C023  F03B         	movff	(c:dtoa@d+6),(c:dtoa@n+6)
  4232  000B6E  C024  F03C         	movff	(c:dtoa@d+7),(c:dtoa@n+7)
  4233  000B72  C025  F03D         	line	281
  4234                           	
  4235                           l1712:
  4236  000B76                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 281:     s 
                                 = n < 0 ? 1 : 0;
  4237                           	btfsc	((c:dtoa@n+7)),c,7
  4238  000B76  BE3D               	goto	u1151
  4239  000B78  EFC0  F005         	goto	u1150
  4240  000B7C  EFC3  F005         
  4241                           u1151:
  4242  000B80                     	movlw	1
  4243  000B80  0E01               	goto	u1160
  4244  000B82  EFC4  F005         u1150:
  4245  000B86                     	movlw	0
  4246  000B86  0E00               u1160:
  4247  000B88                     	movwf	((c:dtoa@s)),c
  4248  000B88  6E34               	clrf	((c:dtoa@s+1)),c
  4249  000B8A  6A35               	line	282
  4250                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 282:     if
                                  (s) {
  4251                           	movf	((c:dtoa@s)),c,w
  4252  000B8C  5034               iorwf	((c:dtoa@s+1)),c,w
  4253  000B8E  1035               	btfsc	status,2
  4254  000B90  B4D8               	goto	u1171
  4255  000B92  EFCD  F005         	goto	u1170
  4256  000B96  EFCF  F005         
  4257                           u1171:
  4258  000B9A                     	goto	l1716
  4259  000B9A  EFE1  F005         u1170:
  4260  000B9E                     	line	283
  4261                           	
  4262                           l1714:
  4263  000B9E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 283:       
                                   n = -n;
  4264                           	comf	((c:dtoa@n+7)),c
  4265  000B9E  1E3D               	comf	((c:dtoa@n+6)),c
  4266  000BA0  1E3C               	comf	((c:dtoa@n+5)),c
  4267  000BA2  1E3B               	comf	((c:dtoa@n+4)),c
  4268  000BA4  1E3A               	comf	((c:dtoa@n+3)),c
  4269  000BA6  1E39               	comf	((c:dtoa@n+2)),c
  4270  000BA8  1E38               	comf	((c:dtoa@n+1)),c
  4271  000BAA  1E37               	negf	((c:dtoa@n)),c
  4272  000BAC  6C36               	movlw	0
  4273  000BAE  0E00               	addwfc	((c:dtoa@n+1)),c
  4274  000BB0  2237               	addwfc	((c:dtoa@n+2)),c
  4275  000BB2  2238               	addwfc	((c:dtoa@n+3)),c
  4276  000BB4  2239               	addwfc	((c:dtoa@n+4)),c
  4277  000BB6  223A               	addwfc	((c:dtoa@n+5)),c
  4278  000BB8  223B               	addwfc	((c:dtoa@n+6)),c
  4279  000BBA  223C               	addwfc	((c:dtoa@n+7)),c
  4280  000BBC  223D               	goto	l1716
  4281  000BBE  EFE1  F005         	line	284
  4282                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 284:     }

  4283                           	
  4284                           l196:
  4285  000BC2                     	line	287
  4286                           	
  4287                           l1716:
  4288  000BC2                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 287:     if
                                  (!(prec < 0)) {
  4289                           	movlb	0	; () banked
  4290  000BC2  0100               	btfsc	((_prec+1))&0ffh,7
  4291  000BC4  BF68               	goto	u1181
  4292  000BC6  EFE7  F005         	goto	u1180
  4293  000BCA  EFE9  F005         
  4294                           u1181:
  4295  000BCE                     	goto	l1720
  4296  000BCE  EFEC  F005         u1180:
  4297  000BD2                     	line	288
  4298                           	
  4299                           l1718:; BSR set to: 0
  4300  000BD2                     
  4301                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 288:       
                                   flags &= ~(1 << 1);
  4302                           	bcf	(0+(1/8)+(_flags))&0ffh,(1)&7
  4303  000BD2  9369               	goto	l1720
  4304  000BD4  EFEC  F005         	line	289
  4305                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 289:     }

  4306                           	
  4307                           l197:; BSR set to: 0
  4308  000BD8                     
  4309                           	line	290
  4310                           	
  4311                           l1720:; BSR set to: 0
  4312  000BD8                     
  4313                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 290:     p 
                                 = (0 < prec) ? prec : 1;
  4314                           	btfsc	((_prec+1))&0ffh,7
  4315  000BD8  BF68               	goto	u1190
  4316  000BDA  EFF9  F005         	movf	((_prec+1))&0ffh,w
  4317  000BDE  5168               	bnz	u1191
  4318  000BE0  E106               	decf	((_prec))&0ffh,w
  4319  000BE2  0567               	btfsc	status,0
  4320  000BE4  B0D8               	goto	u1191
  4321  000BE6  EFF7  F005         	goto	u1190
  4322  000BEA  EFF9  F005         
  4323                           u1191:
  4324  000BEE                     	goto	l199
  4325  000BEE  EFFF  F005         u1190:
  4326  000BF2                     	
  4327                           l1722:; BSR set to: 0
  4328  000BF2                     
  4329                           	movlw	high(01h)
  4330  000BF2  0E00               	movwf	((c:dtoa@p+1)),c
  4331  000BF4  6E31               	movlw	low(01h)
  4332  000BF6  0E01               	movwf	((c:dtoa@p)),c
  4333  000BF8  6E30               	goto	l201
  4334  000BFA  EF03  F006         	
  4335                           l199:; BSR set to: 0
  4336  000BFE                     
  4337                           	movff	(_prec),(c:dtoa@p)
  4338  000BFE  C067  F030         	movff	(_prec+1),(c:dtoa@p+1)
  4339  000C02  C068  F031         	
  4340                           l201:; BSR set to: 0
  4341  000C06                     
  4342                           	line	291
  4343                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 291:     w 
                                 = width;
  4344                           	movff	(_width),(c:dtoa@w)
  4345  000C06  C065  F032         	movff	(_width+1),(c:dtoa@w+1)
  4346  000C0A  C066  F033         	line	292
  4347                           	
  4348                           l1724:; BSR set to: 0
  4349  000C0E                     
  4350                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 292:     if
                                  (s || (flags & (1 << 2))) {
  4351                           	movf	((c:dtoa@s)),c,w
  4352  000C0E  5034               iorwf	((c:dtoa@s+1)),c,w
  4353  000C10  1035               	btfss	status,2
  4354  000C12  A4D8               	goto	u1201
  4355  000C14  EF0E  F006         	goto	u1200
  4356  000C18  EF10  F006         
  4357                           u1201:
  4358  000C1C                     	goto	l1728
  4359  000C1C  EF19  F006         u1200:
  4360  000C20                     	
  4361                           l1726:; BSR set to: 0
  4362  000C20                     
  4363                           	
  4364                           	btfss	((_flags))&0ffh,(2)&7
  4365  000C20  A569               	goto	u1211
  4366  000C22  EF15  F006         	goto	u1210
  4367  000C26  EF17  F006         u1211:
  4368  000C2A                     	goto	l1730
  4369  000C2A  EF1E  F006         u1210:
  4370  000C2E                     	goto	l1728
  4371  000C2E  EF19  F006         	
  4372                           l204:; BSR set to: 0
  4373  000C32                     
  4374                           	line	293
  4375                           	
  4376                           l1728:; BSR set to: 0
  4377  000C32                     
  4378                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 293:       
                                   --w;
  4379                           	decf	((c:dtoa@w)),c
  4380  000C32  0632               	btfss	status,0
  4381  000C34  A0D8               	decf	((c:dtoa@w+1)),c
  4382  000C36  0633               	goto	l1730
  4383  000C38  EF1E  F006         	line	294
  4384                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 294:     }

  4385                           	
  4386                           l202:; BSR set to: 0
  4387  000C3C                     
  4388                           	line	297
  4389                           	
  4390                           l1730:; BSR set to: 0
  4391  000C3C                     
  4392                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 297:     i 
                                 = sizeof(dbuf) - 1;
  4393                           	movlw	high(01Fh)
  4394  000C3C  0E00               	movwf	((c:dtoa@i+1)),c
  4395  000C3E  6E3F               	movlw	low(01Fh)
  4396  000C40  0E1F               	movwf	((c:dtoa@i)),c
  4397  000C42  6E3E               	line	298
  4398                           	
  4399                           l1732:; BSR set to: 0
  4400  000C44                     
  4401                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 298:     db
                                 uf[i] = '\0';
  4402                           	movlw	low(_dbuf)
  4403  000C44  0E6F               	addwf	((c:dtoa@i)),c,w
  4404  000C46  243E               	movwf	c:fsr2l
  4405  000C48  6ED9               	movlw	high(_dbuf)
  4406  000C4A  0E00               	addwfc	((c:dtoa@i+1)),c,w
  4407  000C4C  203F               	movwf	1+c:fsr2l
  4408  000C4E  6EDA               	movlw	low(0)
  4409  000C50  0E00               	movwf	indf2
  4410  000C52  6EDF               	line	299
  4411                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 299:     wh
                                 ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4412                           	goto	l1744
  4413  000C54  EFAA  F006         	
  4414                           l206:; BSR set to: 0
  4415  000C58                     
  4416                           	line	300
  4417                           	
  4418                           l1734:
  4419  000C58                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 300:       
                                   --i;
  4420                           	decf	((c:dtoa@i)),c
  4421  000C58  063E               	btfss	status,0
  4422  000C5A  A0D8               	decf	((c:dtoa@i+1)),c
  4423  000C5C  063F               	line	301
  4424                           	
  4425                           l1736:
  4426  000C5E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 301:       
                                   dbuf[i] = '0' + abs(n % 10);
  4427                           	movlw	low(_dbuf)
  4428  000C5E  0E6F               	addwf	((c:dtoa@i)),c,w
  4429  000C60  243E               	movwf	c:fsr2l
  4430  000C62  6ED9               	movlw	high(_dbuf)
  4431  000C64  0E00               	addwfc	((c:dtoa@i+1)),c,w
  4432  000C66  203F               	movwf	1+c:fsr2l
  4433  000C68  6EDA               	movff	(c:dtoa@n),(c:___aomod@dividend)
  4434  000C6A  C036  F001         	movff	(c:dtoa@n+1),(c:___aomod@dividend+1)
  4435  000C6E  C037  F002         	movff	(c:dtoa@n+2),(c:___aomod@dividend+2)
  4436  000C72  C038  F003         	movff	(c:dtoa@n+3),(c:___aomod@dividend+3)
  4437  000C76  C039  F004         	movff	(c:dtoa@n+4),(c:___aomod@dividend+4)
  4438  000C7A  C03A  F005         	movff	(c:dtoa@n+5),(c:___aomod@dividend+5)
  4439  000C7E  C03B  F006         	movff	(c:dtoa@n+6),(c:___aomod@dividend+6)
  4440  000C82  C03C  F007         	movff	(c:dtoa@n+7),(c:___aomod@dividend+7)
  4441  000C86  C03D  F008         	movlw	byte0(0Ah)
  4442  000C8A  0E0A               	movwf	((c:___aomod@divisor)),c
  4443  000C8C  6E09               	movlw	byte1(0Ah)
  4444  000C8E  0E00               	movwf	((c:___aomod@divisor+1)),c
  4445  000C90  6E0A               	movlw	byte2(0Ah)
  4446  000C92  0E00               	movwf	((c:___aomod@divisor+2)),c
  4447  000C94  6E0B               	movlw	byte3(0Ah)
  4448  000C96  0E00               	movwf	((c:___aomod@divisor+3)),c
  4449  000C98  6E0C               	movlw	byte4(0Ah)
  4450  000C9A  0E00               	movwf	((c:___aomod@divisor+4)),c
  4451  000C9C  6E0D               	movlw	byte5(0Ah)
  4452  000C9E  0E00               	movwf	((c:___aomod@divisor+5)),c
  4453  000CA0  6E0E               	movlw	byte6(0Ah)
  4454  000CA2  0E00               	movwf	((c:___aomod@divisor+6)),c
  4455  000CA4  6E0F               	movlw	byte7(0Ah)
  4456  000CA6  0E00               	movwf	((c:___aomod@divisor+7)),c
  4457  000CA8  6E10               	call	___aomod	;wreg free
  4458  000CAA  EC6E  F009         	movff	0+?___aomod,??_dtoa+0+0
  4459  000CAE  C001  F026         	movff	1+?___aomod,??_dtoa+0+0+1
  4460  000CB2  C002  F027         	movff	2+?___aomod,??_dtoa+0+0+2
  4461  000CB6  C003  F028         	movff	3+?___aomod,??_dtoa+0+0+3
  4462  000CBA  C004  F029         	movff	4+?___aomod,??_dtoa+0+0+4
  4463  000CBE  C005  F02A         	movff	5+?___aomod,??_dtoa+0+0+5
  4464  000CC2  C006  F02B         	movff	6+?___aomod,??_dtoa+0+0+6
  4465  000CC6  C007  F02C         	movff	7+?___aomod,??_dtoa+0+0+7
  4466  000CCA  C008  F02D         	
  4467                           	movff	??_dtoa+0+0,(c:abs@a)
  4468  000CCE  C026  F013         	movff	??_dtoa+0+2,(c:abs@a+1)
  4469  000CD2  C028  F014         	call	_abs	;wreg free
  4470  000CD6  ECC8  F00D         	movf	(0+?_abs),c,w
  4471  000CDA  5013               	addlw	low(030h)
  4472  000CDC  0F30               	movwf	indf2,c
  4473  000CDE  6EDF               
  4474                           	line	302
  4475                           	
  4476                           l1738:
  4477  000CE0                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 302:       
                                   --p;
  4478                           	decf	((c:dtoa@p)),c
  4479  000CE0  0630               	btfss	status,0
  4480  000CE2  A0D8               	decf	((c:dtoa@p+1)),c
  4481  000CE4  0631               	line	303
  4482                           	
  4483                           l1740:
  4484  000CE6                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 303:       
                                   --w;
  4485                           	decf	((c:dtoa@w)),c
  4486  000CE6  0632               	btfss	status,0
  4487  000CE8  A0D8               	decf	((c:dtoa@w+1)),c
  4488  000CEA  0633               	line	304
  4489                           	
  4490                           l1742:
  4491  000CEC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 304:       
                                   n = n / 10;
  4492                           	movff	(c:dtoa@n),(c:___aodiv@dividend)
  4493  000CEC  C036  F001         	movff	(c:dtoa@n+1),(c:___aodiv@dividend+1)
  4494  000CF0  C037  F002         	movff	(c:dtoa@n+2),(c:___aodiv@dividend+2)
  4495  000CF4  C038  F003         	movff	(c:dtoa@n+3),(c:___aodiv@dividend+3)
  4496  000CF8  C039  F004         	movff	(c:dtoa@n+4),(c:___aodiv@dividend+4)
  4497  000CFC  C03A  F005         	movff	(c:dtoa@n+5),(c:___aodiv@dividend+5)
  4498  000D00  C03B  F006         	movff	(c:dtoa@n+6),(c:___aodiv@dividend+6)
  4499  000D04  C03C  F007         	movff	(c:dtoa@n+7),(c:___aodiv@dividend+7)
  4500  000D08  C03D  F008         	movlw	byte0(0Ah)
  4501  000D0C  0E0A               	movwf	((c:___aodiv@divisor)),c
  4502  000D0E  6E09               	movlw	byte1(0Ah)
  4503  000D10  0E00               	movwf	((c:___aodiv@divisor+1)),c
  4504  000D12  6E0A               	movlw	byte2(0Ah)
  4505  000D14  0E00               	movwf	((c:___aodiv@divisor+2)),c
  4506  000D16  6E0B               	movlw	byte3(0Ah)
  4507  000D18  0E00               	movwf	((c:___aodiv@divisor+3)),c
  4508  000D1A  6E0C               	movlw	byte4(0Ah)
  4509  000D1C  0E00               	movwf	((c:___aodiv@divisor+4)),c
  4510  000D1E  6E0D               	movlw	byte5(0Ah)
  4511  000D20  0E00               	movwf	((c:___aodiv@divisor+5)),c
  4512  000D22  6E0E               	movlw	byte6(0Ah)
  4513  000D24  0E00               	movwf	((c:___aodiv@divisor+6)),c
  4514  000D26  6E0F               	movlw	byte7(0Ah)
  4515  000D28  0E00               	movwf	((c:___aodiv@divisor+7)),c
  4516  000D2A  6E10               	call	___aodiv	;wreg free
  4517  000D2C  EC96  F008         	movff	0+?___aodiv,(c:dtoa@n)
  4518  000D30  C001  F036         	movff	1+?___aodiv,(c:dtoa@n+1)
  4519  000D34  C002  F037         	movff	2+?___aodiv,(c:dtoa@n+2)
  4520  000D38  C003  F038         	movff	3+?___aodiv,(c:dtoa@n+3)
  4521  000D3C  C004  F039         	movff	4+?___aodiv,(c:dtoa@n+4)
  4522  000D40  C005  F03A         	movff	5+?___aodiv,(c:dtoa@n+5)
  4523  000D44  C006  F03B         	movff	6+?___aodiv,(c:dtoa@n+6)
  4524  000D48  C007  F03C         	movff	7+?___aodiv,(c:dtoa@n+7)
  4525  000D4C  C008  F03D         	
  4526                           	goto	l1744
  4527  000D50  EFAA  F006         	line	305
  4528                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 305:     }

  4529                           	
  4530                           l205:
  4531  000D54                     	line	299
  4532                           	
  4533                           l1744:
  4534  000D54                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 299:     wh
                                 ile (!(i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4535                           	btfsc	((c:dtoa@i+1)),c,7
  4536  000D54  BE3F               	goto	u1221
  4537  000D56  EFB5  F006         	movf	((c:dtoa@i+1)),c,w
  4538  000D5A  503F               	bnz	u1220
  4539  000D5C  E108               	decf	((c:dtoa@i)),c,w
  4540  000D5E  043E               	btfss	status,0
  4541  000D60  A0D8               	goto	u1221
  4542  000D62  EFB5  F006         	goto	u1220
  4543  000D66  EFB7  F006         
  4544                           u1221:
  4545  000D6A                     	goto	l1754
  4546  000D6A  EFEE  F006         u1220:
  4547  000D6E                     	
  4548                           l1746:
  4549  000D6E                     	movf	((c:dtoa@n)),c,w
  4550  000D6E  5036               iorwf	((c:dtoa@n+1)),c,w
  4551  000D70  1037               iorwf	((c:dtoa@n+2)),c,w
  4552  000D72  1038               iorwf	((c:dtoa@n+3)),c,w
  4553  000D74  1039               iorwf	((c:dtoa@n+4)),c,w
  4554  000D76  103A               iorwf	((c:dtoa@n+5)),c,w
  4555  000D78  103B               iorwf	((c:dtoa@n+6)),c,w
  4556  000D7A  103C               iorwf	((c:dtoa@n+7)),c,w
  4557  000D7C  103D               	btfss	status,2
  4558  000D7E  A4D8               	goto	u1231
  4559  000D80  EFC4  F006         	goto	u1230
  4560  000D84  EFC6  F006         
  4561                           u1231:
  4562  000D88                     	goto	l1734
  4563  000D88  EF2C  F006         u1230:
  4564  000D8C                     	
  4565                           l1748:
  4566  000D8C                     	btfsc	((c:dtoa@p+1)),c,7
  4567  000D8C  BE31               	goto	u1240
  4568  000D8E  EFD3  F006         	movf	((c:dtoa@p+1)),c,w
  4569  000D92  5031               	bnz	u1241
  4570  000D94  E106               	decf	((c:dtoa@p)),c,w
  4571  000D96  0430               	btfsc	status,0
  4572  000D98  B0D8               	goto	u1241
  4573  000D9A  EFD1  F006         	goto	u1240
  4574  000D9E  EFD3  F006         
  4575                           u1241:
  4576  000DA2                     	goto	l1734
  4577  000DA2  EF2C  F006         u1240:
  4578  000DA6                     	
  4579                           l1750:
  4580  000DA6                     	btfsc	((c:dtoa@w+1)),c,7
  4581  000DA6  BE33               	goto	u1251
  4582  000DA8  EFDE  F006         	movf	((c:dtoa@w+1)),c,w
  4583  000DAC  5033               	bnz	u1250
  4584  000DAE  E108               	decf	((c:dtoa@w)),c,w
  4585  000DB0  0432               	btfss	status,0
  4586  000DB2  A0D8               	goto	u1251
  4587  000DB4  EFDE  F006         	goto	u1250
  4588  000DB8  EFE0  F006         
  4589                           u1251:
  4590  000DBC                     	goto	l1754
  4591  000DBC  EFEE  F006         u1250:
  4592  000DC0                     	
  4593                           l1752:
  4594  000DC0                     	movlb	0	; () banked
  4595  000DC0  0100               	
  4596                           	btfsc	((_flags))&0ffh,(1)&7
  4597  000DC2  B369               	goto	u1261
  4598  000DC4  EFE6  F006         	goto	u1260
  4599  000DC8  EFE8  F006         u1261:
  4600  000DCC                     	goto	l1734
  4601  000DCC  EF2C  F006         u1260:
  4602  000DD0                     	goto	l1754
  4603  000DD0  EFEE  F006         	
  4604                           l210:; BSR set to: 0
  4605  000DD4                     
  4606                           	goto	l1754
  4607  000DD4  EFEE  F006         	
  4608                           l208:; BSR set to: 0
  4609  000DD8                     
  4610                           	goto	l1754
  4611  000DD8  EFEE  F006         	
  4612                           l211:; BSR set to: 0
  4613  000DDC                     
  4614                           	line	308
  4615                           	
  4616                           l1754:
  4617  000DDC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 308:     if
                                  (s || (flags & (1 << 2))) {
  4618                           	movf	((c:dtoa@s)),c,w
  4619  000DDC  5034               iorwf	((c:dtoa@s+1)),c,w
  4620  000DDE  1035               	btfss	status,2
  4621  000DE0  A4D8               	goto	u1271
  4622  000DE2  EFF5  F006         	goto	u1270
  4623  000DE6  EFF7  F006         
  4624                           u1271:
  4625  000DEA                     	goto	l1758
  4626  000DEA  EF01  F007         u1270:
  4627  000DEE                     	
  4628                           l1756:
  4629  000DEE                     	movlb	0	; () banked
  4630  000DEE  0100               	
  4631                           	btfss	((_flags))&0ffh,(2)&7
  4632  000DF0  A569               	goto	u1281
  4633  000DF2  EFFD  F006         	goto	u1280
  4634  000DF6  EFFF  F006         u1281:
  4635  000DFA                     	goto	l1768
  4636  000DFA  EF23  F007         u1280:
  4637  000DFE                     	goto	l1758
  4638  000DFE  EF01  F007         	
  4639                           l214:; BSR set to: 0
  4640  000E02                     
  4641                           	line	309
  4642                           	
  4643                           l1758:
  4644  000E02                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 309:       
                                   --i;
  4645                           	decf	((c:dtoa@i)),c
  4646  000E02  063E               	btfss	status,0
  4647  000E04  A0D8               	decf	((c:dtoa@i+1)),c
  4648  000E06  063F               	line	310
  4649                           	
  4650                           l1760:
  4651  000E08                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 310:       
                                   dbuf[i] = s ? '-' : '+';
  4652                           	movf	((c:dtoa@s)),c,w
  4653  000E08  5034               iorwf	((c:dtoa@s+1)),c,w
  4654  000E0A  1035               	btfss	status,2
  4655  000E0C  A4D8               	goto	u1291
  4656  000E0E  EF0B  F007         	goto	u1290
  4657  000E12  EF0D  F007         
  4658                           u1291:
  4659  000E16                     	goto	l1764
  4660  000E16  EF13  F007         u1290:
  4661  000E1A                     	
  4662                           l1762:
  4663  000E1A                     	movlw	high(02Bh)
  4664  000E1A  0E00               	movwf	((c:_dtoa$379+1)),c
  4665  000E1C  6E2F               	movlw	low(02Bh)
  4666  000E1E  0E2B               	movwf	((c:_dtoa$379)),c
  4667  000E20  6E2E               	goto	l1766
  4668  000E22  EF19  F007         	
  4669                           l216:
  4670  000E26                     	
  4671                           l1764:
  4672  000E26                     	movlw	high(02Dh)
  4673  000E26  0E00               	movwf	((c:_dtoa$379+1)),c
  4674  000E28  6E2F               	movlw	low(02Dh)
  4675  000E2A  0E2D               	movwf	((c:_dtoa$379)),c
  4676  000E2C  6E2E               	goto	l1766
  4677  000E2E  EF19  F007         	
  4678                           l218:
  4679  000E32                     	
  4680                           l1766:
  4681  000E32                     	movlw	low(_dbuf)
  4682  000E32  0E6F               	addwf	((c:dtoa@i)),c,w
  4683  000E34  243E               	movwf	c:fsr2l
  4684  000E36  6ED9               	movlw	high(_dbuf)
  4685  000E38  0E00               	addwfc	((c:dtoa@i+1)),c,w
  4686  000E3A  203F               	movwf	1+c:fsr2l
  4687  000E3C  6EDA               	movff	(c:_dtoa$379),indf2
  4688  000E3E  C02E  FFDF         
  4689                           	goto	l1768
  4690  000E42  EF23  F007         	line	311
  4691                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 311:     }

  4692                           	
  4693                           l212:
  4694  000E46                     	line	314
  4695                           	
  4696                           l1768:
  4697  000E46                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 314:     re
                                 turn pad(fp, &dbuf[i], w);
  4698                           		movff	(c:dtoa@fp),(c:pad@fp)
  4699  000E46  C01C  F011         	movff	(c:dtoa@fp+1),(c:pad@fp+1)
  4700  000E4A  C01D  F012         
  4701                           	movlw	low(_dbuf)
  4702  000E4E  0E6F               	addwf	((c:dtoa@i)),c,w
  4703  000E50  243E               	movwf	((c:pad@buf)),c
  4704  000E52  6E13               	movlw	high(_dbuf)
  4705  000E54  0E00               	addwfc	((c:dtoa@i+1)),c,w
  4706  000E56  203F               	movwf	1+((c:pad@buf)),c
  4707  000E58  6E14               	movff	(c:dtoa@w),(c:pad@p)
  4708  000E5A  C032  F015         	movff	(c:dtoa@w+1),(c:pad@p+1)
  4709  000E5E  C033  F016         	call	_pad	;wreg free
  4710  000E62  EC0E  F00B         	movff	0+?_pad,(c:?_dtoa)
  4711  000E66  C011  F01C         	movff	1+?_pad,(c:?_dtoa+1)
  4712  000E6A  C012  F01D         	goto	l219
  4713  000E6E  EF39  F007         	
  4714                           l1770:
  4715  000E72                     	line	315
  4716                           	
  4717                           l219:
  4718  000E72                     	return	;funcret
  4719  000E72  0012               	opt stack 0
  4720                           GLOBAL	__end_of_dtoa
  4721                           	__end_of_dtoa:
  4722  000E74                     	signat	_dtoa,8314
  4723                           	global	_pad
  4724                           
  4725 ;; *************** function _pad *****************
  4726 ;; Defined at:
  4727 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4730 ;;		 -> sprintf@f(6), 
  4731 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4732 ;;		 -> dbuf(32), 
  4733 ;;  p               2   20[COMRAM] int 
  4734 ;; Auto vars:     Size  Location     Type
  4735 ;;  w               2   25[COMRAM] int 
  4736 ;;  i               2   23[COMRAM] int 
  4737 ;; Return value:  Size  Location     Type
  4738 ;;                  2   16[COMRAM] int 
  4739 ;; Registers used:
  4740 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4741 ;; Tracked objects:
  4742 ;;		On entry : 0/0
  4743 ;;		On exit  : 0/0
  4744 ;;		Unchanged: 0/0
  4745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4746 ;;      Params:         6       0       0       0       0       0       0       0       0
  4747 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4748 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4749 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4750 ;;Total ram usage:       11 bytes
  4751 ;; Hardware stack levels used:    1
  4752 ;; Hardware stack levels required when called:    3
  4753 ;; This function calls:
  4754 ;;		_fputc
  4755 ;;		_fputs
  4756 ;;		_strlen
  4757 ;; This function is called by:
  4758 ;;		_dtoa
  4759 ;;		_xtoa
  4760 ;; This function uses a non-reentrant model
  4761 ;;
  4762                           psect	text15,class=CODE,space=0,reloc=2,group=0
  4763                           	line	72
  4764                           global __ptext15
  4765                           __ptext15:
  4766  00161C                     psect	text15
  4767                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c"
  4768                           	line	72
  4769                           	global	__size_of_pad
  4770                           	__size_of_pad	equ	__end_of_pad-_pad
  4771  0000                     	
  4772                           _pad:
  4773  00161C                     ;incstack = 0
  4774                           	opt	stack 22
  4775                           	line	77
  4776                           	
  4777                           l1586:
  4778  00161C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 72: static 
                                 int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sourc
                                 es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99
                                 \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sourc
                                 es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  4779                           	movlb	0	; () banked
  4780  00161C  0100               	
  4781                           	btfss	((_flags))&0ffh,(0)&7
  4782  00161E  A169               	goto	u901
  4783  001620  EF14  F00B         	goto	u900
  4784  001624  EF16  F00B         u901:
  4785  001628                     	goto	l1590
  4786  001628  EF22  F00B         u900:
  4787  00162C                     	line	78
  4788                           	
  4789                           l1588:; BSR set to: 0
  4790  00162C                     
  4791                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 78:        
                                  fputs((const char *)buf, fp);
  4792                           		movff	(c:pad@buf),(c:fputs@s)
  4793  00162C  C013  F00A         	movff	(c:pad@buf+1),(c:fputs@s+1)
  4794  001630  C014  F00B         
  4795                           		movff	(c:pad@fp),(c:fputs@fp)
  4796  001634  C011  F00C         	movff	(c:pad@fp+1),(c:fputs@fp+1)
  4797  001638  C012  F00D         
  4798                           	call	_fputs	;wreg free
  4799  00163C  ECA2  F00D         	goto	l1590
  4800  001640  EF22  F00B         	line	79
  4801                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 79:     }
  4802                           	
  4803                           l184:
  4804  001644                     	line	82
  4805                           	
  4806                           l1590:
  4807  001644                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 82:     w =
                                  (p < 0) ? 0 : p;
  4808                           	btfsc	((c:pad@p+1)),c,7
  4809  001644  BE16               	goto	u911
  4810  001646  EF27  F00B         	goto	u910
  4811  00164A  EF29  F00B         
  4812                           u911:
  4813  00164E                     	goto	l1594
  4814  00164E  EF2F  F00B         u910:
  4815  001652                     	
  4816                           l1592:
  4817  001652                     	movff	(c:pad@p),(c:pad@w)
  4818  001652  C015  F01A         	movff	(c:pad@p+1),(c:pad@w+1)
  4819  001656  C016  F01B         	goto	l188
  4820  00165A  EF33  F00B         	
  4821                           l186:
  4822  00165E                     	
  4823                           l1594:
  4824  00165E                     	movlw	high(0)
  4825  00165E  0E00               	movwf	((c:pad@w+1)),c
  4826  001660  6E1B               	movlw	low(0)
  4827  001662  0E00               	movwf	((c:pad@w)),c
  4828  001664  6E1A               	
  4829                           l188:
  4830  001666                     	line	83
  4831                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 83:     i =
                                  0;
  4832                           	movlw	high(0)
  4833  001666  0E00               	movwf	((c:pad@i+1)),c
  4834  001668  6E19               	movlw	low(0)
  4835  00166A  0E00               	movwf	((c:pad@i)),c
  4836  00166C  6E18               	line	84
  4837                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 84:     whi
                                 le (i < w) {
  4838                           	goto	l1600
  4839  00166E  EF47  F00B         	
  4840                           l190:
  4841  001672                     	line	85
  4842                           	
  4843                           l1596:
  4844  001672                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 85:        
                                  fputc(' ', fp);
  4845                           	movlw	high(020h)
  4846  001672  0E00               	movwf	((c:fputc@c+1)),c
  4847  001674  6E02               	movlw	low(020h)
  4848  001676  0E20               	movwf	((c:fputc@c)),c
  4849  001678  6E01               		movff	(c:pad@fp),(c:fputc@fp)
  4850  00167A  C011  F003         	movff	(c:pad@fp+1),(c:fputc@fp+1)
  4851  00167E  C012  F004         
  4852                           	call	_fputc	;wreg free
  4853  001682  EC34  F00A         	line	86
  4854                           	
  4855                           l1598:
  4856  001686                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 86:        
                                  ++i;
  4857                           	infsnz	((c:pad@i)),c
  4858  001686  4A18               	incf	((c:pad@i+1)),c
  4859  001688  2A19               	goto	l1600
  4860  00168A  EF47  F00B         	line	87
  4861                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 87:     }
  4862                           	
  4863                           l189:
  4864  00168E                     	line	84
  4865                           	
  4866                           l1600:
  4867  00168E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 84:     whi
                                 le (i < w) {
  4868                           		movf	((c:pad@w)),c,w
  4869  00168E  501A               	subwf	((c:pad@i)),c,w
  4870  001690  5C18               	movf	((c:pad@i+1)),c,w
  4871  001692  5019               	xorlw	80h
  4872  001694  0A80               	movwf	(??_pad+0+0)&0ffh,c
  4873  001696  6E17               	movf	((c:pad@w+1)),c,w
  4874  001698  501B               	xorlw	80h
  4875  00169A  0A80               	subwfb	(??_pad+0+0)&0ffh,c,w
  4876  00169C  5817               	btfss	status,0
  4877  00169E  A0D8               	goto	u921
  4878  0016A0  EF54  F00B         	goto	u920
  4879  0016A4  EF56  F00B         
  4880                           u921:
  4881  0016A8                     	goto	l1596
  4882  0016A8  EF39  F00B         u920:
  4883  0016AC                     	
  4884                           l191:
  4885  0016AC                     	line	90
  4886                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 90:     if 
                                 (!(flags & (1 << 0))) {
  4887                           	movlb	0	; () banked
  4888  0016AC  0100               	
  4889                           	btfsc	((_flags))&0ffh,(0)&7
  4890  0016AE  B169               	goto	u931
  4891  0016B0  EF5C  F00B         	goto	u930
  4892  0016B4  EF5E  F00B         u931:
  4893  0016B8                     	goto	l1604
  4894  0016B8  EF6A  F00B         u930:
  4895  0016BC                     	line	91
  4896                           	
  4897                           l1602:; BSR set to: 0
  4898  0016BC                     
  4899                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 91:        
                                  fputs((const char *)buf, fp);
  4900                           		movff	(c:pad@buf),(c:fputs@s)
  4901  0016BC  C013  F00A         	movff	(c:pad@buf+1),(c:fputs@s+1)
  4902  0016C0  C014  F00B         
  4903                           		movff	(c:pad@fp),(c:fputs@fp)
  4904  0016C4  C011  F00C         	movff	(c:pad@fp+1),(c:fputs@fp+1)
  4905  0016C8  C012  F00D         
  4906                           	call	_fputs	;wreg free
  4907  0016CC  ECA2  F00D         	goto	l1604
  4908  0016D0  EF6A  F00B         	line	92
  4909                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 92:     }
  4910                           	
  4911                           l192:
  4912  0016D4                     	line	94
  4913                           	
  4914                           l1604:
  4915  0016D4                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\doprnt.c: 94:     ret
                                 urn strlen(buf) + w;
  4916                           		movff	(c:pad@buf),(c:strlen@s)
  4917  0016D4  C013  F001         	movff	(c:pad@buf+1),(c:strlen@s+1)
  4918  0016D8  C014  F002         
  4919                           	call	_strlen	;wreg free
  4920  0016DC  EC79  F00D         	movf	((c:pad@w)),c,w
  4921  0016E0  501A               	addwf	(0+?_strlen),c,w
  4922  0016E2  2401               	movwf	((c:?_pad)),c
  4923  0016E4  6E11               	movf	((c:pad@w+1)),c,w
  4924  0016E6  501B               	addwfc	(1+?_strlen),c,w
  4925  0016E8  2002               	movwf	1+((c:?_pad)),c
  4926  0016EA  6E12               	goto	l193
  4927  0016EC  EF78  F00B         	
  4928                           l1606:
  4929  0016F0                     	line	95
  4930                           	
  4931                           l193:
  4932  0016F0                     	return	;funcret
  4933  0016F0  0012               	opt stack 0
  4934                           GLOBAL	__end_of_pad
  4935                           	__end_of_pad:
  4936  0016F2                     	signat	_pad,12410
  4937                           	global	_strlen
  4938                           
  4939 ;; *************** function _strlen *****************
  4940 ;; Defined at:
  4941 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  4942 ;; Parameters:    Size  Location     Type
  4943 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4944 ;;		 -> dbuf(32), 
  4945 ;; Auto vars:     Size  Location     Type
  4946 ;;  a               2    4[COMRAM] PTR const unsigned char 
  4947 ;;		 -> dbuf(32), 
  4948 ;; Return value:  Size  Location     Type
  4949 ;;                  2    0[COMRAM] unsigned int 
  4950 ;; Registers used:
  4951 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4952 ;; Tracked objects:
  4953 ;;		On entry : 0/0
  4954 ;;		On exit  : 0/0
  4955 ;;		Unchanged: 0/0
  4956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4957 ;;      Params:         2       0       0       0       0       0       0       0       0
  4958 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4959 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4960 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4961 ;;Total ram usage:        6 bytes
  4962 ;; Hardware stack levels used:    1
  4963 ;; This function calls:
  4964 ;;		Nothing
  4965 ;; This function is called by:
  4966 ;;		_pad
  4967 ;; This function uses a non-reentrant model
  4968 ;;
  4969                           psect	text16,class=CODE,space=0,reloc=2,group=2
  4970                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  4971                           	line	12
  4972                           global __ptext16
  4973                           __ptext16:
  4974  001AF2                     psect	text16
  4975                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\strlen.c"
  4976                           	line	12
  4977                           	global	__size_of_strlen
  4978                           	__size_of_strlen	equ	__end_of_strlen-_strlen
  4979  0000                     	
  4980                           _strlen:
  4981  001AF2                     ;incstack = 0
  4982                           	opt	stack 24
  4983                           	line	14
  4984                           	
  4985                           l1572:
  4986  001AF2                     		movff	(c:strlen@s),(c:strlen@a)
  4987  001AF2  C001  F005         	movff	(c:strlen@s+1),(c:strlen@a+1)
  4988  001AF6  C002  F006         
  4989                           	line	16
  4990                           	goto	l1576
  4991  001AFA  EF83  F00D         	
  4992                           l993:
  4993  001AFE                     	line	17
  4994                           	
  4995                           l1574:
  4996  001AFE                     	infsnz	((c:strlen@s)),c
  4997  001AFE  4A01               	incf	((c:strlen@s+1)),c
  4998  001B00  2A02               	goto	l1576
  4999  001B02  EF83  F00D         	line	18
  5000                           	
  5001                           l992:
  5002  001B06                     	line	16
  5003                           	
  5004                           l1576:
  5005  001B06                     	movff	(c:strlen@s),fsr2l
  5006  001B06  C001  FFD9         	movff	(c:strlen@s+1),fsr2h
  5007  001B0A  C002  FFDA         	movf	indf2,w
  5008  001B0E  50DF               	btfss	status,2
  5009  001B10  A4D8               	goto	u871
  5010  001B12  EF8D  F00D         	goto	u870
  5011  001B16  EF8F  F00D         u871:
  5012  001B1A                     	goto	l1574
  5013  001B1A  EF7F  F00D         u870:
  5014  001B1E                     	goto	l1578
  5015  001B1E  EF91  F00D         	
  5016                           l994:
  5017  001B22                     	line	25
  5018                           	
  5019                           l1578:
  5020  001B22                     	movff	(c:strlen@a),??_strlen+0+0
  5021  001B22  C005  F003         	movff	(c:strlen@a+1),??_strlen+0+0+1
  5022  001B26  C006  F004         	comf	(??_strlen+0+0),c
  5023  001B2A  1E03               	comf	(??_strlen+0+1),c
  5024  001B2C  1E04               	infsnz	(??_strlen+0+0),c
  5025  001B2E  4A03               	incf	(??_strlen+0+1),c
  5026  001B30  2A04               	movf	((c:strlen@s)),c,w
  5027  001B32  5001               	addwf	(??_strlen+0+0),c,w
  5028  001B34  2403               	movwf	((c:?_strlen)),c
  5029  001B36  6E01               	movf	((c:strlen@s+1)),c,w
  5030  001B38  5002               	addwfc	(??_strlen+0+1),c,w
  5031  001B3A  2004               	movwf	1+((c:?_strlen)),c
  5032  001B3C  6E02               	goto	l995
  5033  001B3E  EFA1  F00D         	
  5034                           l1580:
  5035  001B42                     	line	26
  5036                           	
  5037                           l995:
  5038  001B42                     	return	;funcret
  5039  001B42  0012               	opt stack 0
  5040                           GLOBAL	__end_of_strlen
  5041                           	__end_of_strlen:
  5042  001B44                     	signat	_strlen,4218
  5043                           	global	_fputs
  5044                           
  5045 ;; *************** function _fputs *****************
  5046 ;; Defined at:
  5047 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
  5048 ;; Parameters:    Size  Location     Type
  5049 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5050 ;;		 -> dbuf(32), 
  5051 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5052 ;;		 -> sprintf@f(6), 
  5053 ;; Auto vars:     Size  Location     Type
  5054 ;;  i               2   14[COMRAM] int 
  5055 ;;  c               1   13[COMRAM] unsigned char 
  5056 ;; Return value:  Size  Location     Type
  5057 ;;                  2    9[COMRAM] int 
  5058 ;; Registers used:
  5059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5060 ;; Tracked objects:
  5061 ;;		On entry : 0/0
  5062 ;;		On exit  : 0/0
  5063 ;;		Unchanged: 0/0
  5064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5065 ;;      Params:         4       0       0       0       0       0       0       0       0
  5066 ;;      Locals:         3       0       0       0       0       0       0       0       0
  5067 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5068 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5069 ;;Total ram usage:        7 bytes
  5070 ;; Hardware stack levels used:    1
  5071 ;; Hardware stack levels required when called:    2
  5072 ;; This function calls:
  5073 ;;		_fputc
  5074 ;; This function is called by:
  5075 ;;		_pad
  5076 ;; This function uses a non-reentrant model
  5077 ;;
  5078                           psect	text17,class=CODE,space=0,reloc=2,group=2
  5079                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
  5080                           	line	8
  5081                           global __ptext17
  5082                           __ptext17:
  5083  001B44                     psect	text17
  5084                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputs.c"
  5085                           	line	8
  5086                           	global	__size_of_fputs
  5087                           	__size_of_fputs	equ	__end_of_fputs-_fputs
  5088  0000                     	
  5089                           _fputs:
  5090  001B44                     ;incstack = 0
  5091                           	opt	stack 22
  5092                           	line	13
  5093                           	
  5094                           l1564:
  5095  001B44                     	movlw	high(0)
  5096  001B44  0E00               	movwf	((c:fputs@i+1)),c
  5097  001B46  6E10               	movlw	low(0)
  5098  001B48  0E00               	movwf	((c:fputs@i)),c
  5099  001B4A  6E0F               	line	14
  5100                           	goto	l1570
  5101  001B4C  EFB5  F00D         	
  5102                           l977:
  5103  001B50                     	line	15
  5104                           	
  5105                           l1566:
  5106  001B50                     	movff	(c:fputs@c),(c:fputc@c)
  5107  001B50  C00E  F001         	clrf	((c:fputc@c+1)),c
  5108  001B54  6A02               		movff	(c:fputs@fp),(c:fputc@fp)
  5109  001B56  C00C  F003         	movff	(c:fputs@fp+1),(c:fputc@fp+1)
  5110  001B5A  C00D  F004         
  5111                           	call	_fputc	;wreg free
  5112  001B5E  EC34  F00A         	line	16
  5113                           	
  5114                           l1568:
  5115  001B62                     	infsnz	((c:fputs@i)),c
  5116  001B62  4A0F               	incf	((c:fputs@i+1)),c
  5117  001B64  2A10               	goto	l1570
  5118  001B66  EFB5  F00D         	line	17
  5119                           	
  5120                           l976:
  5121  001B6A                     	line	14
  5122                           	
  5123                           l1570:
  5124  001B6A                     	movf	((c:fputs@i)),c,w
  5125  001B6A  500F               	addwf	((c:fputs@s)),c,w
  5126  001B6C  240A               	movwf	c:fsr2l
  5127  001B6E  6ED9               	movf	((c:fputs@i+1)),c,w
  5128  001B70  5010               	addwfc	((c:fputs@s+1)),c,w
  5129  001B72  200B               	movwf	1+c:fsr2l
  5130  001B74  6EDA               	movf	indf2,w
  5131  001B76  50DF               	movwf	((c:fputs@c)),c
  5132  001B78  6E0E               	movf	((c:fputs@c)),c,w
  5133  001B7A  500E               	btfss	status,2
  5134  001B7C  A4D8               	goto	u861
  5135  001B7E  EFC3  F00D         	goto	u860
  5136  001B82  EFC5  F00D         u861:
  5137  001B86                     	goto	l1566
  5138  001B86  EFA8  F00D         u860:
  5139  001B8A                     	goto	l979
  5140  001B8A  EFC7  F00D         	
  5141                           l978:
  5142  001B8E                     	line	19
  5143                           ;	Return value of _fputs is never used
  5144                           	
  5145                           l979:
  5146  001B8E                     	return	;funcret
  5147  001B8E  0012               	opt stack 0
  5148                           GLOBAL	__end_of_fputs
  5149                           	__end_of_fputs:
  5150  001B90                     	signat	_fputs,8314
  5151                           	global	_fputc
  5152                           
  5153 ;; *************** function _fputc *****************
  5154 ;; Defined at:
  5155 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
  5156 ;; Parameters:    Size  Location     Type
  5157 ;;  c               2    0[COMRAM] int 
  5158 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5159 ;;		 -> sprintf@f(6), 
  5160 ;; Auto vars:     Size  Location     Type
  5161 ;;		None
  5162 ;; Return value:  Size  Location     Type
  5163 ;;                  2    0[COMRAM] int 
  5164 ;; Registers used:
  5165 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5166 ;; Tracked objects:
  5167 ;;		On entry : 0/0
  5168 ;;		On exit  : 0/0
  5169 ;;		Unchanged: 0/0
  5170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5171 ;;      Params:         4       0       0       0       0       0       0       0       0
  5172 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5173 ;;      Temps:          5       0       0       0       0       0       0       0       0
  5174 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5175 ;;Total ram usage:        9 bytes
  5176 ;; Hardware stack levels used:    1
  5177 ;; Hardware stack levels required when called:    1
  5178 ;; This function calls:
  5179 ;;		_putch
  5180 ;; This function is called by:
  5181 ;;		_pad
  5182 ;;		_vfpfcnvrt
  5183 ;;		_fputs
  5184 ;; This function uses a non-reentrant model
  5185 ;;
  5186                           psect	text18,class=CODE,space=0,reloc=2,group=2
  5187                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
  5188                           	line	8
  5189                           global __ptext18
  5190                           __ptext18:
  5191  001468                     psect	text18
  5192                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\nf_fputc.c"
  5193                           	line	8
  5194                           	global	__size_of_fputc
  5195                           	__size_of_fputc	equ	__end_of_fputc-_fputc
  5196  0000                     	
  5197                           _fputc:
  5198  001468                     ;incstack = 0
  5199                           	opt	stack 22
  5200                           	line	12
  5201                           	
  5202                           l1550:
  5203  001468                     	movf	((c:fputc@fp)),c,w
  5204  001468  5003               iorwf	((c:fputc@fp+1)),c,w
  5205  00146A  1004               	btfsc	status,2
  5206  00146C  B4D8               	goto	u821
  5207  00146E  EF3B  F00A         	goto	u820
  5208  001472  EF3D  F00A         
  5209                           u821:
  5210  001476                     	goto	l1554
  5211  001476  EF48  F00A         u820:
  5212  00147A                     	
  5213                           l1552:
  5214  00147A                     	movf	((c:fputc@fp)),c,w
  5215  00147A  5003               iorwf	((c:fputc@fp+1)),c,w
  5216  00147C  1004               	btfss	status,2
  5217  00147E  A4D8               	goto	u831
  5218  001480  EF44  F00A         	goto	u830
  5219  001484  EF46  F00A         
  5220                           u831:
  5221  001488                     	goto	l1556
  5222  001488  EF4D  F00A         u830:
  5223  00148C                     	goto	l1554
  5224  00148C  EF48  F00A         	
  5225                           l966:
  5226  001490                     	line	13
  5227                           	
  5228                           l1554:
  5229  001490                     	movf	((c:fputc@c)),c,w
  5230  001490  5001               	
  5231                           	call	_putch
  5232  001492  EC17  F00F         	line	14
  5233                           	goto	l971
  5234  001496  EFA2  F00A         	
  5235                           l964:
  5236  00149A                     	line	15
  5237                           	
  5238                           l1556:
  5239  00149A                     	lfsr	2,04h
  5240  00149A  EE20 F004          	movf	((c:fputc@fp)),c,w
  5241  00149E  5003               	addwf	fsr2l
  5242  0014A0  26D9               	movf	((c:fputc@fp+1)),c,w
  5243  0014A2  5004               	addwfc	fsr2h
  5244  0014A4  22DA               	movf	postinc2,w
  5245  0014A6  50DE               iorwf	postinc2,w
  5246  0014A8  10DE               	btfsc	status,2
  5247  0014AA  B4D8               	goto	u841
  5248  0014AC  EF5A  F00A         	goto	u840
  5249  0014B0  EF5C  F00A         
  5250                           u841:
  5251  0014B4                     	goto	l1560
  5252  0014B4  EF79  F00A         u840:
  5253  0014B8                     	
  5254                           l1558:
  5255  0014B8                     	lfsr	2,04h
  5256  0014B8  EE20 F004          	movf	((c:fputc@fp)),c,w
  5257  0014BC  5003               	addwf	fsr2l
  5258  0014BE  26D9               	movf	((c:fputc@fp+1)),c,w
  5259  0014C0  5004               	addwfc	fsr2h
  5260  0014C2  22DA               	lfsr	1,02h
  5261  0014C4  EE10 F002          	movf	((c:fputc@fp)),c,w
  5262  0014C8  5003               	addwf	fsr1l
  5263  0014CA  26E1               	movf	((c:fputc@fp+1)),c,w
  5264  0014CC  5004               	addwfc	fsr1h
  5265  0014CE  22E2               		movf	postinc2,w
  5266  0014D0  50DE               	subwf	postinc1,w
  5267  0014D2  5CE6               	movf	postinc1,w
  5268  0014D4  50E6               	xorlw	80h
  5269  0014D6  0A80               	movwf	(??_fputc+4+0)&0ffh,c
  5270  0014D8  6E09               	movf	postinc2,w
  5271  0014DA  50DE               	xorlw	80h
  5272  0014DC  0A80               	subwfb	(??_fputc+4+0)&0ffh,c,w
  5273  0014DE  5809               	btfsc	status,0
  5274  0014E0  B0D8               	goto	u851
  5275  0014E2  EF75  F00A         	goto	u850
  5276  0014E6  EF77  F00A         
  5277                           u851:
  5278  0014EA                     	goto	l971
  5279  0014EA  EFA2  F00A         u850:
  5280  0014EE                     	goto	l1560
  5281  0014EE  EF79  F00A         	
  5282                           l970:
  5283  0014F2                     	line	16
  5284                           	
  5285                           l1560:
  5286  0014F2                     	lfsr	2,02h
  5287  0014F2  EE20 F002          	movf	((c:fputc@fp)),c,w
  5288  0014F6  5003               	addwf	fsr2l
  5289  0014F8  26D9               	movf	((c:fputc@fp+1)),c,w
  5290  0014FA  5004               	addwfc	fsr2h
  5291  0014FC  22DA               	movff	postinc2,??_fputc+0+0
  5292  0014FE  CFDE F005          	movff	postdec2,??_fputc+0+0+1
  5293  001502  CFDD F006          	movff	(c:fputc@fp),fsr2l
  5294  001506  C003  FFD9         	movff	(c:fputc@fp+1),fsr2h
  5295  00150A  C004  FFDA         	movff	postinc2,??_fputc+2+0
  5296  00150E  CFDE F007          	movff	postdec2,??_fputc+2+0+1
  5297  001512  CFDD F008          	movf	(??_fputc+0+0),c,w
  5298  001516  5005               	addwf	(??_fputc+2+0),c,w
  5299  001518  2407               	movwf	c:fsr2l
  5300  00151A  6ED9               	movf	(??_fputc+0+1),c,w
  5301  00151C  5006               	addwfc	(??_fputc+2+1),c,w
  5302  00151E  2008               	movwf	1+c:fsr2l
  5303  001520  6EDA               	movff	(c:fputc@c),indf2
  5304  001522  C001  FFDF         
  5305                           	line	17
  5306                           	lfsr	2,02h
  5307  001526  EE20 F002          	movf	((c:fputc@fp)),c,w
  5308  00152A  5003               	addwf	fsr2l
  5309  00152C  26D9               	movf	((c:fputc@fp+1)),c,w
  5310  00152E  5004               	addwfc	fsr2h
  5311  001530  22DA               	incf	postinc2
  5312  001532  2ADE               	movlw	0
  5313  001534  0E00               	addwfc	postdec2
  5314  001536  22DD               	goto	l971
  5315  001538  EFA2  F00A         	line	18
  5316                           	
  5317                           l968:
  5318  00153C                     	goto	l971
  5319  00153C  EFA2  F00A         	line	19
  5320                           	
  5321                           l967:
  5322  001540                     	goto	l971
  5323  001540  EFA2  F00A         	line	20
  5324                           	
  5325                           l1562:
  5326  001544                     	line	21
  5327                           ;	Return value of _fputc is never used
  5328                           	
  5329                           l971:
  5330  001544                     	return	;funcret
  5331  001544  0012               	opt stack 0
  5332                           GLOBAL	__end_of_fputc
  5333                           	__end_of_fputc:
  5334  001546                     	signat	_fputc,8314
  5335                           	global	_putch
  5336                           
  5337 ;; *************** function _putch *****************
  5338 ;; Defined at:
  5339 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;  c               1    wreg     unsigned char 
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;  c               1    0[COMRAM] unsigned char 
  5344 ;; Return value:  Size  Location     Type
  5345 ;;                  1    wreg      void 
  5346 ;; Registers used:
  5347 ;;		wreg
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5353 ;;      Params:         0       0       0       0       0       0       0       0       0
  5354 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5355 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5356 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5357 ;;Total ram usage:        0 bytes
  5358 ;; Hardware stack levels used:    1
  5359 ;; This function calls:
  5360 ;;		Nothing
  5361 ;; This function is called by:
  5362 ;;		_fputc
  5363 ;; This function uses a non-reentrant model
  5364 ;;
  5365                           psect	text19,class=CODE,space=0,reloc=2,group=2
  5366                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
  5367                           	line	7
  5368                           global __ptext19
  5369                           __ptext19:
  5370  001E2E                     psect	text19
  5371                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\putch.c"
  5372                           	line	7
  5373                           	global	__size_of_putch
  5374                           	__size_of_putch	equ	__end_of_putch-_putch
  5375  0000                     	
  5376                           _putch:
  5377  001E2E                     ;incstack = 0
  5378                           	opt	stack 22
  5379                           	line	9
  5380                           	
  5381                           l989:
  5382  001E2E                     	return	;funcret
  5383  001E2E  0012               	opt stack 0
  5384                           GLOBAL	__end_of_putch
  5385                           	__end_of_putch:
  5386  001E30                     	signat	_putch,4217
  5387                           	global	_abs
  5388                           
  5389 ;; *************** function _abs *****************
  5390 ;; Defined at:
  5391 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
  5392 ;; Parameters:    Size  Location     Type
  5393 ;;  a               2   18[COMRAM] int 
  5394 ;; Auto vars:     Size  Location     Type
  5395 ;;		None
  5396 ;; Return value:  Size  Location     Type
  5397 ;;                  2   18[COMRAM] int 
  5398 ;; Registers used:
  5399 ;;		wreg, status,2, status,0
  5400 ;; Tracked objects:
  5401 ;;		On entry : 0/0
  5402 ;;		On exit  : 0/0
  5403 ;;		Unchanged: 0/0
  5404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5405 ;;      Params:         2       0       0       0       0       0       0       0       0
  5406 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5407 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5408 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5409 ;;Total ram usage:        4 bytes
  5410 ;; Hardware stack levels used:    1
  5411 ;; This function calls:
  5412 ;;		Nothing
  5413 ;; This function is called by:
  5414 ;;		_dtoa
  5415 ;; This function uses a non-reentrant model
  5416 ;;
  5417                           psect	text20,class=CODE,space=0,reloc=2,group=2
  5418                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
  5419                           	line	1
  5420                           global __ptext20
  5421                           __ptext20:
  5422  001B90                     psect	text20
  5423                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
  5424                           	line	1
  5425                           	global	__size_of_abs
  5426                           	__size_of_abs	equ	__end_of_abs-_abs
  5427  0000                     	
  5428                           _abs:
  5429  001B90                     ;incstack = 0
  5430                           	opt	stack 25
  5431                           	line	3
  5432                           	
  5433                           l1608:
  5434  001B90                     	btfsc	((c:abs@a+1)),c,7
  5435  001B90  BE14               	goto	u940
  5436  001B92  EFD5  F00D         	movf	((c:abs@a+1)),c,w
  5437  001B96  5014               	bnz	u941
  5438  001B98  E106               	decf	((c:abs@a)),c,w
  5439  001B9A  0413               	btfsc	status,0
  5440  001B9C  B0D8               	goto	u941
  5441  001B9E  EFD3  F00D         	goto	u940
  5442  001BA2  EFD5  F00D         
  5443                           u941:
  5444  001BA6                     	goto	l944
  5445  001BA6  EFE3  F00D         u940:
  5446  001BAA                     	
  5447                           l1610:
  5448  001BAA                     	movff	(c:abs@a),??_abs+0+0
  5449  001BAA  C013  F015         	movff	(c:abs@a+1),??_abs+0+0+1
  5450  001BAE  C014  F016         	comf	(??_abs+0+0),c
  5451  001BB2  1E15               	comf	(??_abs+0+1),c
  5452  001BB4  1E16               	infsnz	(??_abs+0+0),c
  5453  001BB6  4A15               	incf	(??_abs+0+1),c
  5454  001BB8  2A16               	movff	??_abs+0+0,(c:?_abs)
  5455  001BBA  C015  F013         	movff	??_abs+0+1,(c:?_abs+1)
  5456  001BBE  C016  F014         	goto	l947
  5457  001BC2  EFE9  F00D         	
  5458                           l944:
  5459  001BC6                     	movff	(c:abs@a),(c:?_abs)
  5460  001BC6  C013  F013         	movff	(c:abs@a+1),(c:?_abs+1)
  5461  001BCA  C014  F014         	goto	l947
  5462  001BCE  EFE9  F00D         	
  5463                           l946:
  5464  001BD2                     	line	4
  5465                           	
  5466                           l947:
  5467  001BD2                     	return	;funcret
  5468  001BD2  0012               	opt stack 0
  5469                           GLOBAL	__end_of_abs
  5470                           	__end_of_abs:
  5471  001BD4                     	signat	_abs,4218
  5472                           	global	___aomod
  5473                           
  5474 ;; *************** function ___aomod *****************
  5475 ;; Defined at:
  5476 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aomod.c"
  5477 ;; Parameters:    Size  Location     Type
  5478 ;;  dividend        8    0[COMRAM] long long 
  5479 ;;  divisor         8    8[COMRAM] long long 
  5480 ;; Auto vars:     Size  Location     Type
  5481 ;;  sign            1   17[COMRAM] unsigned char 
  5482 ;;  counter         1   16[COMRAM] unsigned char 
  5483 ;; Return value:  Size  Location     Type
  5484 ;;                  8    0[COMRAM] long long 
  5485 ;; Registers used:
  5486 ;;		wreg, status,2, status,0
  5487 ;; Tracked objects:
  5488 ;;		On entry : 0/0
  5489 ;;		On exit  : 0/0
  5490 ;;		Unchanged: 0/0
  5491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5492 ;;      Params:        16       0       0       0       0       0       0       0       0
  5493 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5494 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5495 ;;      Totals:        18       0       0       0       0       0       0       0       0
  5496 ;;Total ram usage:       18 bytes
  5497 ;; Hardware stack levels used:    1
  5498 ;; This function calls:
  5499 ;;		Nothing
  5500 ;; This function is called by:
  5501 ;;		_dtoa
  5502 ;; This function uses a non-reentrant model
  5503 ;;
  5504                           psect	text21,class=CODE,space=0,reloc=2,group=1
  5505                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aomod.c"
  5506                           	line	9
  5507                           global __ptext21
  5508                           __ptext21:
  5509  0012DC                     psect	text21
  5510                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aomod.c"
  5511                           	line	9
  5512                           	global	__size_of___aomod
  5513                           	__size_of___aomod	equ	__end_of___aomod-___aomod
  5514  0000                     	
  5515                           ___aomod:
  5516  0012DC                     ;incstack = 0
  5517                           	opt	stack 25
  5518                           	line	14
  5519                           	
  5520                           l1674:
  5521  0012DC                     	movlw	low(0)
  5522  0012DC  0E00               	movwf	((c:___aomod@sign)),c
  5523  0012DE  6E12               	line	15
  5524                           	
  5525                           l1676:
  5526  0012E0                     	btfsc	((c:___aomod@dividend+7)),c,7
  5527  0012E0  BE08               	goto	u1090
  5528  0012E2  EF77  F009         	goto	u1091
  5529  0012E6  EF75  F009         
  5530                           u1091:
  5531  0012EA                     	goto	l1682
  5532  0012EA  EF8B  F009         u1090:
  5533  0012EE                     	line	16
  5534                           	
  5535                           l1678:
  5536  0012EE                     	comf	((c:___aomod@dividend+7)),c
  5537  0012EE  1E08               	comf	((c:___aomod@dividend+6)),c
  5538  0012F0  1E07               	comf	((c:___aomod@dividend+5)),c
  5539  0012F2  1E06               	comf	((c:___aomod@dividend+4)),c
  5540  0012F4  1E05               	comf	((c:___aomod@dividend+3)),c
  5541  0012F6  1E04               	comf	((c:___aomod@dividend+2)),c
  5542  0012F8  1E03               	comf	((c:___aomod@dividend+1)),c
  5543  0012FA  1E02               	negf	((c:___aomod@dividend)),c
  5544  0012FC  6C01               	movlw	0
  5545  0012FE  0E00               	addwfc	((c:___aomod@dividend+1)),c
  5546  001300  2202               	addwfc	((c:___aomod@dividend+2)),c
  5547  001302  2203               	addwfc	((c:___aomod@dividend+3)),c
  5548  001304  2204               	addwfc	((c:___aomod@dividend+4)),c
  5549  001306  2205               	addwfc	((c:___aomod@dividend+5)),c
  5550  001308  2206               	addwfc	((c:___aomod@dividend+6)),c
  5551  00130A  2207               	addwfc	((c:___aomod@dividend+7)),c
  5552  00130C  2208               	line	17
  5553                           	
  5554                           l1680:
  5555  00130E                     	movlw	low(01h)
  5556  00130E  0E01               	movwf	((c:___aomod@sign)),c
  5557  001310  6E12               	goto	l1682
  5558  001312  EF8B  F009         	line	18
  5559                           	
  5560                           l386:
  5561  001316                     	line	19
  5562                           	
  5563                           l1682:
  5564  001316                     	btfsc	((c:___aomod@divisor+7)),c,7
  5565  001316  BE10               	goto	u1100
  5566  001318  EF92  F009         	goto	u1101
  5567  00131C  EF90  F009         
  5568                           u1101:
  5569  001320                     	goto	l1686
  5570  001320  EFA4  F009         u1100:
  5571  001324                     	line	20
  5572                           	
  5573                           l1684:
  5574  001324                     	comf	((c:___aomod@divisor+7)),c
  5575  001324  1E10               	comf	((c:___aomod@divisor+6)),c
  5576  001326  1E0F               	comf	((c:___aomod@divisor+5)),c
  5577  001328  1E0E               	comf	((c:___aomod@divisor+4)),c
  5578  00132A  1E0D               	comf	((c:___aomod@divisor+3)),c
  5579  00132C  1E0C               	comf	((c:___aomod@divisor+2)),c
  5580  00132E  1E0B               	comf	((c:___aomod@divisor+1)),c
  5581  001330  1E0A               	negf	((c:___aomod@divisor)),c
  5582  001332  6C09               	movlw	0
  5583  001334  0E00               	addwfc	((c:___aomod@divisor+1)),c
  5584  001336  220A               	addwfc	((c:___aomod@divisor+2)),c
  5585  001338  220B               	addwfc	((c:___aomod@divisor+3)),c
  5586  00133A  220C               	addwfc	((c:___aomod@divisor+4)),c
  5587  00133C  220D               	addwfc	((c:___aomod@divisor+5)),c
  5588  00133E  220E               	addwfc	((c:___aomod@divisor+6)),c
  5589  001340  220F               	addwfc	((c:___aomod@divisor+7)),c
  5590  001342  2210               	goto	l1686
  5591  001344  EFA4  F009         	
  5592                           l387:
  5593  001348                     	line	21
  5594                           	
  5595                           l1686:
  5596  001348                     	movf	((c:___aomod@divisor)),c,w
  5597  001348  5009               iorwf	((c:___aomod@divisor+1)),c,w
  5598  00134A  100A               iorwf	((c:___aomod@divisor+2)),c,w
  5599  00134C  100B               iorwf	((c:___aomod@divisor+3)),c,w
  5600  00134E  100C               iorwf	((c:___aomod@divisor+4)),c,w
  5601  001350  100D               iorwf	((c:___aomod@divisor+5)),c,w
  5602  001352  100E               iorwf	((c:___aomod@divisor+6)),c,w
  5603  001354  100F               iorwf	((c:___aomod@divisor+7)),c,w
  5604  001356  1010               	btfsc	status,2
  5605  001358  B4D8               	goto	u1111
  5606  00135A  EFB1  F009         	goto	u1110
  5607  00135E  EFB3  F009         
  5608                           u1111:
  5609  001362                     	goto	l1702
  5610  001362  EF07  F00A         u1110:
  5611  001366                     	line	22
  5612                           	
  5613                           l1688:
  5614  001366                     	movlw	low(01h)
  5615  001366  0E01               	movwf	((c:___aomod@counter)),c
  5616  001368  6E11               	line	23
  5617                           	goto	l1692
  5618  00136A  EFC3  F009         	
  5619                           l390:
  5620  00136E                     	line	24
  5621                           	
  5622                           l1690:
  5623  00136E                     	bcf	status,0
  5624  00136E  90D8               	rlcf	((c:___aomod@divisor)),c
  5625  001370  3609               	rlcf	((c:___aomod@divisor+1)),c
  5626  001372  360A               	rlcf	((c:___aomod@divisor+2)),c
  5627  001374  360B               	rlcf	((c:___aomod@divisor+3)),c
  5628  001376  360C               	rlcf	((c:___aomod@divisor+4)),c
  5629  001378  360D               	rlcf	((c:___aomod@divisor+5)),c
  5630  00137A  360E               	rlcf	((c:___aomod@divisor+6)),c
  5631  00137C  360F               	rlcf	((c:___aomod@divisor+7)),c
  5632  00137E  3610               	line	25
  5633                           	incf	((c:___aomod@counter)),c
  5634  001380  2A11               	goto	l1692
  5635  001382  EFC3  F009         	line	26
  5636                           	
  5637                           l389:
  5638  001386                     	line	23
  5639                           	
  5640                           l1692:
  5641  001386                     	
  5642                           	btfss	((c:___aomod@divisor+7)),c,(63)&7
  5643  001386  AE10               	goto	u1121
  5644  001388  EFC8  F009         	goto	u1120
  5645  00138C  EFCA  F009         u1121:
  5646  001390                     	goto	l1690
  5647  001390  EFB7  F009         u1120:
  5648  001394                     	goto	l1694
  5649  001394  EFCE  F009         	
  5650                           l391:
  5651  001398                     	goto	l1694
  5652  001398  EFCE  F009         	line	27
  5653                           	
  5654                           l392:
  5655  00139C                     	line	28
  5656                           	
  5657                           l1694:
  5658  00139C                     		movf	((c:___aomod@divisor)),c,w
  5659  00139C  5009               	subwf	((c:___aomod@dividend)),c,w
  5660  00139E  5C01               	movf	((c:___aomod@divisor+1)),c,w
  5661  0013A0  500A               	subwfb	((c:___aomod@dividend+1)),c,w
  5662  0013A2  5802               	movf	((c:___aomod@divisor+2)),c,w
  5663  0013A4  500B               	subwfb	((c:___aomod@dividend+2)),c,w
  5664  0013A6  5803               	movf	((c:___aomod@divisor+3)),c,w
  5665  0013A8  500C               	subwfb	((c:___aomod@dividend+3)),c,w
  5666  0013AA  5804               	movf	((c:___aomod@divisor+4)),c,w
  5667  0013AC  500D               	subwfb	((c:___aomod@dividend+4)),c,w
  5668  0013AE  5805               	movf	((c:___aomod@divisor+5)),c,w
  5669  0013B0  500E               	subwfb	((c:___aomod@dividend+5)),c,w
  5670  0013B2  5806               	movf	((c:___aomod@divisor+6)),c,w
  5671  0013B4  500F               	subwfb	((c:___aomod@dividend+6)),c,w
  5672  0013B6  5807               	movf	((c:___aomod@divisor+7)),c,w
  5673  0013B8  5010               	subwfb	((c:___aomod@dividend+7)),c,w
  5674  0013BA  5808               	btfss	status,0
  5675  0013BC  A0D8               	goto	u1131
  5676  0013BE  EFE3  F009         	goto	u1130
  5677  0013C2  EFE5  F009         
  5678                           u1131:
  5679  0013C6                     	goto	l1698
  5680  0013C6  EFF7  F009         u1130:
  5681  0013CA                     	line	29
  5682                           	
  5683                           l1696:
  5684  0013CA                     	movf	((c:___aomod@divisor)),c,w
  5685  0013CA  5009               	subwf	((c:___aomod@dividend)),c
  5686  0013CC  5E01               	movf	((c:___aomod@divisor+1)),c,w
  5687  0013CE  500A               	subwfb	((c:___aomod@dividend+1)),c
  5688  0013D0  5A02               	movf	((c:___aomod@divisor+2)),c,w
  5689  0013D2  500B               	subwfb	((c:___aomod@dividend+2)),c
  5690  0013D4  5A03               	movf	((c:___aomod@divisor+3)),c,w
  5691  0013D6  500C               	subwfb	((c:___aomod@dividend+3)),c
  5692  0013D8  5A04               	movf	((c:___aomod@divisor+4)),c,w
  5693  0013DA  500D               	subwfb	((c:___aomod@dividend+4)),c
  5694  0013DC  5A05               	movf	((c:___aomod@divisor+5)),c,w
  5695  0013DE  500E               	subwfb	((c:___aomod@dividend+5)),c
  5696  0013E0  5A06               	movf	((c:___aomod@divisor+6)),c,w
  5697  0013E2  500F               	subwfb	((c:___aomod@dividend+6)),c
  5698  0013E4  5A07               	movf	((c:___aomod@divisor+7)),c,w
  5699  0013E6  5010               	subwfb	((c:___aomod@dividend+7)),c
  5700  0013E8  5A08               	goto	l1698
  5701  0013EA  EFF7  F009         	
  5702                           l393:
  5703  0013EE                     	line	30
  5704                           	
  5705                           l1698:
  5706  0013EE                     	bcf	status,0
  5707  0013EE  90D8               	rrcf	((c:___aomod@divisor+7)),c
  5708  0013F0  3210               	rrcf	((c:___aomod@divisor+6)),c
  5709  0013F2  320F               	rrcf	((c:___aomod@divisor+5)),c
  5710  0013F4  320E               	rrcf	((c:___aomod@divisor+4)),c
  5711  0013F6  320D               	rrcf	((c:___aomod@divisor+3)),c
  5712  0013F8  320C               	rrcf	((c:___aomod@divisor+2)),c
  5713  0013FA  320B               	rrcf	((c:___aomod@divisor+1)),c
  5714  0013FC  320A               	rrcf	((c:___aomod@divisor)),c
  5715  0013FE  3209               	line	31
  5716                           	
  5717                           l1700:
  5718  001400                     	decfsz	((c:___aomod@counter)),c
  5719  001400  2E11               	
  5720                           	goto	l1694
  5721  001402  EFCE  F009         	goto	l1702
  5722  001406  EF07  F00A         	
  5723                           l394:
  5724  00140A                     	goto	l1702
  5725  00140A  EF07  F00A         	line	32
  5726                           	
  5727                           l388:
  5728  00140E                     	line	33
  5729                           	
  5730                           l1702:
  5731  00140E                     	movf	((c:___aomod@sign)),c,w
  5732  00140E  5012               	btfsc	status,2
  5733  001410  B4D8               	goto	u1141
  5734  001412  EF0D  F00A         	goto	u1140
  5735  001416  EF0F  F00A         u1141:
  5736  00141A                     	goto	l1706
  5737  00141A  EF21  F00A         u1140:
  5738  00141E                     	line	34
  5739                           	
  5740                           l1704:
  5741  00141E                     	comf	((c:___aomod@dividend+7)),c
  5742  00141E  1E08               	comf	((c:___aomod@dividend+6)),c
  5743  001420  1E07               	comf	((c:___aomod@dividend+5)),c
  5744  001422  1E06               	comf	((c:___aomod@dividend+4)),c
  5745  001424  1E05               	comf	((c:___aomod@dividend+3)),c
  5746  001426  1E04               	comf	((c:___aomod@dividend+2)),c
  5747  001428  1E03               	comf	((c:___aomod@dividend+1)),c
  5748  00142A  1E02               	negf	((c:___aomod@dividend)),c
  5749  00142C  6C01               	movlw	0
  5750  00142E  0E00               	addwfc	((c:___aomod@dividend+1)),c
  5751  001430  2202               	addwfc	((c:___aomod@dividend+2)),c
  5752  001432  2203               	addwfc	((c:___aomod@dividend+3)),c
  5753  001434  2204               	addwfc	((c:___aomod@dividend+4)),c
  5754  001436  2205               	addwfc	((c:___aomod@dividend+5)),c
  5755  001438  2206               	addwfc	((c:___aomod@dividend+6)),c
  5756  00143A  2207               	addwfc	((c:___aomod@dividend+7)),c
  5757  00143C  2208               	goto	l1706
  5758  00143E  EF21  F00A         	
  5759                           l395:
  5760  001442                     	line	35
  5761                           	
  5762                           l1706:
  5763  001442                     	movff	(c:___aomod@dividend),(c:?___aomod)
  5764  001442  C001  F001         	movff	(c:___aomod@dividend+1),(c:?___aomod+1)
  5765  001446  C002  F002         	movff	(c:___aomod@dividend+2),(c:?___aomod+2)
  5766  00144A  C003  F003         	movff	(c:___aomod@dividend+3),(c:?___aomod+3)
  5767  00144E  C004  F004         	movff	(c:___aomod@dividend+4),(c:?___aomod+4)
  5768  001452  C005  F005         	movff	(c:___aomod@dividend+5),(c:?___aomod+5)
  5769  001456  C006  F006         	movff	(c:___aomod@dividend+6),(c:?___aomod+6)
  5770  00145A  C007  F007         	movff	(c:___aomod@dividend+7),(c:?___aomod+7)
  5771  00145E  C008  F008         	goto	l396
  5772  001462  EF33  F00A         	
  5773                           l1708:
  5774  001466                     	line	36
  5775                           	
  5776                           l396:
  5777  001466                     	return	;funcret
  5778  001466  0012               	opt stack 0
  5779                           GLOBAL	__end_of___aomod
  5780                           	__end_of___aomod:
  5781  001468                     	signat	___aomod,8319
  5782                           	global	___aodiv
  5783                           
  5784 ;; *************** function ___aodiv *****************
  5785 ;; Defined at:
  5786 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aodiv.c"
  5787 ;; Parameters:    Size  Location     Type
  5788 ;;  dividend        8    0[COMRAM] long long 
  5789 ;;  divisor         8    8[COMRAM] long long 
  5790 ;; Auto vars:     Size  Location     Type
  5791 ;;  quotient        8   18[COMRAM] long long 
  5792 ;;  sign            1   17[COMRAM] unsigned char 
  5793 ;;  counter         1   16[COMRAM] unsigned char 
  5794 ;; Return value:  Size  Location     Type
  5795 ;;                  8    0[COMRAM] long long 
  5796 ;; Registers used:
  5797 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5798 ;; Tracked objects:
  5799 ;;		On entry : 0/0
  5800 ;;		On exit  : 0/0
  5801 ;;		Unchanged: 0/0
  5802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5803 ;;      Params:        16       0       0       0       0       0       0       0       0
  5804 ;;      Locals:        10       0       0       0       0       0       0       0       0
  5805 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5806 ;;      Totals:        26       0       0       0       0       0       0       0       0
  5807 ;;Total ram usage:       26 bytes
  5808 ;; Hardware stack levels used:    1
  5809 ;; This function calls:
  5810 ;;		Nothing
  5811 ;; This function is called by:
  5812 ;;		_dtoa
  5813 ;; This function uses a non-reentrant model
  5814 ;;
  5815                           psect	text22,class=CODE,space=0,reloc=2,group=1
  5816                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aodiv.c"
  5817                           	line	9
  5818                           global __ptext22
  5819                           __ptext22:
  5820  00112C                     psect	text22
  5821                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\aodiv.c"
  5822                           	line	9
  5823                           	global	__size_of___aodiv
  5824                           	__size_of___aodiv	equ	__end_of___aodiv-___aodiv
  5825  0000                     	
  5826                           ___aodiv:
  5827  00112C                     ;incstack = 0
  5828                           	opt	stack 25
  5829                           	line	15
  5830                           	
  5831                           l1630:
  5832  00112C                     	movlw	low(0)
  5833  00112C  0E00               	movwf	((c:___aodiv@sign)),c
  5834  00112E  6E12               	line	16
  5835                           	
  5836                           l1632:
  5837  001130                     	btfsc	((c:___aodiv@divisor+7)),c,7
  5838  001130  BE10               	goto	u1020
  5839  001132  EF9F  F008         	goto	u1021
  5840  001136  EF9D  F008         
  5841                           u1021:
  5842  00113A                     	goto	l1638
  5843  00113A  EFB3  F008         u1020:
  5844  00113E                     	line	17
  5845                           	
  5846                           l1634:
  5847  00113E                     	comf	((c:___aodiv@divisor+7)),c
  5848  00113E  1E10               	comf	((c:___aodiv@divisor+6)),c
  5849  001140  1E0F               	comf	((c:___aodiv@divisor+5)),c
  5850  001142  1E0E               	comf	((c:___aodiv@divisor+4)),c
  5851  001144  1E0D               	comf	((c:___aodiv@divisor+3)),c
  5852  001146  1E0C               	comf	((c:___aodiv@divisor+2)),c
  5853  001148  1E0B               	comf	((c:___aodiv@divisor+1)),c
  5854  00114A  1E0A               	negf	((c:___aodiv@divisor)),c
  5855  00114C  6C09               	movlw	0
  5856  00114E  0E00               	addwfc	((c:___aodiv@divisor+1)),c
  5857  001150  220A               	addwfc	((c:___aodiv@divisor+2)),c
  5858  001152  220B               	addwfc	((c:___aodiv@divisor+3)),c
  5859  001154  220C               	addwfc	((c:___aodiv@divisor+4)),c
  5860  001156  220D               	addwfc	((c:___aodiv@divisor+5)),c
  5861  001158  220E               	addwfc	((c:___aodiv@divisor+6)),c
  5862  00115A  220F               	addwfc	((c:___aodiv@divisor+7)),c
  5863  00115C  2210               	line	18
  5864                           	
  5865                           l1636:
  5866  00115E                     	movlw	low(01h)
  5867  00115E  0E01               	movwf	((c:___aodiv@sign)),c
  5868  001160  6E12               	goto	l1638
  5869  001162  EFB3  F008         	line	19
  5870                           	
  5871                           l373:
  5872  001166                     	line	20
  5873                           	
  5874                           l1638:
  5875  001166                     	btfsc	((c:___aodiv@dividend+7)),c,7
  5876  001166  BE08               	goto	u1030
  5877  001168  EFBA  F008         	goto	u1031
  5878  00116C  EFB8  F008         
  5879                           u1031:
  5880  001170                     	goto	l1644
  5881  001170  EFCE  F008         u1030:
  5882  001174                     	line	21
  5883                           	
  5884                           l1640:
  5885  001174                     	comf	((c:___aodiv@dividend+7)),c
  5886  001174  1E08               	comf	((c:___aodiv@dividend+6)),c
  5887  001176  1E07               	comf	((c:___aodiv@dividend+5)),c
  5888  001178  1E06               	comf	((c:___aodiv@dividend+4)),c
  5889  00117A  1E05               	comf	((c:___aodiv@dividend+3)),c
  5890  00117C  1E04               	comf	((c:___aodiv@dividend+2)),c
  5891  00117E  1E03               	comf	((c:___aodiv@dividend+1)),c
  5892  001180  1E02               	negf	((c:___aodiv@dividend)),c
  5893  001182  6C01               	movlw	0
  5894  001184  0E00               	addwfc	((c:___aodiv@dividend+1)),c
  5895  001186  2202               	addwfc	((c:___aodiv@dividend+2)),c
  5896  001188  2203               	addwfc	((c:___aodiv@dividend+3)),c
  5897  00118A  2204               	addwfc	((c:___aodiv@dividend+4)),c
  5898  00118C  2205               	addwfc	((c:___aodiv@dividend+5)),c
  5899  00118E  2206               	addwfc	((c:___aodiv@dividend+6)),c
  5900  001190  2207               	addwfc	((c:___aodiv@dividend+7)),c
  5901  001192  2208               	line	22
  5902                           	
  5903                           l1642:
  5904  001194                     	movlw	(01h)&0ffh
  5905  001194  0E01               	xorwf	((c:___aodiv@sign)),c
  5906  001196  1A12               	goto	l1644
  5907  001198  EFCE  F008         	line	23
  5908                           	
  5909                           l374:
  5910  00119C                     	line	24
  5911                           	
  5912                           l1644:
  5913  00119C                     	lfsr	2,(___aodiv@quotient)
  5914  00119C  EE20  F013         	movlw	8-1
  5915  0011A0  0E07               u1041:
  5916  0011A2                     	clrf	postinc2
  5917  0011A2  6ADE               	decf	wreg
  5918  0011A4  06E8               	bc	u1041
  5919  0011A6  E2FD               	line	25
  5920                           	
  5921                           l1646:
  5922  0011A8                     	movf	((c:___aodiv@divisor)),c,w
  5923  0011A8  5009               iorwf	((c:___aodiv@divisor+1)),c,w
  5924  0011AA  100A               iorwf	((c:___aodiv@divisor+2)),c,w
  5925  0011AC  100B               iorwf	((c:___aodiv@divisor+3)),c,w
  5926  0011AE  100C               iorwf	((c:___aodiv@divisor+4)),c,w
  5927  0011B0  100D               iorwf	((c:___aodiv@divisor+5)),c,w
  5928  0011B2  100E               iorwf	((c:___aodiv@divisor+6)),c,w
  5929  0011B4  100F               iorwf	((c:___aodiv@divisor+7)),c,w
  5930  0011B6  1010               	btfsc	status,2
  5931  0011B8  B4D8               	goto	u1051
  5932  0011BA  EFE1  F008         	goto	u1050
  5933  0011BE  EFE3  F008         
  5934                           u1051:
  5935  0011C2                     	goto	l1666
  5936  0011C2  EF41  F009         u1050:
  5937  0011C6                     	line	26
  5938                           	
  5939                           l1648:
  5940  0011C6                     	movlw	low(01h)
  5941  0011C6  0E01               	movwf	((c:___aodiv@counter)),c
  5942  0011C8  6E11               	line	27
  5943                           	goto	l1652
  5944  0011CA  EFF3  F008         	
  5945                           l377:
  5946  0011CE                     	line	28
  5947                           	
  5948                           l1650:
  5949  0011CE                     	bcf	status,0
  5950  0011CE  90D8               	rlcf	((c:___aodiv@divisor)),c
  5951  0011D0  3609               	rlcf	((c:___aodiv@divisor+1)),c
  5952  0011D2  360A               	rlcf	((c:___aodiv@divisor+2)),c
  5953  0011D4  360B               	rlcf	((c:___aodiv@divisor+3)),c
  5954  0011D6  360C               	rlcf	((c:___aodiv@divisor+4)),c
  5955  0011D8  360D               	rlcf	((c:___aodiv@divisor+5)),c
  5956  0011DA  360E               	rlcf	((c:___aodiv@divisor+6)),c
  5957  0011DC  360F               	rlcf	((c:___aodiv@divisor+7)),c
  5958  0011DE  3610               	line	29
  5959                           	incf	((c:___aodiv@counter)),c
  5960  0011E0  2A11               	goto	l1652
  5961  0011E2  EFF3  F008         	line	30
  5962                           	
  5963                           l376:
  5964  0011E6                     	line	27
  5965                           	
  5966                           l1652:
  5967  0011E6                     	
  5968                           	btfss	((c:___aodiv@divisor+7)),c,(63)&7
  5969  0011E6  AE10               	goto	u1061
  5970  0011E8  EFF8  F008         	goto	u1060
  5971  0011EC  EFFA  F008         u1061:
  5972  0011F0                     	goto	l1650
  5973  0011F0  EFE7  F008         u1060:
  5974  0011F4                     	goto	l1654
  5975  0011F4  EFFE  F008         	
  5976                           l378:
  5977  0011F8                     	goto	l1654
  5978  0011F8  EFFE  F008         	line	31
  5979                           	
  5980                           l379:
  5981  0011FC                     	line	32
  5982                           	
  5983                           l1654:
  5984  0011FC                     	bcf	status,0
  5985  0011FC  90D8               	rlcf	((c:___aodiv@quotient)),c
  5986  0011FE  3613               	rlcf	((c:___aodiv@quotient+1)),c
  5987  001200  3614               	rlcf	((c:___aodiv@quotient+2)),c
  5988  001202  3615               	rlcf	((c:___aodiv@quotient+3)),c
  5989  001204  3616               	rlcf	((c:___aodiv@quotient+4)),c
  5990  001206  3617               	rlcf	((c:___aodiv@quotient+5)),c
  5991  001208  3618               	rlcf	((c:___aodiv@quotient+6)),c
  5992  00120A  3619               	rlcf	((c:___aodiv@quotient+7)),c
  5993  00120C  361A               	line	33
  5994                           	
  5995                           l1656:
  5996  00120E                     		movf	((c:___aodiv@divisor)),c,w
  5997  00120E  5009               	subwf	((c:___aodiv@dividend)),c,w
  5998  001210  5C01               	movf	((c:___aodiv@divisor+1)),c,w
  5999  001212  500A               	subwfb	((c:___aodiv@dividend+1)),c,w
  6000  001214  5802               	movf	((c:___aodiv@divisor+2)),c,w
  6001  001216  500B               	subwfb	((c:___aodiv@dividend+2)),c,w
  6002  001218  5803               	movf	((c:___aodiv@divisor+3)),c,w
  6003  00121A  500C               	subwfb	((c:___aodiv@dividend+3)),c,w
  6004  00121C  5804               	movf	((c:___aodiv@divisor+4)),c,w
  6005  00121E  500D               	subwfb	((c:___aodiv@dividend+4)),c,w
  6006  001220  5805               	movf	((c:___aodiv@divisor+5)),c,w
  6007  001222  500E               	subwfb	((c:___aodiv@dividend+5)),c,w
  6008  001224  5806               	movf	((c:___aodiv@divisor+6)),c,w
  6009  001226  500F               	subwfb	((c:___aodiv@dividend+6)),c,w
  6010  001228  5807               	movf	((c:___aodiv@divisor+7)),c,w
  6011  00122A  5010               	subwfb	((c:___aodiv@dividend+7)),c,w
  6012  00122C  5808               	btfss	status,0
  6013  00122E  A0D8               	goto	u1071
  6014  001230  EF1C  F009         	goto	u1070
  6015  001234  EF1E  F009         
  6016                           u1071:
  6017  001238                     	goto	l1662
  6018  001238  EF31  F009         u1070:
  6019  00123C                     	line	34
  6020                           	
  6021                           l1658:
  6022  00123C                     	movf	((c:___aodiv@divisor)),c,w
  6023  00123C  5009               	subwf	((c:___aodiv@dividend)),c
  6024  00123E  5E01               	movf	((c:___aodiv@divisor+1)),c,w
  6025  001240  500A               	subwfb	((c:___aodiv@dividend+1)),c
  6026  001242  5A02               	movf	((c:___aodiv@divisor+2)),c,w
  6027  001244  500B               	subwfb	((c:___aodiv@dividend+2)),c
  6028  001246  5A03               	movf	((c:___aodiv@divisor+3)),c,w
  6029  001248  500C               	subwfb	((c:___aodiv@dividend+3)),c
  6030  00124A  5A04               	movf	((c:___aodiv@divisor+4)),c,w
  6031  00124C  500D               	subwfb	((c:___aodiv@dividend+4)),c
  6032  00124E  5A05               	movf	((c:___aodiv@divisor+5)),c,w
  6033  001250  500E               	subwfb	((c:___aodiv@dividend+5)),c
  6034  001252  5A06               	movf	((c:___aodiv@divisor+6)),c,w
  6035  001254  500F               	subwfb	((c:___aodiv@dividend+6)),c
  6036  001256  5A07               	movf	((c:___aodiv@divisor+7)),c,w
  6037  001258  5010               	subwfb	((c:___aodiv@dividend+7)),c
  6038  00125A  5A08               	line	35
  6039                           	
  6040                           l1660:
  6041  00125C                     	bsf	(0+(0/8)+(c:___aodiv@quotient)),c,(0)&7
  6042  00125C  8013               	goto	l1662
  6043  00125E  EF31  F009         	line	36
  6044                           	
  6045                           l380:
  6046  001262                     	line	37
  6047                           	
  6048                           l1662:
  6049  001262                     	bcf	status,0
  6050  001262  90D8               	rrcf	((c:___aodiv@divisor+7)),c
  6051  001264  3210               	rrcf	((c:___aodiv@divisor+6)),c
  6052  001266  320F               	rrcf	((c:___aodiv@divisor+5)),c
  6053  001268  320E               	rrcf	((c:___aodiv@divisor+4)),c
  6054  00126A  320D               	rrcf	((c:___aodiv@divisor+3)),c
  6055  00126C  320C               	rrcf	((c:___aodiv@divisor+2)),c
  6056  00126E  320B               	rrcf	((c:___aodiv@divisor+1)),c
  6057  001270  320A               	rrcf	((c:___aodiv@divisor)),c
  6058  001272  3209               	line	38
  6059                           	
  6060                           l1664:
  6061  001274                     	decfsz	((c:___aodiv@counter)),c
  6062  001274  2E11               	
  6063                           	goto	l1654
  6064  001276  EFFE  F008         	goto	l1666
  6065  00127A  EF41  F009         	
  6066                           l381:
  6067  00127E                     	goto	l1666
  6068  00127E  EF41  F009         	line	39
  6069                           	
  6070                           l375:
  6071  001282                     	line	40
  6072                           	
  6073                           l1666:
  6074  001282                     	movf	((c:___aodiv@sign)),c,w
  6075  001282  5012               	btfsc	status,2
  6076  001284  B4D8               	goto	u1081
  6077  001286  EF47  F009         	goto	u1080
  6078  00128A  EF49  F009         u1081:
  6079  00128E                     	goto	l1670
  6080  00128E  EF5B  F009         u1080:
  6081  001292                     	line	41
  6082                           	
  6083                           l1668:
  6084  001292                     	comf	((c:___aodiv@quotient+7)),c
  6085  001292  1E1A               	comf	((c:___aodiv@quotient+6)),c
  6086  001294  1E19               	comf	((c:___aodiv@quotient+5)),c
  6087  001296  1E18               	comf	((c:___aodiv@quotient+4)),c
  6088  001298  1E17               	comf	((c:___aodiv@quotient+3)),c
  6089  00129A  1E16               	comf	((c:___aodiv@quotient+2)),c
  6090  00129C  1E15               	comf	((c:___aodiv@quotient+1)),c
  6091  00129E  1E14               	negf	((c:___aodiv@quotient)),c
  6092  0012A0  6C13               	movlw	0
  6093  0012A2  0E00               	addwfc	((c:___aodiv@quotient+1)),c
  6094  0012A4  2214               	addwfc	((c:___aodiv@quotient+2)),c
  6095  0012A6  2215               	addwfc	((c:___aodiv@quotient+3)),c
  6096  0012A8  2216               	addwfc	((c:___aodiv@quotient+4)),c
  6097  0012AA  2217               	addwfc	((c:___aodiv@quotient+5)),c
  6098  0012AC  2218               	addwfc	((c:___aodiv@quotient+6)),c
  6099  0012AE  2219               	addwfc	((c:___aodiv@quotient+7)),c
  6100  0012B0  221A               	goto	l1670
  6101  0012B2  EF5B  F009         	
  6102                           l382:
  6103  0012B6                     	line	42
  6104                           	
  6105                           l1670:
  6106  0012B6                     	movff	(c:___aodiv@quotient),(c:?___aodiv)
  6107  0012B6  C013  F001         	movff	(c:___aodiv@quotient+1),(c:?___aodiv+1)
  6108  0012BA  C014  F002         	movff	(c:___aodiv@quotient+2),(c:?___aodiv+2)
  6109  0012BE  C015  F003         	movff	(c:___aodiv@quotient+3),(c:?___aodiv+3)
  6110  0012C2  C016  F004         	movff	(c:___aodiv@quotient+4),(c:?___aodiv+4)
  6111  0012C6  C017  F005         	movff	(c:___aodiv@quotient+5),(c:?___aodiv+5)
  6112  0012CA  C018  F006         	movff	(c:___aodiv@quotient+6),(c:?___aodiv+6)
  6113  0012CE  C019  F007         	movff	(c:___aodiv@quotient+7),(c:?___aodiv+7)
  6114  0012D2  C01A  F008         	goto	l383
  6115  0012D6  EF6D  F009         	
  6116                           l1672:
  6117  0012DA                     	line	43
  6118                           	
  6119                           l383:
  6120  0012DA                     	return	;funcret
  6121  0012DA  0012               	opt stack 0
  6122                           GLOBAL	__end_of___aodiv
  6123                           	__end_of___aodiv:
  6124  0012DC                     	signat	___aodiv,8319
  6125                           	global	_clearLCD
  6126                           
  6127 ;; *************** function _clearLCD *****************
  6128 ;; Defined at:
  6129 ;;		line 199 in file "main.c"
  6130 ;; Parameters:    Size  Location     Type
  6131 ;;		None
  6132 ;; Auto vars:     Size  Location     Type
  6133 ;;		None
  6134 ;; Return value:  Size  Location     Type
  6135 ;;                  1    wreg      void 
  6136 ;; Registers used:
  6137 ;;		wreg, status,2, cstack
  6138 ;; Tracked objects:
  6139 ;;		On entry : 0/0
  6140 ;;		On exit  : 0/0
  6141 ;;		Unchanged: 0/0
  6142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6143 ;;      Params:         0       0       0       0       0       0       0       0       0
  6144 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6145 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6146 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6147 ;;Total ram usage:        0 bytes
  6148 ;; Hardware stack levels used:    1
  6149 ;; Hardware stack levels required when called:    1
  6150 ;; This function calls:
  6151 ;;		_LCD
  6152 ;; This function is called by:
  6153 ;;		_TestConnection
  6154 ;;		_settingsIMU
  6155 ;; This function uses a non-reentrant model
  6156 ;;
  6157                           psect	text23,class=CODE,space=0,reloc=2,group=0
  6158                           	file	"main.c"
  6159                           	line	199
  6160                           global __ptext23
  6161                           __ptext23:
  6162  001E0C                     psect	text23
  6163                           	file	"main.c"
  6164                           	line	199
  6165                           	global	__size_of_clearLCD
  6166                           	__size_of_clearLCD	equ	__end_of_clearLCD-_clearLCD
  6167  0000                     	
  6168                           _clearLCD:
  6169  001E0C                     ;incstack = 0
  6170                           	opt	stack 28
  6171                           	line	200
  6172                           	
  6173                           l1966:
  6174  001E0C                     ;main.c: 200:     LATEbits.LATE2 = 0;
  6175                           	bcf	((c:3981)),c,2	;volatile
  6176  001E0C  948D               	line	201
  6177                           	
  6178                           l1968:
  6179  001E0E                     ;main.c: 201:     LCD(0x01);
  6180                           	movlw	(01h)&0ffh
  6181  001E0E  0E01               	
  6182                           	call	_LCD
  6183  001E10  EC87  F00E         	line	202
  6184                           	
  6185                           l146:
  6186  001E14                     	return	;funcret
  6187  001E14  0012               	opt stack 0
  6188                           GLOBAL	__end_of_clearLCD
  6189                           	__end_of_clearLCD:
  6190  001E16                     	signat	_clearLCD,89
  6191                           	global	_WriteLCD
  6192                           
  6193 ;; *************** function _WriteLCD *****************
  6194 ;; Defined at:
  6195 ;;		line 213 in file "main.c"
  6196 ;; Parameters:    Size  Location     Type
  6197 ;;  a               2    2[COMRAM] PTR unsigned char 
  6198 ;;		 -> text4(13), text3(17), text(20), text2(19), 
  6199 ;;		 -> text1(18), 
  6200 ;;  DDRAM_RAW       1    4[COMRAM] unsigned char 
  6201 ;;  Size            2    5[COMRAM] int 
  6202 ;; Auto vars:     Size  Location     Type
  6203 ;;		None
  6204 ;; Return value:  Size  Location     Type
  6205 ;;                  1    wreg      void 
  6206 ;; Registers used:
  6207 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6208 ;; Tracked objects:
  6209 ;;		On entry : 0/0
  6210 ;;		On exit  : 0/0
  6211 ;;		Unchanged: 0/0
  6212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6213 ;;      Params:         5       0       0       0       0       0       0       0       0
  6214 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6215 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6216 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6217 ;;Total ram usage:        6 bytes
  6218 ;; Hardware stack levels used:    1
  6219 ;; Hardware stack levels required when called:    1
  6220 ;; This function calls:
  6221 ;;		_LCD
  6222 ;; This function is called by:
  6223 ;;		_TestConnection
  6224 ;;		_settingsIMU
  6225 ;;		_start
  6226 ;; This function uses a non-reentrant model
  6227 ;;
  6228                           psect	text24,class=CODE,space=0,reloc=2,group=0
  6229                           	line	213
  6230                           global __ptext24
  6231                           __ptext24:
  6232  00191A                     psect	text24
  6233                           	file	"main.c"
  6234                           	line	213
  6235                           	global	__size_of_WriteLCD
  6236                           	__size_of_WriteLCD	equ	__end_of_WriteLCD-_WriteLCD
  6237  0000                     	
  6238                           _WriteLCD:
  6239  00191A                     ;incstack = 0
  6240                           	opt	stack 28
  6241                           	line	214
  6242                           	
  6243                           l1970:
  6244  00191A                     ;main.c: 214:     LATEbits.LATE2 = 0;
  6245                           	bcf	((c:3981)),c,2	;volatile
  6246  00191A  948D               	line	215
  6247                           	
  6248                           l1972:
  6249  00191C                     ;main.c: 215:     LCD(DDRAM_RAW);
  6250                           	movf	((c:WriteLCD@DDRAM_RAW)),c,w
  6251  00191C  5005               	
  6252                           	call	_LCD
  6253  00191E  EC87  F00E         	line	216
  6254                           	
  6255                           l1974:
  6256  001922                     ;main.c: 216:     LATEbits.LATE2 = 1;
  6257                           	bsf	((c:3981)),c,2	;volatile
  6258  001922  848D               	line	217
  6259                           	
  6260                           l1976:
  6261  001924                     ;main.c: 217:     for(i=0; i<=Size; i++){
  6262                           	movlw	high(0)
  6263  001924  0E00               	movlb	0	; () banked
  6264  001926  0100               	movwf	((_i+1))&0ffh
  6265  001928  6F6E               	movlw	low(0)
  6266  00192A  0E00               	movwf	((_i))&0ffh
  6267  00192C  6F6D               	goto	l1986
  6268  00192E  EFAF  F00C         	
  6269                           l153:; BSR set to: 0
  6270  001932                     
  6271                           	line	218
  6272                           	
  6273                           l1978:; BSR set to: 0
  6274  001932                     
  6275                           ;main.c: 218:         LCD(*a);
  6276                           	movff	(c:WriteLCD@a),fsr2l
  6277  001932  C003  FFD9         	movff	(c:WriteLCD@a+1),fsr2h
  6278  001936  C004  FFDA         	movf	indf2,w
  6279  00193A  50DF               	
  6280                           	call	_LCD
  6281  00193C  EC87  F00E         	line	219
  6282                           	
  6283                           l1980:
  6284  001940                     ;main.c: 219:         a++;
  6285                           	infsnz	((c:WriteLCD@a)),c
  6286  001940  4A03               	incf	((c:WriteLCD@a+1)),c
  6287  001942  2A04               	line	220
  6288                           	
  6289                           l1982:
  6290  001944                     ;main.c: 220:         _delay((unsigned long)((10)*(20000000/4000.0)));
  6291                           	opt asmopt_push
  6292                           opt asmopt_off
  6293                           movlw	65
  6294  001944  0E41               movwf	(??_WriteLCD+0+0)&0ffh,c,f
  6295  001946  6E08               	movlw	238
  6296  001948  0EEE               u1657:
  6297  00194A                     decfsz	wreg,f
  6298  00194A  2EE8               	bra	u1657
  6299  00194C  D7FE               	decfsz	(??_WriteLCD+0+0)&0ffh,c,f
  6300  00194E  2E08               	bra	u1657
  6301  001950  D7FC               	nop2
  6302  001952  D000               opt asmopt_pop
  6303                           
  6304                           	line	221
  6305                           	
  6306                           l1984:
  6307  001954                     ;main.c: 221:     }
  6308                           	movlb	0	; () banked
  6309  001954  0100               	infsnz	((_i))&0ffh
  6310  001956  4B6D               	incf	((_i+1))&0ffh
  6311  001958  2B6E               	goto	l1986
  6312  00195A  EFAF  F00C         	
  6313                           l152:; BSR set to: 0
  6314  00195E                     
  6315                           	
  6316                           l1986:; BSR set to: 0
  6317  00195E                     
  6318                           		movf	((_i))&0ffh,w
  6319  00195E  516D               	subwf	((c:WriteLCD@Size)),c,w
  6320  001960  5C06               	movf	((c:WriteLCD@Size+1)),c,w
  6321  001962  5007               	xorlw	80h
  6322  001964  0A80               	movwf	(??_WriteLCD+0+0)&0ffh,c
  6323  001966  6E08               	movf	((_i+1))&0ffh,w
  6324  001968  516E               	xorlw	80h
  6325  00196A  0A80               	subwfb	(??_WriteLCD+0+0)&0ffh,c,w
  6326  00196C  5808               	btfsc	status,0
  6327  00196E  B0D8               	goto	u1591
  6328  001970  EFBC  F00C         	goto	u1590
  6329  001974  EFBE  F00C         
  6330                           u1591:
  6331  001978                     	goto	l1978
  6332  001978  EF99  F00C         u1590:
  6333  00197C                     	goto	l155
  6334  00197C  EFC0  F00C         	
  6335                           l154:; BSR set to: 0
  6336  001980                     
  6337                           	line	222
  6338                           	
  6339                           l155:; BSR set to: 0
  6340  001980                     
  6341                           	return	;funcret
  6342  001980  0012               	opt stack 0
  6343                           GLOBAL	__end_of_WriteLCD
  6344                           	__end_of_WriteLCD:
  6345  001982                     	signat	_WriteLCD,12409
  6346                           	global	_LCD
  6347                           
  6348 ;; *************** function _LCD *****************
  6349 ;; Defined at:
  6350 ;;		line 204 in file "main.c"
  6351 ;; Parameters:    Size  Location     Type
  6352 ;;  data            1    wreg     unsigned char 
  6353 ;; Auto vars:     Size  Location     Type
  6354 ;;  data            1    1[COMRAM] unsigned char 
  6355 ;; Return value:  Size  Location     Type
  6356 ;;                  1    wreg      void 
  6357 ;; Registers used:
  6358 ;;		wreg, status,2, cstack
  6359 ;; Tracked objects:
  6360 ;;		On entry : 0/0
  6361 ;;		On exit  : 0/0
  6362 ;;		Unchanged: 0/0
  6363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6364 ;;      Params:         0       0       0       0       0       0       0       0       0
  6365 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6366 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6367 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6368 ;;Total ram usage:        2 bytes
  6369 ;; Hardware stack levels used:    1
  6370 ;; This function calls:
  6371 ;;		Nothing
  6372 ;; This function is called by:
  6373 ;;		_settings
  6374 ;;		_clearLCD
  6375 ;;		_WriteLCD
  6376 ;; This function uses a non-reentrant model
  6377 ;;
  6378                           psect	text25,class=CODE,space=0,reloc=2,group=0
  6379                           	line	204
  6380                           global __ptext25
  6381                           __ptext25:
  6382  001D0E                     psect	text25
  6383                           	file	"main.c"
  6384                           	line	204
  6385                           	global	__size_of_LCD
  6386                           	__size_of_LCD	equ	__end_of_LCD-_LCD
  6387  0000                     	
  6388                           _LCD:; BSR set to: 0
  6389  001D0E                     
  6390                           ;incstack = 0
  6391                           	opt	stack 28
  6392                           ;LCD@data stored from wreg
  6393                           	movwf	((c:LCD@data)),c
  6394  001D0E  6E02               	line	205
  6395                           	
  6396                           l1900:
  6397  001D10                     ;main.c: 205:     LATEbits.LATE1 = 1;
  6398                           	bsf	((c:3981)),c,1	;volatile
  6399  001D10  828D               	line	206
  6400                           	
  6401                           l1902:
  6402  001D12                     ;main.c: 206:     _delay((unsigned long)((10)*(20000000/4000.0)));
  6403                           	opt asmopt_push
  6404                           opt asmopt_off
  6405                           movlw	65
  6406  001D12  0E41               movwf	(??_LCD+0+0)&0ffh,c,f
  6407  001D14  6E01               	movlw	238
  6408  001D16  0EEE               u1667:
  6409  001D18                     decfsz	wreg,f
  6410  001D18  2EE8               	bra	u1667
  6411  001D1A  D7FE               	decfsz	(??_LCD+0+0)&0ffh,c,f
  6412  001D1C  2E01               	bra	u1667
  6413  001D1E  D7FC               	nop2
  6414  001D20  D000               opt asmopt_pop
  6415                           
  6416                           	line	207
  6417                           	
  6418                           l1904:
  6419  001D22                     ;main.c: 207:     LATD = data;
  6420                           	movff	(c:LCD@data),(c:3980)	;volatile
  6421  001D22  C002  FF8C         	line	208
  6422                           	
  6423                           l1906:
  6424  001D26                     ;main.c: 208:     _delay((unsigned long)((10)*(20000000/4000.0)));
  6425                           	opt asmopt_push
  6426                           opt asmopt_off
  6427                           movlw	65
  6428  001D26  0E41               movwf	(??_LCD+0+0)&0ffh,c,f
  6429  001D28  6E01               	movlw	238
  6430  001D2A  0EEE               u1677:
  6431  001D2C                     decfsz	wreg,f
  6432  001D2C  2EE8               	bra	u1677
  6433  001D2E  D7FE               	decfsz	(??_LCD+0+0)&0ffh,c,f
  6434  001D30  2E01               	bra	u1677
  6435  001D32  D7FC               	nop2
  6436  001D34  D000               opt asmopt_pop
  6437                           
  6438                           	line	209
  6439                           	
  6440                           l1908:
  6441  001D36                     ;main.c: 209:     LATEbits.LATE1 = 0;
  6442                           	bcf	((c:3981)),c,1	;volatile
  6443  001D36  928D               	line	210
  6444                           	
  6445                           l1910:
  6446  001D38                     ;main.c: 210:     _delay((unsigned long)((10)*(20000000/4000.0)));
  6447                           	opt asmopt_push
  6448                           opt asmopt_off
  6449                           movlw	65
  6450  001D38  0E41               movwf	(??_LCD+0+0)&0ffh,c,f
  6451  001D3A  6E01               	movlw	238
  6452  001D3C  0EEE               u1687:
  6453  001D3E                     decfsz	wreg,f
  6454  001D3E  2EE8               	bra	u1687
  6455  001D40  D7FE               	decfsz	(??_LCD+0+0)&0ffh,c,f
  6456  001D42  2E01               	bra	u1687
  6457  001D44  D7FC               	nop2
  6458  001D46  D000               opt asmopt_pop
  6459                           
  6460                           	line	211
  6461                           	
  6462                           l149:
  6463  001D48                     	return	;funcret
  6464  001D48  0012               	opt stack 0
  6465                           GLOBAL	__end_of_LCD
  6466                           	__end_of_LCD:
  6467  001D4A                     	signat	_LCD,4217
  6468                           	global	_ReadI2C
  6469                           
  6470 ;; *************** function _ReadI2C *****************
  6471 ;; Defined at:
  6472 ;;		line 141 in file "main.c"
  6473 ;; Parameters:    Size  Location     Type
  6474 ;;  Address         1    wreg     unsigned char 
  6475 ;;  Register        1    4[COMRAM] unsigned char 
  6476 ;;  Nbytes          2    5[COMRAM] int 
  6477 ;;  Data            2    7[COMRAM] PTR unsigned char 
  6478 ;;		 -> GyrAccel(14), data(1), 
  6479 ;; Auto vars:     Size  Location     Type
  6480 ;;  Address         1   11[COMRAM] unsigned char 
  6481 ;; Return value:  Size  Location     Type
  6482 ;;                  1    wreg      void 
  6483 ;; Registers used:
  6484 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6485 ;; Tracked objects:
  6486 ;;		On entry : 0/0
  6487 ;;		On exit  : 0/0
  6488 ;;		Unchanged: 0/0
  6489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6490 ;;      Params:         5       0       0       0       0       0       0       0       0
  6491 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6492 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6493 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6494 ;;Total ram usage:        8 bytes
  6495 ;; Hardware stack levels used:    1
  6496 ;; Hardware stack levels required when called:    2
  6497 ;; This function calls:
  6498 ;;		_ReceiveI2C
  6499 ;;		_RepeatedStartI2C
  6500 ;;		_SendI2C
  6501 ;;		_StartI2C
  6502 ;;		_StopI2C
  6503 ;; This function is called by:
  6504 ;;		_TestConnection
  6505 ;;		_start
  6506 ;; This function uses a non-reentrant model
  6507 ;;
  6508                           psect	text26,class=CODE,space=0,reloc=2,group=0
  6509                           	line	141
  6510                           global __ptext26
  6511                           __ptext26:
  6512  0016F2                     psect	text26
  6513                           	file	"main.c"
  6514                           	line	141
  6515                           	global	__size_of_ReadI2C
  6516                           	__size_of_ReadI2C	equ	__end_of_ReadI2C-_ReadI2C
  6517  0000                     	
  6518                           _ReadI2C:
  6519  0016F2                     ;incstack = 0
  6520                           	opt	stack 27
  6521                           ;ReadI2C@Address stored from wreg
  6522                           	movwf	((c:ReadI2C@Address)),c
  6523  0016F2  6E0C               	line	142
  6524                           	
  6525                           l1988:
  6526  0016F4                     ;main.c: 142:     StartI2C();
  6527                           	call	_StartI2C	;wreg free
  6528  0016F4  EC0F  F00F         	line	143
  6529                           ;main.c: 143:     SendI2C(Address);
  6530                           	movf	((c:ReadI2C@Address)),c,w
  6531  0016F8  500C               	
  6532                           	call	_SendI2C
  6533  0016FA  EC00  F00F         	line	144
  6534                           ;main.c: 144:     SendI2C(Register);
  6535                           	movf	((c:ReadI2C@Register)),c,w
  6536  0016FE  5005               	
  6537                           	call	_SendI2C
  6538  001700  EC00  F00F         	line	145
  6539                           ;main.c: 145:     RepeatedStartI2C();
  6540                           	call	_RepeatedStartI2C	;wreg free
  6541  001704  EC13  F00F         	line	146
  6542                           ;main.c: 146:     SendI2C(Address|0x01);
  6543                           	movf	((c:ReadI2C@Address)),c,w
  6544  001708  500C               	iorlw	low(01h)
  6545  00170A  0901               	
  6546                           	call	_SendI2C
  6547  00170C  EC00  F00F         	line	147
  6548                           	
  6549                           l1990:
  6550  001710                     ;main.c: 147:     for(i=0; i<Nbytes; i++){
  6551                           	movlw	high(0)
  6552  001710  0E00               	movlb	0	; () banked
  6553  001712  0100               	movwf	((_i+1))&0ffh
  6554  001714  6F6E               	movlw	low(0)
  6555  001716  0E00               	movwf	((_i))&0ffh
  6556  001718  6F6D               	goto	l2002
  6557  00171A  EFBC  F00B         	
  6558                           l118:; BSR set to: 0
  6559  00171E                     
  6560                           	line	148
  6561                           	
  6562                           l1992:; BSR set to: 0
  6563  00171E                     
  6564                           ;main.c: 148:         if (i+1 == Nbytes){
  6565                           	movlw	01h
  6566  00171E  0E01               	addwf	((_i))&0ffh,w
  6567  001720  256D               	movwf	(??_ReadI2C+0+0)&0ffh,c
  6568  001722  6E0A               	movlw	0
  6569  001724  0E00               	addwfc	((_i+1))&0ffh,w
  6570  001726  216E               	movwf	(??_ReadI2C+0+0+1)&0ffh,c
  6571  001728  6E0B               	movf	((c:ReadI2C@Nbytes)),c,w
  6572  00172A  5006               xorwf	(??_ReadI2C+0+0),c,w
  6573  00172C  180A               	bnz	u1601
  6574  00172E  E107               movf	((c:ReadI2C@Nbytes+1)),c,w
  6575  001730  5007               xorwf	(??_ReadI2C+0+1),c,w
  6576  001732  180B               	btfss	status,2
  6577  001734  A4D8               	goto	u1601
  6578  001736  EF9F  F00B         	goto	u1600
  6579  00173A  EFA1  F00B         
  6580                           u1601:
  6581  00173E                     	goto	l1996
  6582  00173E  EFAB  F00B         u1600:
  6583  001742                     	line	149
  6584                           	
  6585                           l1994:; BSR set to: 0
  6586  001742                     
  6587                           ;main.c: 149:             *Data = ReceiveI2C(1);
  6588                           	movlw	(01h)&0ffh
  6589  001742  0E01               	
  6590                           	call	_ReceiveI2C
  6591  001744  ECEA  F00D         	movff	(c:ReadI2C@Data),fsr2l
  6592  001748  C008  FFD9         	movff	(c:ReadI2C@Data+1),fsr2h
  6593  00174C  C009  FFDA         	movwf	indf2,c
  6594  001750  6EDF               
  6595                           	line	150
  6596                           ;main.c: 150:         }else{
  6597                           	goto	l1998
  6598  001752  EFB5  F00B         	
  6599                           l119:
  6600  001756                     	line	151
  6601                           	
  6602                           l1996:
  6603  001756                     ;main.c: 151:             *Data = ReceiveI2C(0);
  6604                           	movlw	(0)&0ffh
  6605  001756  0E00               	
  6606                           	call	_ReceiveI2C
  6607  001758  ECEA  F00D         	movff	(c:ReadI2C@Data),fsr2l
  6608  00175C  C008  FFD9         	movff	(c:ReadI2C@Data+1),fsr2h
  6609  001760  C009  FFDA         	movwf	indf2,c
  6610  001764  6EDF               
  6611                           	goto	l1998
  6612  001766  EFB5  F00B         	line	152
  6613                           ;main.c: 152:         }
  6614                           	
  6615                           l120:
  6616  00176A                     	line	153
  6617                           	
  6618                           l1998:
  6619  00176A                     ;main.c: 153:         Data++;
  6620                           	infsnz	((c:ReadI2C@Data)),c
  6621  00176A  4A08               	incf	((c:ReadI2C@Data+1)),c
  6622  00176C  2A09               	line	154
  6623                           	
  6624                           l2000:
  6625  00176E                     ;main.c: 154:     }
  6626                           	movlb	0	; () banked
  6627  00176E  0100               	infsnz	((_i))&0ffh
  6628  001770  4B6D               	incf	((_i+1))&0ffh
  6629  001772  2B6E               	goto	l2002
  6630  001774  EFBC  F00B         	
  6631                           l117:; BSR set to: 0
  6632  001778                     
  6633                           	
  6634                           l2002:; BSR set to: 0
  6635  001778                     
  6636                           		movf	((c:ReadI2C@Nbytes)),c,w
  6637  001778  5006               	subwf	((_i))&0ffh,w
  6638  00177A  5D6D               	movf	((_i+1))&0ffh,w
  6639  00177C  516E               	xorlw	80h
  6640  00177E  0A80               	movwf	(??_ReadI2C+0+0)&0ffh,c
  6641  001780  6E0A               	movf	((c:ReadI2C@Nbytes+1)),c,w
  6642  001782  5007               	xorlw	80h
  6643  001784  0A80               	subwfb	(??_ReadI2C+0+0)&0ffh,c,w
  6644  001786  580A               	btfss	status,0
  6645  001788  A0D8               	goto	u1611
  6646  00178A  EFC9  F00B         	goto	u1610
  6647  00178E  EFCB  F00B         
  6648                           u1611:
  6649  001792                     	goto	l1992
  6650  001792  EF8F  F00B         u1610:
  6651  001796                     	goto	l2004
  6652  001796  EFCD  F00B         	
  6653                           l121:; BSR set to: 0
  6654  00179A                     
  6655                           	line	155
  6656                           	
  6657                           l2004:; BSR set to: 0
  6658  00179A                     
  6659                           ;main.c: 155:     StopI2C();
  6660                           	call	_StopI2C	;wreg free
  6661  00179A  EC0B  F00F         	line	156
  6662                           	
  6663                           l2006:
  6664  00179E                     ;main.c: 156:     _delay((unsigned long)((1000)*(20000000/4000.0)));
  6665                           	opt asmopt_push
  6666                           opt asmopt_off
  6667                           movlw  26
  6668  00179E  0E1A               movwf	(??_ReadI2C+0+0+1)&0ffh,c,f
  6669  0017A0  6E0B               movlw	94
  6670  0017A2  0E5E               movwf	(??_ReadI2C+0+0)&0ffh,c,f
  6671  0017A4  6E0A               	movlw	110
  6672  0017A6  0E6E               u1697:
  6673  0017A8                     decfsz	wreg,f
  6674  0017A8  2EE8               	bra	u1697
  6675  0017AA  D7FE               	decfsz	(??_ReadI2C+0+0)&0ffh,c,f
  6676  0017AC  2E0A               	bra	u1697
  6677  0017AE  D7FC               	decfsz	(??_ReadI2C+0+0+1)&0ffh,c,f
  6678  0017B0  2E0B               	bra	u1697
  6679  0017B2  D7FA               	nop2
  6680  0017B4  D000               opt asmopt_pop
  6681                           
  6682                           	line	157
  6683                           	
  6684                           l122:
  6685  0017B6                     	return	;funcret
  6686  0017B6  0012               	opt stack 0
  6687                           GLOBAL	__end_of_ReadI2C
  6688                           	__end_of_ReadI2C:
  6689  0017B8                     	signat	_ReadI2C,16505
  6690                           	global	_StopI2C
  6691                           
  6692 ;; *************** function _StopI2C *****************
  6693 ;; Defined at:
  6694 ;;		line 181 in file "main.c"
  6695 ;; Parameters:    Size  Location     Type
  6696 ;;		None
  6697 ;; Auto vars:     Size  Location     Type
  6698 ;;		None
  6699 ;; Return value:  Size  Location     Type
  6700 ;;                  1    wreg      void 
  6701 ;; Registers used:
  6702 ;;		wreg, status,2, status,0, cstack
  6703 ;; Tracked objects:
  6704 ;;		On entry : 0/0
  6705 ;;		On exit  : 0/0
  6706 ;;		Unchanged: 0/0
  6707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6708 ;;      Params:         0       0       0       0       0       0       0       0       0
  6709 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6710 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6711 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6712 ;;Total ram usage:        0 bytes
  6713 ;; Hardware stack levels used:    1
  6714 ;; Hardware stack levels required when called:    1
  6715 ;; This function calls:
  6716 ;;		_ReadyI2C
  6717 ;; This function is called by:
  6718 ;;		_WriteI2C
  6719 ;;		_ReadI2C
  6720 ;; This function uses a non-reentrant model
  6721 ;;
  6722                           psect	text27,class=CODE,space=0,reloc=2,group=0
  6723                           	line	181
  6724                           global __ptext27
  6725                           __ptext27:
  6726  001E16                     psect	text27
  6727                           	file	"main.c"
  6728                           	line	181
  6729                           	global	__size_of_StopI2C
  6730                           	__size_of_StopI2C	equ	__end_of_StopI2C-_StopI2C
  6731  0000                     	
  6732                           _StopI2C:
  6733  001E16                     ;incstack = 0
  6734                           	opt	stack 27
  6735                           	line	182
  6736                           	
  6737                           l1920:
  6738  001E16                     ;main.c: 182:     ReadyI2C();
  6739                           	call	_ReadyI2C	;wreg free
  6740  001E16  ECC2  F00E         	line	183
  6741                           	
  6742                           l1922:
  6743  001E1A                     ;main.c: 183:     SSPCON2bits.PEN = 1;
  6744                           	bsf	((c:4037)),c,2	;volatile
  6745  001E1A  84C5               	line	185
  6746                           	
  6747                           l140:
  6748  001E1C                     	return	;funcret
  6749  001E1C  0012               	opt stack 0
  6750                           GLOBAL	__end_of_StopI2C
  6751                           	__end_of_StopI2C:
  6752  001E1E                     	signat	_StopI2C,89
  6753                           	global	_StartI2C
  6754                           
  6755 ;; *************** function _StartI2C *****************
  6756 ;; Defined at:
  6757 ;;		line 159 in file "main.c"
  6758 ;; Parameters:    Size  Location     Type
  6759 ;;		None
  6760 ;; Auto vars:     Size  Location     Type
  6761 ;;		None
  6762 ;; Return value:  Size  Location     Type
  6763 ;;                  1    wreg      void 
  6764 ;; Registers used:
  6765 ;;		wreg, status,2, status,0, cstack
  6766 ;; Tracked objects:
  6767 ;;		On entry : 0/0
  6768 ;;		On exit  : 0/0
  6769 ;;		Unchanged: 0/0
  6770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6771 ;;      Params:         0       0       0       0       0       0       0       0       0
  6772 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6773 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6774 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6775 ;;Total ram usage:        0 bytes
  6776 ;; Hardware stack levels used:    1
  6777 ;; Hardware stack levels required when called:    1
  6778 ;; This function calls:
  6779 ;;		_ReadyI2C
  6780 ;; This function is called by:
  6781 ;;		_WriteI2C
  6782 ;;		_ReadI2C
  6783 ;; This function uses a non-reentrant model
  6784 ;;
  6785                           psect	text28,class=CODE,space=0,reloc=2,group=0
  6786                           	line	159
  6787                           global __ptext28
  6788                           __ptext28:
  6789  001E1E                     psect	text28
  6790                           	file	"main.c"
  6791                           	line	159
  6792                           	global	__size_of_StartI2C
  6793                           	__size_of_StartI2C	equ	__end_of_StartI2C-_StartI2C
  6794  0000                     	
  6795                           _StartI2C:
  6796  001E1E                     ;incstack = 0
  6797                           	opt	stack 27
  6798                           	line	160
  6799                           	
  6800                           l1912:
  6801  001E1E                     ;main.c: 160:     ReadyI2C();
  6802                           	call	_ReadyI2C	;wreg free
  6803  001E1E  ECC2  F00E         	line	161
  6804                           	
  6805                           l1914:
  6806  001E22                     ;main.c: 161:     SSPCON2bits.SEN = 1;
  6807                           	bsf	((c:4037)),c,0	;volatile
  6808  001E22  80C5               	line	162
  6809                           	
  6810                           l125:
  6811  001E24                     	return	;funcret
  6812  001E24  0012               	opt stack 0
  6813                           GLOBAL	__end_of_StartI2C
  6814                           	__end_of_StartI2C:
  6815  001E26                     	signat	_StartI2C,89
  6816                           	global	_SendI2C
  6817                           
  6818 ;; *************** function _SendI2C *****************
  6819 ;; Defined at:
  6820 ;;		line 169 in file "main.c"
  6821 ;; Parameters:    Size  Location     Type
  6822 ;;  data            1    wreg     unsigned char 
  6823 ;; Auto vars:     Size  Location     Type
  6824 ;;  data            1    1[COMRAM] unsigned char 
  6825 ;; Return value:  Size  Location     Type
  6826 ;;                  1    wreg      void 
  6827 ;; Registers used:
  6828 ;;		wreg, status,2, status,0, cstack
  6829 ;; Tracked objects:
  6830 ;;		On entry : 0/0
  6831 ;;		On exit  : 0/0
  6832 ;;		Unchanged: 0/0
  6833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6834 ;;      Params:         0       0       0       0       0       0       0       0       0
  6835 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6836 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6837 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6838 ;;Total ram usage:        1 bytes
  6839 ;; Hardware stack levels used:    1
  6840 ;; Hardware stack levels required when called:    1
  6841 ;; This function calls:
  6842 ;;		_ReadyI2C
  6843 ;; This function is called by:
  6844 ;;		_WriteI2C
  6845 ;;		_ReadI2C
  6846 ;; This function uses a non-reentrant model
  6847 ;;
  6848                           psect	text29,class=CODE,space=0,reloc=2,group=0
  6849                           	line	169
  6850                           global __ptext29
  6851                           __ptext29:
  6852  001E00                     psect	text29
  6853                           	file	"main.c"
  6854                           	line	169
  6855                           	global	__size_of_SendI2C
  6856                           	__size_of_SendI2C	equ	__end_of_SendI2C-_SendI2C
  6857  0000                     	
  6858                           _SendI2C:
  6859  001E00                     ;incstack = 0
  6860                           	opt	stack 27
  6861                           ;SendI2C@data stored from wreg
  6862                           	movwf	((c:SendI2C@data)),c
  6863  001E00  6E02               	line	170
  6864                           	
  6865                           l1916:
  6866  001E02                     ;main.c: 170:     ReadyI2C();
  6867                           	call	_ReadyI2C	;wreg free
  6868  001E02  ECC2  F00E         	line	171
  6869                           	
  6870                           l1918:
  6871  001E06                     ;main.c: 171:     SSPBUF = data;
  6872                           	movff	(c:SendI2C@data),(c:4041)	;volatile
  6873  001E06  C002  FFC9         	line	173
  6874                           	
  6875                           l131:
  6876  001E0A                     	return	;funcret
  6877  001E0A  0012               	opt stack 0
  6878                           GLOBAL	__end_of_SendI2C
  6879                           	__end_of_SendI2C:
  6880  001E0C                     	signat	_SendI2C,4217
  6881                           	global	_RepeatedStartI2C
  6882                           
  6883 ;; *************** function _RepeatedStartI2C *****************
  6884 ;; Defined at:
  6885 ;;		line 164 in file "main.c"
  6886 ;; Parameters:    Size  Location     Type
  6887 ;;		None
  6888 ;; Auto vars:     Size  Location     Type
  6889 ;;		None
  6890 ;; Return value:  Size  Location     Type
  6891 ;;                  1    wreg      void 
  6892 ;; Registers used:
  6893 ;;		wreg, status,2, status,0, cstack
  6894 ;; Tracked objects:
  6895 ;;		On entry : 0/0
  6896 ;;		On exit  : 0/0
  6897 ;;		Unchanged: 0/0
  6898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6899 ;;      Params:         0       0       0       0       0       0       0       0       0
  6900 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6901 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6902 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6903 ;;Total ram usage:        0 bytes
  6904 ;; Hardware stack levels used:    1
  6905 ;; Hardware stack levels required when called:    1
  6906 ;; This function calls:
  6907 ;;		_ReadyI2C
  6908 ;; This function is called by:
  6909 ;;		_ReadI2C
  6910 ;; This function uses a non-reentrant model
  6911 ;;
  6912                           psect	text30,class=CODE,space=0,reloc=2,group=0
  6913                           	line	164
  6914                           global __ptext30
  6915                           __ptext30:
  6916  001E26                     psect	text30
  6917                           	file	"main.c"
  6918                           	line	164
  6919                           	global	__size_of_RepeatedStartI2C
  6920                           	__size_of_RepeatedStartI2C	equ	__end_of_RepeatedStartI2C-_RepeatedStartI2C
  6921  0000                     	
  6922                           _RepeatedStartI2C:
  6923  001E26                     ;incstack = 0
  6924                           	opt	stack 27
  6925                           	line	165
  6926                           	
  6927                           l1924:
  6928  001E26                     ;main.c: 165:     ReadyI2C();
  6929                           	call	_ReadyI2C	;wreg free
  6930  001E26  ECC2  F00E         	line	166
  6931                           	
  6932                           l1926:
  6933  001E2A                     ;main.c: 166:     SSPCON2bits.RSEN = 1;
  6934                           	bsf	((c:4037)),c,1	;volatile
  6935  001E2A  82C5               	line	167
  6936                           	
  6937                           l128:
  6938  001E2C                     	return	;funcret
  6939  001E2C  0012               	opt stack 0
  6940                           GLOBAL	__end_of_RepeatedStartI2C
  6941                           	__end_of_RepeatedStartI2C:
  6942  001E2E                     	signat	_RepeatedStartI2C,89
  6943                           	global	_ReceiveI2C
  6944                           
  6945 ;; *************** function _ReceiveI2C *****************
  6946 ;; Defined at:
  6947 ;;		line 187 in file "main.c"
  6948 ;; Parameters:    Size  Location     Type
  6949 ;;  flag            1    wreg     unsigned char 
  6950 ;; Auto vars:     Size  Location     Type
  6951 ;;  flag            1    2[COMRAM] unsigned char 
  6952 ;;  buffer          1    3[COMRAM] unsigned char 
  6953 ;; Return value:  Size  Location     Type
  6954 ;;                  1    wreg      unsigned char 
  6955 ;; Registers used:
  6956 ;;		wreg, status,2, status,0, cstack
  6957 ;; Tracked objects:
  6958 ;;		On entry : 0/0
  6959 ;;		On exit  : 0/0
  6960 ;;		Unchanged: 0/0
  6961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6962 ;;      Params:         0       0       0       0       0       0       0       0       0
  6963 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6964 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6965 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6966 ;;Total ram usage:        3 bytes
  6967 ;; Hardware stack levels used:    1
  6968 ;; Hardware stack levels required when called:    1
  6969 ;; This function calls:
  6970 ;;		_ReadyI2C
  6971 ;; This function is called by:
  6972 ;;		_ReadI2C
  6973 ;; This function uses a non-reentrant model
  6974 ;;
  6975                           psect	text31,class=CODE,space=0,reloc=2,group=0
  6976                           	line	187
  6977                           global __ptext31
  6978                           __ptext31:
  6979  001BD4                     psect	text31
  6980                           	file	"main.c"
  6981                           	line	187
  6982                           	global	__size_of_ReceiveI2C
  6983                           	__size_of_ReceiveI2C	equ	__end_of_ReceiveI2C-_ReceiveI2C
  6984  0000                     	
  6985                           _ReceiveI2C:
  6986  001BD4                     ;incstack = 0
  6987                           	opt	stack 27
  6988                           ;ReceiveI2C@flag stored from wreg
  6989                           	movwf	((c:ReceiveI2C@flag)),c
  6990  001BD4  6E03               	line	189
  6991                           	
  6992                           l1928:
  6993  001BD6                     ;main.c: 188:     unsigned char buffer;;main.c: 189:     ReadyI2C();
  6994                           	call	_ReadyI2C	;wreg free
  6995  001BD6  ECC2  F00E         	line	190
  6996                           	
  6997                           l1930:
  6998  001BDA                     ;main.c: 190:     SSPCON2bits.RCEN = 1;
  6999                           	bsf	((c:4037)),c,3	;volatile
  7000  001BDA  86C5               	line	191
  7001                           ;main.c: 191:     ReadyI2C();
  7002                           	call	_ReadyI2C	;wreg free
  7003  001BDC  ECC2  F00E         	line	192
  7004                           	
  7005                           l1932:
  7006  001BE0                     ;main.c: 192:     buffer = SSPBUF;
  7007                           	movff	(c:4041),(c:ReceiveI2C@buffer)	;volatile
  7008  001BE0  CFC9 F004          	line	193
  7009                           ;main.c: 193:     ReadyI2C();
  7010                           	call	_ReadyI2C	;wreg free
  7011  001BE4  ECC2  F00E         	line	194
  7012                           	
  7013                           l1934:
  7014  001BE8                     ;main.c: 194:     SSPCON2bits.ACKDT = (flag==1)? 1 : 0;
  7015                           		decf	((c:ReceiveI2C@flag)),c,w
  7016  001BE8  0403               	btfsc	status,2
  7017  001BEA  B4D8               	goto	u1551
  7018  001BEC  EFFA  F00D         	goto	u1550
  7019  001BF0  EFFE  F00D         
  7020                           u1551:
  7021  001BF4                     	clrf	(??_ReceiveI2C+0+0)&0ffh,c
  7022  001BF4  6A02               	incf	(??_ReceiveI2C+0+0)&0ffh,c
  7023  001BF6  2A02               	goto	u1568
  7024  001BF8  EFFF  F00D         u1550:
  7025  001BFC                     	clrf	(??_ReceiveI2C+0+0)&0ffh,c
  7026  001BFC  6A02               u1568:
  7027  001BFE                     	swapf	(??_ReceiveI2C+0+0),c
  7028  001BFE  3A02               	rlncf	(??_ReceiveI2C+0+0),c
  7029  001C00  4602               	movf	((c:4037)),c,w	;volatile
  7030  001C02  50C5               	xorwf	(??_ReceiveI2C+0+0),c,w
  7031  001C04  1802               	andlw	not (((1<<1)-1)<<5)
  7032  001C06  0BDF               	xorwf	(??_ReceiveI2C+0+0),c,w
  7033  001C08  1802               	movwf	((c:4037)),c	;volatile
  7034  001C0A  6EC5               	line	195
  7035                           	
  7036                           l1936:
  7037  001C0C                     ;main.c: 195:     SSPCON2bits.ACKEN = 1;
  7038                           	bsf	((c:4037)),c,4	;volatile
  7039  001C0C  88C5               	line	196
  7040                           	
  7041                           l1938:
  7042  001C0E                     ;main.c: 196:     return buffer;
  7043                           	movf	((c:ReceiveI2C@buffer)),c,w
  7044  001C0E  5004               	goto	l143
  7045  001C10  EF0A  F00E         	
  7046                           l1940:
  7047  001C14                     	line	197
  7048                           	
  7049                           l143:
  7050  001C14                     	return	;funcret
  7051  001C14  0012               	opt stack 0
  7052                           GLOBAL	__end_of_ReceiveI2C
  7053                           	__end_of_ReceiveI2C:
  7054  001C16                     	signat	_ReceiveI2C,4217
  7055                           	global	_ReadyI2C
  7056                           
  7057 ;; *************** function _ReadyI2C *****************
  7058 ;; Defined at:
  7059 ;;		line 175 in file "main.c"
  7060 ;; Parameters:    Size  Location     Type
  7061 ;;		None
  7062 ;; Auto vars:     Size  Location     Type
  7063 ;;		None
  7064 ;; Return value:  Size  Location     Type
  7065 ;;                  1    wreg      void 
  7066 ;; Registers used:
  7067 ;;		wreg, status,2, status,0
  7068 ;; Tracked objects:
  7069 ;;		On entry : 0/0
  7070 ;;		On exit  : 0/0
  7071 ;;		Unchanged: 0/0
  7072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7073 ;;      Params:         0       0       0       0       0       0       0       0       0
  7074 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7075 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7076 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7077 ;;Total ram usage:        1 bytes
  7078 ;; Hardware stack levels used:    1
  7079 ;; This function calls:
  7080 ;;		Nothing
  7081 ;; This function is called by:
  7082 ;;		_StartI2C
  7083 ;;		_RepeatedStartI2C
  7084 ;;		_SendI2C
  7085 ;;		_StopI2C
  7086 ;;		_ReceiveI2C
  7087 ;; This function uses a non-reentrant model
  7088 ;;
  7089                           psect	text32,class=CODE,space=0,reloc=2,group=0
  7090                           	line	175
  7091                           global __ptext32
  7092                           __ptext32:
  7093  001D84                     psect	text32
  7094                           	file	"main.c"
  7095                           	line	175
  7096                           	global	__size_of_ReadyI2C
  7097                           	__size_of_ReadyI2C	equ	__end_of_ReadyI2C-_ReadyI2C
  7098  0000                     	
  7099                           _ReadyI2C:
  7100  001D84                     ;incstack = 0
  7101                           	opt	stack 27
  7102                           	line	176
  7103                           	
  7104                           l1838:
  7105  001D84                     ;main.c: 176:     while((SSPCON2 & 0x1F) || (SSPSTAT & 0x04));
  7106                           	goto	l1840
  7107  001D84  EFC6  F00E         	
  7108                           l135:
  7109  001D88                     	goto	l1840
  7110  001D88  EFC6  F00E         	
  7111                           l134:
  7112  001D8C                     	
  7113                           l1840:
  7114  001D8C                     	movff	(c:4037),??_ReadyI2C+0+0	;volatile
  7115  001D8C  CFC5 F001          	movlw	01Fh
  7116  001D90  0E1F               	andwf	(??_ReadyI2C+0+0),c
  7117  001D92  1601               	btfss	status,2
  7118  001D94  A4D8               	goto	u1471
  7119  001D96  EFCF  F00E         	goto	u1470
  7120  001D9A  EFD1  F00E         u1471:
  7121  001D9E                     	goto	l1840
  7122  001D9E  EFC6  F00E         u1470:
  7123  001DA2                     	
  7124                           l1842:
  7125  001DA2                     	
  7126                           	btfsc	((c:4039)),c,(2)&7	;volatile
  7127  001DA2  B4C7               	goto	u1481
  7128  001DA4  EFD6  F00E         	goto	u1480
  7129  001DA8  EFD8  F00E         u1481:
  7130  001DAC                     	goto	l1840
  7131  001DAC  EFC6  F00E         u1480:
  7132  001DB0                     	goto	l137
  7133  001DB0  EFDA  F00E         	
  7134                           l136:
  7135  001DB4                     	line	179
  7136                           	
  7137                           l137:
  7138  001DB4                     	return	;funcret
  7139  001DB4  0012               	opt stack 0
  7140                           GLOBAL	__end_of_ReadyI2C
  7141                           	__end_of_ReadyI2C:
  7142  001DB6                     	signat	_ReadyI2C,89
  7143                           psect	smallconst
  7144                           	db 0	; dummy byte at the end
  7145  00081A  00                 	global	__smallconst
  7146                           	global	__mediumconst
  7147                           	GLOBAL	__activetblptr
  7148                           __activetblptr	EQU	1
  7149  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
  7150                           	PSECT	rparam,class=COMRAM,space=1,noexec
  7151                           	GLOBAL	__Lrparam
  7152                           	FNCONF	rparam,??,?
  7153                           	GLOBAL	___rparam_used
  7154                           	___rparam_used EQU 1
  7155  0000                     	GLOBAL	___param_bank
  7156                           	___param_bank EQU 0
  7157  0000                     GLOBAL	__Lparam, __Hparam
  7158                           GLOBAL	__Lrparam, __Hrparam
  7159                           __Lparam	EQU	__Lrparam
  7160  0000                     __Hparam	EQU	__Hrparam
  7161  0000                     	end


Data Sizes:
    Strings     25
    Constant    0
    Data        73
    BSS         83
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     24     143
    BANK1           256      0      37
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[14]), STR_1(CODE[11]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> text(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> text(BANK0[20]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S870_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 20
		 -> text(BANK0[20]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 20
		 -> text(BANK0[20]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[14]), STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[14]), STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    xtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    WriteLCD@a	PTR unsigned char  size(2) Largest target is 20
		 -> text4(BANK0[13]), text3(BANK0[17]), text(BANK0[20]), text2(BANK1[19]), 
		 -> text1(BANK1[18]), 

    ReadI2C@Data	PTR unsigned char  size(2) Largest target is 14
		 -> GyrAccel(BANK0[14]), data(BANK0[1]), 

    WriteI2C@Data	PTR unsigned char  size(2) Largest target is 1
		 -> a(BANK0[1]), 


Critical Paths under _main in COMRAM

    _settingsIMU->_WriteI2C
    _WriteI2C->_SendI2C
    _settings->_LCD
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _clearLCD->_LCD
    _WriteLCD->_LCD
    _ReadI2C->_ReceiveI2C
    _StopI2C->_ReadyI2C
    _StartI2C->_ReadyI2C
    _SendI2C->_ReadyI2C
    _RepeatedStartI2C->_ReadyI2C
    _ReceiveI2C->_ReadyI2C

Critical Paths under _main in BANK0

    _main->_TestConnection
    _main->_start
    _start->_sprintf
    _TestConnection->_sprintf
    _sprintf->_vfprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   30407
                     _TestConnection
                           _WriteI2C
                           _settings
                        _settingsIMU
                              _start
 ---------------------------------------------------------------------------------
 (1) _start                                                2     2      0   13647
                                             22 BANK0      2     2      0
                            _ReadI2C
                           _WriteLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _settingsIMU                                          0     0      0    2274
                           _WriteI2C
                           _WriteLCD
                           _clearLCD
 ---------------------------------------------------------------------------------
 (2) _WriteI2C                                             8     3      5     795
                                              2 COMRAM     8     3      5
                            _SendI2C
                           _StartI2C
                            _StopI2C
 ---------------------------------------------------------------------------------
 (1) _settings                                             0     0      0      22
                                _LCD
 ---------------------------------------------------------------------------------
 (1) _TestConnection                                       2     2      0   13669
                                             22 BANK0      2     2      0
                            _ReadI2C
                           _WriteLCD
                           _clearLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6   11512
                                              6 BANK0     16    10      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   11007
                                             93 COMRAM     2     2      0
                                              0 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           44    38      6   10648
                                             66 COMRAM    27    21      6
                               _dtoa
                              _fputc
                               _xtoa
 ---------------------------------------------------------------------------------
 (5) _xtoa                                                39    28     11    4491
                                             27 COMRAM    39    28     11
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (6) _toupper                                              8     6      2     412
                                              6 COMRAM     8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (7) _islower                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _isalpha                                              6     4      2     161
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4586
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2937
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               6     4      2     166
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _clearLCD                                             0     0      0      22
                                _LCD
 ---------------------------------------------------------------------------------
 (2) _WriteLCD                                             6     1      5    1457
                                              2 COMRAM     6     1      5
                                _LCD
 ---------------------------------------------------------------------------------
 (3) _LCD                                                  2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadI2C                                              8     3      5     678
                                              4 COMRAM     8     3      5
                         _ReceiveI2C
                   _RepeatedStartI2C
                            _SendI2C
                           _StartI2C
                            _StopI2C
 ---------------------------------------------------------------------------------
 (3) _StopI2C                                              0     0      0       0
                           _ReadyI2C
 ---------------------------------------------------------------------------------
 (3) _StartI2C                                             0     0      0       0
                           _ReadyI2C
 ---------------------------------------------------------------------------------
 (3) _SendI2C                                              1     1      0      22
                                              1 COMRAM     1     1      0
                           _ReadyI2C
 ---------------------------------------------------------------------------------
 (3) _RepeatedStartI2C                                     0     0      0       0
                           _ReadyI2C
 ---------------------------------------------------------------------------------
 (3) _ReceiveI2C                                           3     3      0      45
                                              1 COMRAM     3     3      0
                           _ReadyI2C
 ---------------------------------------------------------------------------------
 (4) _ReadyI2C                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TestConnection
     _ReadI2C
       _ReceiveI2C
         _ReadyI2C
       _RepeatedStartI2C
         _ReadyI2C
       _SendI2C
         _ReadyI2C
       _StartI2C
         _ReadyI2C
       _StopI2C
         _ReadyI2C
     _WriteLCD
       _LCD
     _clearLCD
       _LCD
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _WriteI2C
     _SendI2C
       _ReadyI2C
     _StartI2C
       _ReadyI2C
     _StopI2C
       _ReadyI2C
   _settings
     _LCD
   _settingsIMU
     _WriteI2C
       _SendI2C
         _ReadyI2C
       _StartI2C
         _ReadyI2C
       _StopI2C
         _ReadyI2C
     _WriteLCD
       _LCD
     _clearLCD
       _LCD
   _start
     _ReadI2C
       _ReceiveI2C
         _ReadyI2C
       _RepeatedStartI2C
         _ReadyI2C
       _SendI2C
         _ReadyI2C
       _StartI2C
         _ReadyI2C
       _StopI2C
         _ReadyI2C
     _WriteLCD
       _LCD
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      25       7       14.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     18      8F       5       89.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     113      20        0.0%
DATA                 0      0     113       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Jul 19 10:37:43 2019

                        _a 00B2                          _i 006D                         l91 1D74  
                       l92 1D7C                         l93 1D80                         l94 1D80  
                       l97 1C54                ReadI2C@Data 0008                        l100 15E2  
                      l101 1600                        l102 161A                        l111 1872  
                      l120 176A                        l112 1856                        l121 179A  
                      l201 0C06                        l113 1894                        l105 1AF0  
                      l122 17B6                        l210 0DD4                        l202 0C3C  
                      l114 18B0                        l131 1E0A                        l211 0DDC  
                      l140 1E1C                        l212 0E46                        l204 0C32  
                      l108 1918                        l125 1E24                        l117 1778  
                      l205 0D54                        l134 1D8C                        l118 171E  
                      l214 0E02                        l206 0C58                        l222 0832  
                      l135 1D88                        l143 1C14                        l119 1756  
                      l231 08F8                        l136 1DB4                        l128 1E2C  
                      l152 195E                        l216 0E26                        l208 0DD8  
                      l240 09A2                        l224 0858                        l137 1DB4  
                      l153 1932                        l233 0904                        l154 1980  
                      l146 1E14                        l218 0E32                        l234 09E4  
                      l242 09BA                        l226 0860                        l155 1980  
                      l219 0E72                        l227 0882                        l244 0AE8  
                      l228 0A62                        l236 093C                        l252 10EC  
                      l260 10CE                        l149 1D48                        l229 08BE  
                      l253 0F8C                        l190 1672                        l246 0AE4  
                      l238 0952                        l191 16AC                        l247 0AE8  
                      l255 0F08                        l263 19C2                        l192 16D4  
                      l184 1644                        l248 0B28                        l256 112A  
                      l264 1998                        l193 16F0                        l249 0B54  
                      l257 1078                        l265 19DE                        l186 165E  
                      l266 19E6                        l259 0FD8                        l380 1262  
                      l188 1666                        l196 0BC2                        l381 127E  
                      l373 1166                        l189 168E                        l197 0BD8  
                      l382 12B6                        l374 119C                        l390 136E  
                      l383 12DA                        l375 1282                        l391 1398  
                      l199 0BFE                        l376 11E6                        l392 139C  
                      l377 11CE                        l393 13EE                        l378 11F8  
                      l394 140A                        l386 1316                        l379 11FC  
                      l395 1442                        l387 1348                        l396 1466  
                      l388 140E                        l389 1386                        l950 1C94  
                      l944 1BC6                        l946 1BD2                        l970 14F2  
                      l947 1BD2                        l971 1544                        l964 149A  
                      l956 1D0C                        l966 1490                        l967 1540  
                      l968 153C                        l976 1B6A                        l992 1B06  
                      l977 1B50                        l993 1AFE                        l978 1B8E  
                      l994 1B22                        l986 1A44                        l979 1B8E  
                      l995 1B42                        l989 1E2E                        _LCD 1D0E  
                      u820 147A                        u900 162C                        u821 1476  
                      u901 1628                        u830 148C                        u910 1652  
                      u831 1488                        u911 164E                        u840 14B8  
                      u920 16AC                        u841 14B4                        u921 16A8  
                      u850 14EE                        u930 16BC                        u851 14EA  
                      u931 16B8                        u940 1BAA                        u860 1B8A  
                      u941 1BA6                        u861 1B86                        u870 1B1E  
                      u950 1D02                        u871 1B1A                        u951 1CFC  
                      u960 1D04                        u880 1CC6                        u881 1CC0  
                      u970 1C8A                        u890 1CC8                        u971 1C84  
                      u980 1C8C                        u990 17E8                        u991 17E2  
                      _abs 1B90                        _pad 161C                        wreg 000FE8  
             __CFG_FOSC$HS 000000               __CFG_LVP$OFF 000000                       ?_LCD 0001  
             __CFG_WDT$OFF 000000                       l1000 182C                       l1002 17F2  
                     l1011 1CD0                       l1004 180A                       l1005 1834  
                     l2000 176E                       l2002 1778                       l2010 19FA  
                     ?_abs 0013                       l2004 179A                       l2012 1A02  
                     l2020 1C16                       l2006 179E                       l2014 1A0A  
                     l2030 1C4C                       l2022 1C1A                       l2016 1A2E  
                     l2008 19E8                       l2040 1562                       l2032 1C4E  
                     l2024 1C3A                       l2018 1A44                       l2050 15DC  
                     l2042 157C                       l2034 1C50                       l2026 1C40  
                     l2044 1590                       l2052 15E2                       l2036 1546  
                     l2028 1C46                       l2060 1AA4                       l2054 15FA  
                     l2046 15A8                       l2038 154A                       l2062 1ABC  
                     l2070 18E4                       l1600 168E                       l2056 1600  
                     l2048 15C4                       l2064 1AD6                       l2072 1900  
                     l2080 1D6C                       l1610 1BAA                       l1602 16BC  
                     l2058 1AA0                       l2066 18B2                       l2082 1D74  
                     l2074 1D4A                       l1700 1400                       l1604 16D4  
                     l1612 1CD2                       l1620 17B8                       l2068 18CC  
                     l2076 1D4E                       l1630 112C                       l1702 140E  
                     l1550 1468                       l1606 16F0                       l1710 0B56  
                     l1614 1D0C                       l1622 17F2                       l2078 1D68  
                     l1640 1174                       l1632 1130                       l1704 141E  
                     l1608 1B90                       l1560 14F2                       l1552 147A  
                     l1720 0BD8                       l1712 0B76                       l1616 1C56  
                     l1624 180A                       l1800 0952                       l1650 11CE  
                     l1642 1194                       l1634 113E                       l1706 1442  
                     l1562 1544                       l1554 1490                       l1570 1B6A  
                     l1730 0C3C                       l1722 0BF2                       l1714 0B9E  
                     l1618 1C94                       l1626 181C                       l1802 0964  
                     l1810 09E4                       l1900 1D10                       l1660 125C  
                     l1652 11E6                       l1644 119C                       l1636 115E  
                     l1708 1466                       l1556 149A                       l1564 1B44  
                     l1580 1B42                       l1572 1AF2                       l1740 0CE6  
                     l1732 0C44                       l1724 0C0E                       l1716 0BC2  
                     l1628 1828                       l1820 0A7E                       l1812 09F4  
                     l1804 09A2                       l1910 1D38                       l1902 1D12  
                     l1670 12B6                       l1662 1262                       l1654 11FC  
                     l1646 11A8                       l1638 1166                       l1558 14B8  
                     l1566 1B50                       l1574 1AFE                       l1590 1644  
                     l1750 0DA6                       l1742 0CEC                       l1734 0C58  
                     l1726 0C20                       l1718 0BD2                       l1582 1C96  
                     l1830 0AFE                       l1822 0A9C                       l1814 09FA  
                     l1806 09BA                       l1840 1D8C                       l1912 1E1E  
                     l1920 1E16                       l1904 1D22                       l1672 12DA  
                     l1664 1274                       l1656 120E                       l1648 11C6  
                     l1680 130E                       l1568 1B62                       l1576 1B06  
                     l1592 1652                       l1760 0E08                       l1752 0DC0  
                     l1736 0C5E                       l1744 0D54                       l1728 0C32  
                     l1584 1CD0                       l1832 0B0E                       l1824 0AB6  
                     l1816 0A00                       l1808 09CC                       l1842 1DA2  
                     l1930 1BDA                       l1914 1E22                       l1922 1E1A  
                     l1906 1D26                       l1658 123C                       l1666 1282  
                     l1690 136E                       l1682 1316                       l1674 12DC  
                     l1578 1B22                       l1594 165E                       l1586 161C  
                     l1770 0E72                       l1762 0E1A                       l1746 0D6E  
                     l1754 0DDC                       l1738 0CE0                       l1834 0B28  
                     l1826 0AD0                       l1818 0A62                       l1850 0EB8  
                     l1940 1C14                       l1932 1BE0                       l1924 1E26  
                     l1916 1E02                       l1908 1D36                       l1668 1292  
                     l1692 1386                       l1684 1324                       l1676 12E0  
                     l1596 1672                       l1588 162C                       l1764 0E26  
                     l1756 0DEE                       l1748 0D8C                       l1836 0B54  
                     l1828 0AF8                       l1780 0876                       l1772 081C  
                     l1860 0F88                       l1852 0EBC                       l1844 0E74  
                     l1838 1D84                       l1934 1BE8                       l1926 1E2A  
                     l1918 1E06                       l1694 139C                       l1686 1348  
                     l1678 12EE                       l1598 1686                       l1766 0E32  
                     l1758 0E02                       l1790 08C4                       l1782 0882  
                     l1774 082C                       l1870 0FFC                       l1862 0F8C  
                     l1854 0EE0                       l1846 0E98                       l1942 1982  
                     l1950 1838                       l1936 1C0C                       l1928 1BD6  
                     l1696 13CA                       l1688 1366                       l1768 0E46  
                     l1792 08CC                       l1784 08A2                       l1776 0832  
                     l1880 10AA                       l1872 1038                       l1864 0FB0  
                     l1856 0F08                       l1848 0EA6                       l1944 198A  
                     l1960 1872                       l1952 1848                       l1938 1C0E  
                     l1970 191A                       l1698 13EE                       l1794 08E8  
                     l1786 08AA                       l1778 084C                       l1890 10E8  
                     l1882 10BE                       l1874 1074                       l1866 0FD8  
                     l1858 0F50                       l1946 1998                       l1962 1894  
                     l1954 1856                       l1980 1940                       l1972 191C  
                     l1796 08F8                       l1788 08BE                       l1884 10CA  
                     l1868 0FEE                       l1876 1078                       l1892 10EC  
                     l1948 19C2                       l1964 1898                       l1956 1864  
                     l1990 1710                       l1982 1944                       l1974 1922  
                     l1966 1E0C                       l1798 093C                       l1894 1110  
                     l1878 109C                       l1886 10CE                       l1958 1868  
                     ?_pad 0011                       l1992 171E                       l1984 1954  
                     l1976 1924                       l1968 1E0E                       l1896 111E  
                     l1888 10DC                       l1994 1742                       l1978 1932  
                     l1986 195E                       l1898 112A                       l1996 1756  
                     l1988 16F4                       l1998 176A                       STR_1 080F  
                     STR_2 0801                       u1000 17EA                       u1010 181C  
                     u1011 1818                       u1020 113E                       u1100 1324  
                     u1021 113A                       u1101 1320                       u1030 1174  
                     u1110 1366                       u1031 1170                       u1111 1362  
                     u1120 1394                       u1200 0C20                       u1041 11A2  
                     u1121 1390                       u1201 0C1C                       u1050 11C6  
                     u1130 13CA                       u1210 0C2E                       u1051 11C2  
                     u1131 13C6                       u1211 0C2A                       u1060 11F4  
                     u1140 141E                       u1220 0D6E                       u1300 082C  
                     u1061 11F0                       u1141 141A                       u1221 0D6A  
                     u1301 0828                       u1070 123C                       u1230 0D8C  
                     u1150 0B86                       u1310 084C                       u1071 1238  
                     u1231 0D88                       u1151 0B80                       u1311 0848  
                     u1080 1292                       u1240 0DA6                       u1160 0B88  
                     u1400 0A38                       u1320 0876                       u1081 128E  
                     u1241 0DA2                       u1321 0872                       u1090 12EE  
                     u1250 0DC0                       u1170 0B9E                       u1410 0A7E  
                     u1330 08E8                       u1091 12EA                       u1251 0DBC  
                     u1171 0B9A                       u1411 0A7A                       u1331 08E4  
                     u1260 0DD0                       u1180 0BD2                       u1420 0A9C  
                     u1340 0932                       u1500 0EE0                       u1261 0DCC  
                     u1181 0BCE                       u1421 0A98                       u1405 0A26  
                     u1341 092C                       u1501 0EDC                       u1270 0DEE  
                     u1190 0BF2                       u1430 0AB6                       u1350 0934  
                     u1510 0F04                       _LATB 000F8A                       u1271 0DEA  
                     u1191 0BEE                       u1431 0AB2                       u1511 0F00  
                     u1600 1742                       u1280 0DFE                       u1440 0AD0  
                     u1360 0964                       u1520 0FB0                       _LATD 000F8C  
                     u1601 173E                       u1281 0DFA                       u1441 0ACC  
                     u1361 0960                       u1521 0FAC                       _LATE 000F8D  
                     u1610 1796                       u1290 0E1A                       u1450 0AE0  
                     u1370 0998                       u1530 0FD4                       u1611 1792  
                     u1291 0E16                       u1451 0ADC                       u1371 0992  
                     u1531 0FD0                       u1460 0AF8                       u1380 099A  
                     u1540 109C                       u1620 1590                       u1461 0AF4  
                     u1541 1098                       u1621 158C                       u1470 1DA2  
                     u1550 1BFC                       u1390 09CC                       u1471 1D9E  
                     u1551 1BF4                       u1391 09C8                       u1480 1DB0  
                     u1481 1DAC                       u1490 0E98                       u1570 19DE  
                     u1491 0E94                       u1571 19DA                       u1580 1890  
                     u1637 18A2                       u1581 188C                       u1590 197C  
                     u1591 1978                       u1647 160C                       u1568 1BFE  
                     u1657 194A                       u1667 1D18                       u1677 1D2C  
                     u1687 1D3E                       u1697 17A8                       abs@a 0013  
                     _data 00B1                       _dbuf 006F                       _main 1D4A  
                     _dtoa 0B56                       _byte 0060                       _prec 0067  
                     _nout 0063                       pad@i 0018                       pad@p 0015  
                     _text 008F                       fsr1h 000FE2                       fsr2h 000FDA  
                     indf2 000FDF                       fsr1l 000FE1                       pad@w 001A  
                     fsr2l 000FD9                       _word 00B3                       _xtoa 081C  
            ReadI2C@Nbytes 0006                       start 0000                _toupper$933 000D  
             ___param_bank 000000            __end_of_ReadI2C 17B8                      ??_LCD 0001  
          __end_of_SendI2C 1E0C                      ??_abs 0015                      ??_pad 0017  
          __end_of_StopI2C 1E1E            __end_of___aodiv 12DC                      ?_main 0001  
                    ?_dtoa 001C            __end_of___aomod 1468                      ?_xtoa 001C  
             vfpfcnvrt@fmt 0045               vfpfcnvrt@llu 0055                      _TRISD 000F95  
                    _TRISE 000F96             ReadI2C@Address 000C    __size_of_TestConnection 00D6  
                    _flags 0069                      _fputc 1468            __end_of_isalpha 1C96  
                    _fputs 1B44                      _text1 0113                      _text2 0100  
                    _text3 00B9                      _text4 00CA                      pad@fp 0011  
                    _width 0065                      _putch 1E2E                      _start 18B2  
                    dtoa@d 001E                      dtoa@i 003E                      dtoa@n 0036  
                    dtoa@p 0030                      dtoa@s 0034                      dtoa@w 0032  
          __end_of_islower 1CD2            __end_of_isupper 1D0E                      tablat 000FF5  
                    status 000FD8            __end_of_sprintf 1A46                      xtoa@c 0041  
                    xtoa@d 001E                      xtoa@i 003F                      xtoa@n 0037  
                    xtoa@p 0033                      xtoa@w 0035                      xtoa@x 0026  
          __end_of_toupper 1836          ?_RepeatedStartI2C 0001            __initialization 1A46  
             __end_of_main 1D84               __end_of_dtoa 0E74         ??_RepeatedStartI2C 0002  
             __end_of_xtoa 0B56           __end_of_ReadyI2C 1DB6                     ??_main 0060  
                   ??_dtoa 0026                 _ReceiveI2C 1BD4                     ??_xtoa 0027  
            __activetblptr 000001                SendI2C@data 0002           __end_of_StartI2C 1E26  
                   ?_fputc 0001                     ?_fputs 000A           __end_of_WriteI2C 18B2  
                   ?_putch 0001                     ?_start 0001           __end_of_WriteLCD 1982  
                   _SSPADD 000FC8                     _SSPBUF 000FC9                  ??_ReadI2C 000A  
         __end_of_clearLCD 1E16                  ??_SendI2C 0002               vfprintf@cfmt 005E  
                ??_StopI2C 0002                  ??___aodiv 0011                  ??___aomod 0011  
                   clear_0 1A8C                     pad@buf 0013               WriteI2C@Data 0004  
                   dtoa@fp 001C                     _strlen 1AF2                     fputc@c 0001  
                   fputs@c 000E                     fputs@i 000F                     fputs@s 000A  
                ??_isalpha 0003            ReadI2C@Register 0005                  ??_islower 0003  
             __mediumconst 0000           __end_of_settings 1C56                     tblptrh 000FF7  
                ??_isupper 0003                     tblptrl 000FF6                     tblptru 000FF8  
                   putch@c 0001           __end_of_vfprintf 19E8                  ??_sprintf 0060  
                   xtoa@fp 001C               ?_settingsIMU 0001                  ??_toupper 0009  
             WriteLCD@Size 0006                 __accesstop 0060    __end_of__initialization 1A92  
            ___rparam_used 000001             __pcstackCOMRAM 0001               __pidataBANK0 1DDB  
             __pidataBANK1 1DB6              __end_of_fputc 1546              __end_of_fputs 1B90  
            __end_of_putch 1E30              __end_of_start 191A                ?_ReceiveI2C 0001  
           _TestConnection 1546                    ??_fputc 0005                    ??_fputs 000E  
                  ??_putch 0001                    ??_start 00ED                    LCD@data 0002  
               __pbssBANK0 0060                  ?_ReadyI2C 0001                  ?_StartI2C 0001  
                ?_WriteI2C 0003                  ?_WriteLCD 0003                    ?_strlen 0001  
   __end_of_TestConnection 161C                  ?_clearLCD 0001         __size_of_vfpfcnvrt 02B8  
                  _SSPCON1 000FC6                    _SSPCON2 000FC5                    _SSPSTAT 000FC7  
               ??_ReadyI2C 0001                    _ReadI2C 16F2        __size_of_ReceiveI2C 0042  
                  _SendI2C 1E00                    __Hparam 0000                    __Lparam 0000  
                  _StopI2C 1E16                  ?_settings 0001                    ___aodiv 112C  
               ??_StartI2C 0002                    ___aomod 12DC                  ?_vfprintf 00D7  
             __psmallconst 0800                    __pcinit 1A46                 ??_WriteI2C 0008  
               ??_WriteLCD 0008                    __ramtop 0800                    __ptext0 1D4A  
                  __ptext1 18B2                    __ptext2 1AA0                    __ptext3 1836  
                  __ptext4 1C16                    __ptext5 1546                    __ptext6 19E8  
                  __ptext7 1982                    __ptext8 0E74                    __ptext9 081C  
          ?_TestConnection 0001               __size_of_LCD 003C            __size_of_strlen 0052  
             __size_of_abs 0044               __size_of_pad 00D6                    _isalpha 1C56  
__size_of_RepeatedStartI2C 0008                 ??_clearLCD 0003                    _islower 1C96  
                  _isupper 1CD2                 _raw_accelx 006B                    _sprintf 19E8  
                  _toupper 17B8       end_of_initialization 1A92                    fputc@fp 0003  
     __size_of_settingsIMU 0052                    fputs@fp 000C          __end_of_vfpfcnvrt 112C  
                  postdec1 000FE5                    postdec2 000FDD                 ??_settings 0003  
                  postinc0 000FEE                    postinc1 000FE6                    postinc2 000FDE  
               ??_vfprintf 005E                    strlen@a 0005                    strlen@s 0001  
                _TRISBbits 000F93             ReceiveI2C@flag 0003           WriteI2C@Register 0003  
              vfpfcnvrt@ap 0047                vfpfcnvrt@fp 0043                vfpfcnvrt@ll 004D  
             ??_ReceiveI2C 0002             __end_of_strlen 1B44        start_initialization 1A46  
              __end_of_LCD 1D4A                __end_of_abs 1BD4                __end_of_pad 16F2  
        __size_of_ReadyI2C 0032         __end_of_ReceiveI2C 1C16                vfprintf@fmt 00D9  
              __pdataBANK0 00B3                __pdataBANK1 0100          __size_of_StartI2C 0008  
                 ??_strlen 0003          __size_of_WriteI2C 007C          __size_of_WriteLCD 0068  
         _RepeatedStartI2C 1E26              __pcstackBANK0 00D7           ___aodiv@dividend 0001  
        __size_of_clearLCD 000A                   ?_ReadI2C 0005                  WriteLCD@a 0003  
                 ?_SendI2C 0001                   ?_StopI2C 0001                   ?___aodiv 0001  
                 ?___aomod 0001           ___aodiv@quotient 0013           ??_TestConnection 00ED  
        __size_of_settings 0040          WriteLCD@DDRAM_RAW 0005          __size_of_vfprintf 0066  
              __smallconst 0800                   ?_isalpha 0001                   ?_islower 0001  
                 ?_isupper 0001                   ?_sprintf 00DD             __size_of_fputc 00DE  
           __size_of_fputs 004C                   ?_toupper 0007             __size_of_putch 0002  
           __size_of_start 0068                   _LATBbits 000F8A                   _LATEbits 000F8D  
                _vfpfcnvrt 0E74            WriteI2C@Address 000A                 vfpfcnvrt@c 005D  
            ??_settingsIMU 000B                  copy_data0 1A5A                  copy_data1 1A7A  
                 _GyrAccel 00A3                   _ReadyI2C 1D84           __size_of_ReadI2C 00C6  
                 __Hrparam 0000           __size_of_SendI2C 000C                 vfprintf@ap 00DB  
                 __Lrparam 0000                 vfprintf@fp 00D7               __Lsmallconst 0800  
                 _StartI2C 1E1E           __size_of_StopI2C 0008           __size_of___aodiv 01B0  
         __size_of___aomod 018C                 ?_vfpfcnvrt 0043                   _WriteI2C 1836  
                 _WriteLCD 191A            ___aodiv@divisor 0009            ___aodiv@counter 0011  
               sprintf@fmt 00DF                 sprintf@ret 00E3                   _clearLCD 1E0C  
         __size_of_isalpha 0040                   _dtoa$379 002E           __size_of_islower 003C  
                 __ptext10 17B8                   __ptext11 1C96                   __ptext20 1B90  
                 __ptext12 1CD2                   __ptext21 12DC                   __ptext13 1C56  
                 __ptext30 1E26                   __ptext22 112C                   __ptext14 0B56  
                 __ptext31 1BD4                   __ptext23 1E0C                   __ptext15 161C  
                 __ptext32 1D84                   __ptext24 191A                   __ptext16 1AF2  
                 __ptext25 1D0E                   __ptext17 1B44                   __ptext26 16F2  
                 __ptext18 1468                   __ptext27 1E16                   __ptext19 1E2E  
                 __ptext28 1E1E                   __ptext29 1E00           __size_of_isupper 003C  
         __size_of_sprintf 005E           __size_of_toupper 007E              __size_of_main 003A  
            __size_of_dtoa 031E              __size_of_xtoa 033A        __end_of_settingsIMU 1AF2  
 __end_of_RepeatedStartI2C 1E2E                   _settings 1C16                   _xtoa$390 002F  
                 _xtoa$391 0031                   _vfprintf 1982             WriteI2C@Ndatos 0006  
         ___aomod@dividend 0001                   isalpha@c 0001                  sprintf@ap 00E5  
                 islower@c 0001                   isupper@c 0001            ___aomod@divisor 0009  
              ??_vfpfcnvrt 0049            ___aomod@counter 0011                   sprintf@f 00E7  
                 sprintf@s 00DD                   toupper@c 0007                _SSPCON2bits 000FC5  
              _settingsIMU 1AA0               ___aodiv@sign 0012               ___aomod@sign 0012  
         ReceiveI2C@buffer 0004  
